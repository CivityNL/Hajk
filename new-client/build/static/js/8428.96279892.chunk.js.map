{"version":3,"file":"static/js/8428.96279892.chunk.js","mappings":"uQAQMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAKJ,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IALRC,MAAQ,CACNC,gBAAiB,IAGA,EAMnBC,kBAAoB,WAClB,MAAkD,EAAKH,MAA/CI,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,KAEnCC,EAAe,EAAKC,mBACxBJ,EACAC,EACAC,GAEFG,OAAOC,KAAKH,GAAcI,SAAQ,SAACC,GACjC,EAAKC,mBAAmBN,EAAaK,GAAMN,EAC5C,IAED,EAAKQ,SAAS,CAAEZ,gBAAiB,EAAKA,iBACvC,EAnBkB,EAsCnBW,mBAAqB,SAACE,EAAUT,GAE9B,GAAa,YAATA,IAC8B,IAA5BS,EAASC,eADf,CAMA,IAAIC,GAAuB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,mBAAoB,IAC7CC,EAAmB,EACnBC,EAAQ,EAKRL,EAASM,WAAWC,SACtBF,IACAH,IACAE,GAAoBJ,EAASM,WAAWC,QAIrCP,EAASA,UACZ,EAAKb,gBAAgBqB,KAAK,CACxBC,MAAOT,EAASS,MAChBJ,MAAOD,EACPH,eAAgBD,EAASC,iBAKzBD,EAASU,YACXL,GACaH,GACXF,EAASU,SAASd,SAAQ,SAACe,GACzB,EAAKxB,gBAAgBqB,KAAK,CACxBC,MAAOE,EAAQC,OACfP,MAAOD,IAET,EAAKS,0BACHF,EACAT,EACAG,EAAQ,EACRD,EAAmB,EAEtB,GAvCJ,CA0CF,EAtFkB,EAwFnBS,0BAA4B,SAC1BF,EACAT,EACAG,EACAD,GAEIO,EAAQD,UAAYL,GAASH,GAC/BS,EAAQD,SAASd,SAAQ,SAACkB,GACxB,EAAK3B,gBAAgBqB,KAAK,CACxBC,MAAOK,EAAWF,OAClBP,MAAOD,IAET,EAAKS,0BACHC,EACAZ,EACAG,EAAQ,EACRD,EAAmB,EAEtB,GAEJ,EA1GC,EAAKjB,gBAAkB,GACvB,EAAK4B,qBAAsB,EAHV,CAIlB,CA4IA,OA5IA,0CAiBD,SAAmB1B,EAAmBC,GACpC,IAAI0B,GAAI,UAAQ3B,GAahB,OAXAK,OAAOC,KAAKqB,GAAMpB,SAAQ,SAACC,GACzB,IAAIoB,EAAUD,EAAKnB,GACnB,GAAIoB,EAAQjB,SAAU,CAEpB,IAAIkB,EAAU5B,EAAa6B,MACzB,SAACC,GAAD,OAASA,EAAIC,mBAAqBJ,EAAQjB,QAA1C,IAGFgB,EAAKnB,GAAKa,SAAWQ,EAAQR,QAC9B,CACF,IACMM,CACR,uBA0ED,WACE,IAAQ7B,EAAoBmC,KAAKpC,MAAzBC,gBACR,OACE,UAAC,KAAD,CAAMoC,WAAS,EAACC,GAAI,CAAEC,eAAgB,UAAtC,WACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAc,EAAvC,yCAGA,SAAC,IAAD,CAAMC,MAAO,CAAEC,MAAO,QAAUC,gBAAc,EAA9C,SACG3C,EAAgB4C,KAAI,SAAC/B,EAAUgC,GAC9B,OAAOhC,EAASC,gBACd,SAAC,KAAD,CAEEgC,OAAO,EACPT,GAAI,CACFU,YAAa,EAAqB,EAAjBlC,EAASK,OAJ9B,UAOE,SAAC,IAAD,UAAeL,EAASS,SANnBuB,EAmBV,QAIR,OArJGhD,CAAwBmD,EAAAA,eAwJ9B,WAAeC,EAAAA,EAAAA,GAAUpD,E","sources":["plugins/DocumentHandler/printMenu/TableOfContents.js"],"sourcesContent":["import React from \"react\";\nimport { withTheme } from \"@emotion/react\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport List from \"@mui/material/List\";\nimport { Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nclass TableOfContents extends React.PureComponent {\n  state = {\n    titlesAndLevels: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.titlesAndLevels = [];\n    this.previousGroupHeader = false;\n  }\n\n  componentDidMount = () => {\n    const { documentMenuState, allDocuments, mode } = this.props;\n\n    const tocStructure = this.createTocStructure(\n      documentMenuState,\n      allDocuments,\n      mode\n    );\n    Object.keys(tocStructure).forEach((key) => {\n      this.setTitlesAndLevels(tocStructure[key], mode);\n    });\n\n    this.setState({ titlesAndLevels: this.titlesAndLevels });\n  };\n\n  createTocStructure(documentMenuState, allDocuments) {\n    let menu = { ...documentMenuState };\n    //add the chapters from all documents onto the documentMenuState\n    Object.keys(menu).forEach((key) => {\n      let menuDoc = menu[key];\n      if (menuDoc.document) {\n        //get the corresponding chapters from allDocuments.\n        let jsonDoc = allDocuments.find(\n          (doc) => doc.documentFileName === menuDoc.document\n        );\n        //add the chapters to our doc in the menuState.\n        menu[key].chapters = jsonDoc.chapters;\n      }\n    });\n    return menu;\n  }\n\n  setTitlesAndLevels = (document, mode) => {\n    //If the chosen config for table of contents is to only include printed documents in the toc. skip the document if it's not chosen for print.\n    if (mode === \"partial\") {\n      if (document.chosenForPrint !== true) {\n        return;\n      }\n    }\n\n    let levelsToShow = document?.tocChapterLevels || 100;\n    let indentationLevel = 0;\n    let level = 0;\n\n    /*If a document is under a menu parent, push the level up, as the levelsToShow property\n    in the document configuration is specific to that document, and does not take into account. that having\n    a parent document may change it's level*/\n    if (document.allParents.length) {\n      level++;\n      levelsToShow++;\n      indentationLevel += document.allParents.length;\n    }\n\n    //Add the menu document title if it is a menu parent that just holds other documents;\n    if (!document.document) {\n      this.titlesAndLevels.push({\n        title: document.title,\n        level: indentationLevel,\n        chosenForPrint: document.chosenForPrint,\n      });\n    }\n\n    //add the documents chapters to the table of contents.\n    if (document.chapters) {\n      level++;\n      if (level <= levelsToShow) {\n        document.chapters.forEach((chapter) => {\n          this.titlesAndLevels.push({\n            title: chapter.header,\n            level: indentationLevel,\n          });\n          this.setChapterTitlesAndLevels(\n            chapter,\n            levelsToShow,\n            level + 1,\n            indentationLevel + 1\n          );\n        });\n      }\n    }\n  };\n\n  setChapterTitlesAndLevels = (\n    chapter,\n    levelsToShow,\n    level,\n    indentationLevel\n  ) => {\n    if (chapter.chapters && level <= levelsToShow) {\n      chapter.chapters.forEach((subChapter) => {\n        this.titlesAndLevels.push({\n          title: subChapter.header,\n          level: indentationLevel,\n        });\n        this.setChapterTitlesAndLevels(\n          subChapter,\n          levelsToShow,\n          level + 1,\n          indentationLevel + 1\n        );\n      });\n    }\n  };\n\n  render() {\n    const { titlesAndLevels } = this.state;\n    return (\n      <Grid container sx={{ pageBreakAfter: \"always\" }}>\n        <Typography variant=\"h4\" gutterBottom={true}>\n          Innehållsförteckning\n        </Typography>\n        <List style={{ width: \"100%\" }} disablePadding>\n          {titlesAndLevels.map((document, index) => {\n            return document.chosenForPrint ? (\n              <ListItem\n                key={index}\n                dense={true}\n                sx={{\n                  paddingLeft: 1 + document.level * 3,\n                }}\n              >\n                <ListItemText>{document.title}</ListItemText>\n              </ListItem>\n            ) : (\n              <ListItem\n                dense={true}\n                key={index}\n                sx={{\n                  paddingLeft: 1 + document.level * 3,\n                }}\n              >\n                <ListItemText>{document.title}</ListItemText>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Grid>\n    );\n  }\n}\n\nexport default withTheme(TableOfContents);\n"],"names":["TableOfContents","props","state","titlesAndLevels","componentDidMount","documentMenuState","allDocuments","mode","tocStructure","createTocStructure","Object","keys","forEach","key","setTitlesAndLevels","setState","document","chosenForPrint","levelsToShow","tocChapterLevels","indentationLevel","level","allParents","length","push","title","chapters","chapter","header","setChapterTitlesAndLevels","subChapter","previousGroupHeader","menu","menuDoc","jsonDoc","find","doc","documentFileName","this","container","sx","pageBreakAfter","variant","gutterBottom","style","width","disablePadding","map","index","dense","paddingLeft","React","withTheme"],"sourceRoot":""}