{"version":3,"file":"static/js/4513.f6c52e3a.chunk.js","mappings":"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","sources":["plugins/Buffer/BufferView.js","../node_modules/@mui/icons-material/AddBox.js","../node_modules/@mui/icons-material/LayersClear.js"],"sourcesContent":["import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\nimport Grid from \"@mui/material/Grid\";\nimport AddIcon from \"@mui/icons-material/AddBox\";\nimport ClearIcon from \"@mui/icons-material/LayersClear\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Step, StepContent, StepLabel, Stepper } from \"@mui/material\";\nimport { withSnackbar } from \"notistack\";\n\nconst StyledToggleButton = styled(ToggleButton)(({ theme }) => ({\n  width: \"100%\",\n  paddingTop: 5,\n  paddingBottom: 5,\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.primary,\n}));\n\nclass BufferView extends React.PureComponent {\n  state = {\n    name: \"\",\n    isSelecting: false,\n    distance: 1000,\n    activeStep: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.model = this.props.model;\n    this.app = this.props.app;\n    this.globalObserver = this.props.app.globalObserver;\n    this.props.localObserver.subscribe(\"resetView\", () => {\n      this.setState({ activeStep: 0, isSelecting: false });\n    });\n  }\n\n  setSelecting = () => {\n    this.setState({ isSelecting: !this.state.isSelecting }, () => {\n      this.props.model.activateSelecting(this.state.isSelecting);\n    });\n  };\n\n  setDistance = (e) => {\n    this.setState({ distance: e.target.value });\n  };\n\n  handleNext = () => {\n    // Some special handling for going from step 1 to 2:\n    //  - prevent action if no features have been selected\n    //  - if there are selected features, abort feature selection if user forgot to\n    let isSelecting = null;\n    if (this.state.activeStep === 0) {\n      if (this.props.model.highlightSource.getFeatures().length === 0) {\n        this.props.enqueueSnackbar(\n          \"Du måste markera minst ett objekt i kartan för att kunna buffra\",\n          {\n            variant: \"error\",\n          }\n        );\n        return;\n      }\n      this.props.model.activateSelecting(false);\n      isSelecting = false; // Prepare the state variable for setting later\n    }\n\n    const activeStep = this.state.activeStep + 1;\n    this.setState({\n      activeStep, // Always set active step to current (new) value\n      ...(isSelecting !== null && { isSelecting }), // Set isSelecting only if it isn't null\n    });\n  };\n\n  handlePrev = () => {\n    const activeStep = this.state.activeStep - 1;\n    this.setState({ activeStep });\n  };\n\n  getNextButtonLabel = () => {\n    let l = null;\n    switch (this.state.activeStep) {\n      case 1:\n        l = \"Buffra\";\n        break;\n      case 2:\n        l = \"Börja om\";\n        break;\n      default:\n        l = \"Nästa\";\n        break;\n    }\n    return l;\n  };\n\n  renderPrevButton = () => {\n    return (\n      <Grid item xs={6}>\n        <Button\n          fullWidth\n          disabled={this.state.activeStep === 0}\n          onClick={this.handlePrev}\n        >\n          Föregående\n        </Button>\n      </Grid>\n    );\n  };\n\n  renderClearButton = () => {\n    return (\n      (this.model.highlightSource.getFeatures().length !== 0 ||\n        this.model.bufferSource.getFeatures().length !== 0) && (\n        <Grid item xs={12}>\n          <Button\n            fullWidth\n            onClick={() => {\n              this.model.clear();\n              // The clear() above didn't cause any changes to this components\n              // state, hence we must force update… sorry! :/\n              this.forceUpdate();\n            }}\n          >\n            <ClearIcon /> Rensa\n          </Button>\n        </Grid>\n      )\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n          <Step key=\"1\">\n            <StepLabel>Välj objekt att buffra</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                {this.renderClearButton()}\n                <Grid item xs={12}>\n                  <Tooltip disableInteractive title=\"Markera flera objekt\">\n                    <StyledToggleButton\n                      onChange={this.setSelecting}\n                      selected={this.state.isSelecting}\n                      value=\"isSelecting\"\n                    >\n                      <AddIcon />\n                      Välj objekt\n                    </StyledToggleButton>\n                  </Tooltip>\n                </Grid>\n                {this.renderPrevButton()}\n                <Grid item xs={6}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleNext}\n                  >\n                    Nästa\n                  </Button>\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n          <Step key=\"2\">\n            <StepLabel>Ange bufferavstånd</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    value={this.state.distance}\n                    onChange={this.setDistance}\n                    label=\"Bufferavstånd (i meter)\"\n                  />\n                </Grid>\n                {this.renderPrevButton()}\n                <Grid item xs={6}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      this.handleNext();\n                      this.props.model.bufferFeatures(this.state.distance);\n                    }}\n                  >\n                    Buffra\n                  </Button>\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n          <Step key=\"3\">\n            <StepLabel>Klart</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                {this.renderPrevButton()}\n                <Grid item xs={6}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      this.props.model.clear();\n                      this.setState({ activeStep: 0 });\n                    }}\n                  >\n                    Rensa\n                  </Button>\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n        </Stepper>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(BufferView);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddBox');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m19.81 14.99 1.19-.92-1.43-1.43-1.19.92 1.43 1.43zm-.45-4.72L21 9l-9-7-2.91 2.27 7.87 7.88 2.4-1.88zM3.27 1 2 2.27l4.22 4.22L3 9l1.63 1.27L12 16l2.1-1.63 1.43 1.43L12 18.54l-7.37-5.73L3 14.07l9 7 4.95-3.85L20.73 21 22 19.73 3.27 1z\"\n}), 'LayersClear');\n\nexports.default = _default;"],"names":["StyledToggleButton","styled","ToggleButton","theme","width","paddingTop","paddingBottom","color","palette","text","primary","backgroundColor","BufferView","props","state","name","isSelecting","distance","activeStep","setSelecting","setState","model","activateSelecting","setDistance","e","target","value","handleNext","highlightSource","getFeatures","length","enqueueSnackbar","variant","handlePrev","getNextButtonLabel","l","renderPrevButton","item","xs","fullWidth","disabled","onClick","renderClearButton","bufferSource","clear","forceUpdate","app","globalObserver","localObserver","subscribe","this","orientation","container","spacing","direction","disableInteractive","title","onChange","selected","label","bufferFeatures","React","withSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}