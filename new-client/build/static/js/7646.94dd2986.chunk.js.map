{"version":3,"file":"static/js/7646.94dd2986.chunk.js","mappings":"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","sources":["plugins/Routing/RoutingModel.js","../node_modules/load-google-maps-api/index.js","../node_modules/ol/geom/flat/flip.js","../node_modules/ol/format/Polyline.js"],"sourcesContent":["import { Style, Icon, Fill, Stroke, Circle } from \"ol/style\";\nimport { Vector } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { Point } from \"ol/geom\";\nimport { Feature } from \"ol\";\nimport { transform } from \"ol/proj\";\nimport { Polyline } from \"ol/format\";\n\nconst loadGoogleMapsApi = require(\"load-google-maps-api\");\n\nclass RouteModel {\n  constructor(settings) {\n    this.olMap = settings.map;\n    this.localObserver = settings.localObserver;\n    this.apiKey = settings.options.apiKey;\n    this.travelMode = \"WALKING\";\n    this.travelModeLabels = {\n      WALKING: \"Gå\",\n      DRIVING: \"Kör\",\n      TRANSIT: \"Kollektivtrafik\",\n      BICYCLING: \"Cykla\",\n    };\n\n    this.position = {\n      latitude: undefined,\n      longitude: undefined,\n      latitudeEnd: undefined,\n      longitudeEnd: undefined,\n    };\n    this.projection = settings.app.config.mapConfig.map.projection;\n\n    loadGoogleMapsApi({\n      key: this.apiKey,\n    }).then((googleMapApi) => {\n      this.googleMapsApi = googleMapApi;\n    });\n\n    this.initiateRoutingLayerInOpenLayersMap();\n  }\n\n  setTravelMode = (travelModeKey) => {\n    this.travelMode = this.googleMapsApi.DirectionsTravelMode.hasOwnProperty(\n      travelModeKey\n    )\n      ? this.googleMapsApi.DirectionsTravelMode[travelModeKey]\n      : \"WALKING\";\n    this.travelModeLabel = this.travelModeLabels[this.travelMode];\n    this.localObserver.publish(\"doneWithStep\", 3);\n  };\n\n  getCurrentPositionSuccess = (pos) => {\n    this.position = {\n      latitude: pos.coords.latitude,\n      longitude: pos.coords.longitude,\n    };\n    this.setPosition();\n  };\n\n  getCurrentPositionError = (err) => {\n    console.error(err);\n  };\n\n  setPosition = () => {\n    this.layer_start.getSource().clear();\n    if (this.position.longitude && this.position.latitude) {\n      var point = new Point([this.position.longitude, this.position.latitude]);\n      var transformed = transform(\n        point.getCoordinates(),\n        \"EPSG:4326\",\n        this.olMap.getView().getProjection()\n      );\n      point.setCoordinates(transformed);\n      var ft = new Feature({ geometry: point });\n      ft.setStyle(this.style_start);\n      this.layer_start.getSource().addFeature(ft);\n      this.olMap.getView().setCenter(point.getCoordinates());\n\n      this.localObserver.publish(\"doneWithStep\", 1);\n      this.localObserver.publish(\"startModeSelected\", \"gps\");\n    }\n  };\n\n  getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        this.getCurrentPositionSuccess,\n        this.getCurrentPositionError\n      );\n    } else {\n      window.alert(\n        \"Kan inte få position. Skriv startposition i rutan eller tryck position på kartan.\"\n      );\n    }\n  };\n\n  generatePinIcon(color = \"#000000\", size = \"24\") {\n    const svg = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"  width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\">\n    <path fill=\"${color}\" d=\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\" />\n    </svg>`;\n\n    return \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(svg);\n  }\n\n  initiateRoutingLayerInOpenLayersMap() {\n    this.style_start = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#00a83b\", \"36\"),\n      }),\n    });\n\n    this.style_end = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#ff4747\"),\n      }),\n    });\n\n    this.style_route = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#6e6e6e\"),\n      }),\n    });\n\n    this.style_route_normal = this.style_route;\n\n    this.style_route_highlight = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#47ff87\"),\n      }),\n    });\n\n    this.layer_drawing_style = new Style({\n      fill: new Fill({\n        color: \"rgba(255, 255, 255, 0.5)\",\n      }),\n      stroke: new Stroke({\n        color: \"rgba(0, 0, 255, 0.5)\",\n        width: 4,\n      }),\n      image: new Circle({\n        radius: 6,\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(255, 255, 255, 0.5)\",\n          width: 2,\n        }),\n      }),\n    });\n\n    var source_start = new Vector({});\n    var source_end = new Vector({});\n    var source_route = new Vector({});\n    var source_drawing = new Vector({});\n\n    if (this.layer_start === undefined) {\n      this.layer_start = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_start,\n        name: \"pluginRoutingStart\",\n        content: \"point\",\n        queryable: false,\n        style: this.style_start,\n      });\n\n      this.layer_end = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_end,\n        name: \"pluginRoutingEnd\",\n        content: \"point\",\n        queryable: false,\n        style: this.style_end,\n      });\n\n      this.layer_route = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_route,\n        name: \"pluginRoutingRoute\",\n        content: \"point\",\n        queryable: true,\n        style: this.style_route,\n      });\n\n      this.layer_drawing = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_drawing,\n        name: \"pluginRoutingDrawing\",\n        content: \"line\",\n        queryable: false,\n        style: this.layer_drawing_style,\n      });\n\n      this.olMap.addLayer(this.layer_start);\n      this.olMap.addLayer(this.layer_end);\n      this.olMap.addLayer(this.layer_route);\n      this.olMap.addLayer(this.layer_drawing);\n    }\n  }\n\n  activateStartMode = () => {\n    this.olMap.once(\"singleclick\", this.startPointSelection);\n  };\n\n  startPointSelection = (e) => {\n    var startPoint =\n      new Feature(); /* startPoint and point(below) must be the same l.134 */\n    startPoint.setGeometry(new Point(e.coordinate));\n    /* Convert Geometry to Coordinate */\n\n    var lonlat = transform(\n      startPoint.getGeometry().getCoordinates(),\n      this.projection,\n      \"EPSG:4326\"\n    );\n    var lon = lonlat[0];\n    var lat = lonlat[1];\n\n    this.layer_start.getSource().clear();\n    this.layer_start.getSource().addFeature(startPoint);\n    startPoint.setStyle(this.style_start);\n\n    var pos = this.position;\n    pos.latitude = lat;\n    pos.longitude = lon;\n    this.position = pos;\n\n    this.localObserver.publish(\"doneWithStep\", 1);\n    this.localObserver.publish(\"startModeSelected\", \"manual\");\n  };\n\n  activateEndMode = () => {\n    this.onEndKey = this.olMap.once(\"singleclick\", this.endPointSelection);\n  };\n\n  endPointSelection = (e) => {\n    var endPoint = new Feature();\n    endPoint.setGeometry(new Point(e.coordinate));\n\n    var lonlat = transform(\n      endPoint.getGeometry().getCoordinates(),\n      this.projection,\n      \"EPSG:4326\"\n    );\n    var lon = lonlat[0];\n    var lat = lonlat[1];\n\n    this.layer_end.getSource().clear();\n    this.layer_end.getSource().addFeature(endPoint);\n    endPoint.setStyle(this.style_end);\n\n    var pos = this.position;\n    pos.latitudeEnd = lat;\n    pos.longitudeEnd = lon;\n    this.position = pos;\n\n    this.localObserver.publish(\"doneWithStep\", 2);\n  };\n\n  activateRoutingMode() {\n    this.searchTrip();\n  }\n\n  searchTrip() {\n    var pos = this.position;\n    if (\n      pos.latitude === undefined ||\n      pos.longitude === undefined ||\n      pos.latitudeEnd === undefined ||\n      pos.longitudeEnd === undefined\n    ) {\n      this.localObserver.publish(\"startStopPointsMissing\");\n    } else {\n      const googleDirectionsService =\n        new this.googleMapsApi.DirectionsService();\n\n      const rp = {\n        origin: { lat: pos.latitude, lng: pos.longitude },\n        destination: { lat: pos.latitudeEnd, lng: pos.longitudeEnd },\n        travelMode: this.travelMode,\n      };\n      googleDirectionsService.route(rp, (res) => {\n        switch (res.status) {\n          case \"REQUEST_DENIED\":\n            this.localObserver.publish(\"requestDenied\");\n            break;\n          case \"ZERO_RESULTS\":\n            this.localObserver.publish(\"zeroResults\");\n            break;\n          case \"OK\":\n            this.plotRoute(res, this.map, this.layer_route, this.layer_drawing);\n            break;\n          default:\n            this.localObserver.publish(\"otherError\", res.status);\n            break;\n        }\n      });\n    }\n  }\n\n  plotRoute(res, map, layer_route, layer_drawing) {\n    layer_route.getSource().clear();\n    var steps = res.routes[0].legs[0].steps;\n    const routeDiv = document.createElement(\"div\");\n    const p = document.createElement(\"p\");\n    const ul = document.createElement(\"ol\");\n    p.innerHTML = `\n                    <table class=\"table table-condensed\">\n                      <tbody>\n                        <tr><td><b>Färdsätt</b></td><td>${this.travelModeLabel}</td></tr>\n                        <tr><td><b>Avstånd</b></td><td>${res.routes[0].legs[0].distance.text} (${res.routes[0].legs[0].distance.value} m)</td></tr>\n                        <tr><td><b>Tid</b></td><td>${res.routes[0].legs[0].duration.text}</td></tr>\n                        <tr><td><b>Startadress</b></td><td>${res.routes[0].legs[0].start_address}</td></tr>\n                        <tr><td><b>Slutadress</b></td><td>${res.routes[0].legs[0].end_address}</td></tr>\n                      </tbody>\n                    </table>\n                    `;\n    routeDiv.appendChild(p);\n    for (var i = 0; i < steps.length; i++) {\n      var lat = steps[i].start_location.lat();\n      var lng = steps[i].start_location.lng();\n\n      var point = new Point([lng, lat]);\n\n      var transformed = transform(\n        point.getCoordinates(),\n        \"EPSG:4326\",\n        this.projection\n      );\n      point.setCoordinates(transformed);\n\n      var n = i + 1;\n      var tmpFeature = new Feature({\n        geometry: point,\n        info: steps[i].instructions,\n      });\n      tmpFeature.number = \"\" + n;\n      tmpFeature.setStyle(this.style_route);\n\n      layer_route.getSource().addFeature(tmpFeature);\n      // route features\n      var tmpLi = document.createElement(\"li\");\n      tmpLi.onclick = this.highlightFeature.bind(this);\n      tmpLi.id = \"step_number\" + n;\n      tmpLi.innerHTML = steps[i].instructions;\n      ul.appendChild(tmpLi);\n    }\n    routeDiv.appendChild(ul);\n\n    var resList = document.getElementById(\"resultList\");\n    while (resList.firstChild) {\n      resList.removeChild(resList.firstChild);\n    }\n\n    // put result into the table\n    document.getElementById(\"resultList\").appendChild(routeDiv);\n\n    const routePath = new Polyline({}).readGeometry(\n      res.routes[0].overview_polyline,\n      {\n        dataProjection: \"EPSG:4326\",\n        featureProjection: this.projection,\n      }\n    );\n\n    layer_drawing.getSource().clear();\n    var ft = new Feature({\n      type: \"routing\",\n      geometry: routePath,\n    });\n    ft.setStyle(this.layer_drawing_style);\n\n    layer_drawing.getSource().addFeature(ft);\n    var centerLat = (this.position.latitude + this.position.latitudeEnd) / 2;\n    var centerLon = (this.position.longitude + this.position.longitudeEnd) / 2;\n    this.olMap\n      .getView()\n      .setCenter(\n        transform([centerLon, centerLat], \"EPSG:4326\", this.projection)\n      );\n    this.olMap\n      .getView()\n      .fit(layer_drawing.getSource().getExtent(), this.olMap.getSize());\n  }\n\n  highlightFeature(event) {\n    var feature_number = -1;\n    if (event.target.nodeName === \"B\") {\n      feature_number = event.target.parentNode.id.substring(\n        \"step_number\".length\n      );\n    } else {\n      feature_number = event.target.id.substring(\"step_number\".length);\n    }\n\n    var layer = this.layer_route;\n\n    var features = layer.getSource().getFeatures();\n\n    for (var i = 0; i < features.length; i++) {\n      if (features[i].number === feature_number) {\n        features[i].setStyle(this.style_route_highlight);\n      } else {\n        features[i].setStyle(this.style_route_normal);\n      }\n    }\n  }\n\n  drawRoute(steps) {\n    var routePath = new Polyline({}).readGeometry(steps);\n\n    var ft = new Feature({ type: \"routing\", geometry: routePath });\n    ft.setStyle(this.style_route);\n    this.get(\"layer_drawing\").getSource().addFeature(ft);\n  }\n\n  clearMap() {\n    this.layer_start.getSource().clear();\n    this.layer_end.getSource().clear();\n    this.layer_route.getSource().clear();\n    this.layer_drawing.getSource().clear();\n\n    // Remove the step instructions\n    document.getElementById(\"resultList\").innerHTML = \"\";\n\n    this.position = {\n      latitude: undefined,\n      longitude: undefined,\n      latitudeEnd: undefined,\n      longitudeEnd: undefined,\n    };\n  }\n}\n\nexport default RouteModel;\n","const API_URL = 'https://maps.googleapis.com/maps/api/js'\nconst CALLBACK_NAME = '__googleMapsApiOnLoadCallback'\n\nconst optionsKeys = ['channel', 'client', 'key', 'language', 'region', 'v']\n\nlet promise = null\n\nmodule.exports = function (options = {}) {\n  promise =\n    promise ||\n    new Promise(function (resolve, reject) {\n      // Reject the promise after a timeout\n      const timeoutId = setTimeout(function () {\n        window[CALLBACK_NAME] = function () {} // Set the on load callback to a no-op\n        reject(new Error('Could not load the Google Maps API'))\n      }, options.timeout || 10000)\n\n      // Hook up the on load callback\n      window[CALLBACK_NAME] = function () {\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId)\n        }\n        resolve(window.google.maps)\n        delete window[CALLBACK_NAME]\n      }\n\n      // Prepare the `script` tag to be inserted into the page\n      const scriptElement = document.createElement('script')\n      const params = [`callback=${CALLBACK_NAME}`]\n      optionsKeys.forEach(function (key) {\n        if (options[key]) {\n          params.push(`${key}=${options[key]}`)\n        }\n      })\n      if (options.libraries && options.libraries.length) {\n        params.push(`libraries=${options.libraries.join(',')}`)\n      }\n      scriptElement.src = `${options.apiUrl || API_URL}?${params.join('&')}`\n\n      // Insert the `script` tag\n      document.body.appendChild(scriptElement)\n    })\n  return promise\n}\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n"],"names":["loadGoogleMapsApi","require","RouteModel","settings","setTravelMode","travelModeKey","travelMode","googleMapsApi","DirectionsTravelMode","hasOwnProperty","travelModeLabel","travelModeLabels","localObserver","publish","getCurrentPositionSuccess","pos","position","latitude","coords","longitude","setPosition","getCurrentPositionError","err","console","error","layer_start","getSource","clear","point","Point","transformed","transform","getCoordinates","olMap","getView","getProjection","setCoordinates","ft","Feature","geometry","setStyle","style_start","addFeature","setCenter","getLocation","navigator","geolocation","getCurrentPosition","window","alert","activateStartMode","once","startPointSelection","e","startPoint","setGeometry","coordinate","lonlat","getGeometry","projection","lon","lat","activateEndMode","onEndKey","endPointSelection","endPoint","layer_end","style_end","latitudeEnd","longitudeEnd","this","map","apiKey","options","WALKING","DRIVING","TRANSIT","BICYCLING","undefined","app","config","mapConfig","key","then","googleMapApi","initiateRoutingLayerInOpenLayersMap","color","size","svg","encodeURIComponent","Style","image","Icon","src","generatePinIcon","style_route","style_route_normal","style_route_highlight","layer_drawing_style","fill","Fill","stroke","Stroke","width","Circle","radius","source_start","Vector","source_end","source_route","source_drawing","VectorLayer","layerType","zIndex","source","name","content","queryable","style","layer_route","layer_drawing","addLayer","searchTrip","googleDirectionsService","DirectionsService","rp","origin","lng","destination","route","res","status","plotRoute","steps","routes","legs","routeDiv","document","createElement","p","ul","innerHTML","distance","text","value","duration","start_address","end_address","appendChild","i","length","start_location","n","tmpFeature","info","instructions","number","tmpLi","onclick","highlightFeature","bind","id","resList","getElementById","firstChild","removeChild","routePath","Polyline","readGeometry","overview_polyline","dataProjection","featureProjection","type","centerLat","centerLon","fit","getExtent","getSize","event","feature_number","target","nodeName","parentNode","substring","features","getFeatures","get","API_URL","CALLBACK_NAME","optionsKeys","promise","module","exports","Promise","resolve","reject","timeoutId","setTimeout","Error","timeout","clearTimeout","google","maps","scriptElement","params","forEach","push","libraries","join","apiUrl","body","flipXY","flatCoordinates","offset","end","stride","dest","destOffset","j","x","k","encodeUnsignedInteger","num","encoded","String","fromCharCode","factor_","factor","geometryLayout_","geometryLayout","readGeometryFromText","readFeatureFromText","getStrideForLayout","d","lastNumbers","Array","numbers","current","shift","ii","b","charCodeAt","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","decodeDeltas","coordinates","inflateCoordinates","lineString","LineString","transformGeometryWithOptions","adaptOptions","feature","writeGeometryText","assert","writeFeatureText","getFlatCoordinates","getStride","delta","Math","round","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","encodeDeltas","TextFeature"],"sourceRoot":""}