{"version":3,"file":"static/js/9413.f9a70f85.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/documentWindow/Contents.js","plugins/DocumentHandler/documentWindow/DocumentViewer.js","plugins/DocumentHandler/documentWindow/ImagePopupModal.js","plugins/DocumentHandler/documentWindow/ScrollToTop.js","plugins/DocumentHandler/documentWindow/TableOfContents.js"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport ImagePopupModal from \"./ImagePopupModal\";\nimport { flattenChaptersTree } from \"../utils/helpers\";\nimport { Box } from \"@mui/material\";\n\nclass Contents extends React.PureComponent {\n  state = {\n    popupImage: null,\n    activeContent: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.internalIds = [];\n  }\n\n  /* TODO...\n   * This should be refactored in some other way.\n   * right now we are \"creating\" components for printing here\n   * because we need to use the render in this component\n   */\n  bindPrintSpecificHandlers = () => {\n    const { localObserver, model } = this.props;\n    localObserver.unsubscribe(\"append-chapter-components\");\n\n    localObserver.subscribe(\"append-document-components\", (documents) => {\n      let chapters = [];\n      let headerChapter = [];\n\n      documents.forEach((document) => {\n        /*\n         * add an H1 tag for menu parents when printing.\n         * chapters if a group of documents has a parent document, the header of the parent\n         * is printed if any of the children are printed.\n         */\n        if (document.isGroupHeader) {\n          headerChapter.push(\n            this.createGroupHeadingTag(document.title, document.id)\n          );\n          chapters.push(headerChapter);\n          headerChapter = [];\n        } else {\n          document.chapters.forEach((chapter) => {\n            model.appendComponentsToChapter(chapter);\n          });\n\n          let renderedChapters = [];\n          let flatChaptersTree = flattenChaptersTree(document.chapters);\n          flatChaptersTree = flatChaptersTree.map((item) => {\n            if (item.mustReplace) {\n              let newItem = {};\n              item = newItem;\n            }\n            return item;\n          });\n\n          renderedChapters.push(this.renderChapters(flatChaptersTree, true));\n          chapters.push(renderedChapters);\n        }\n      });\n\n      localObserver.publish(\"chapter-components-appended\", chapters);\n    });\n  };\n\n  componentDidMount = () => {\n    const { localObserver } = this.props;\n    this.bindPrintSpecificHandlers();\n    localObserver.subscribe(\"image-popup\", this.showPopupModal);\n  };\n\n  componentWillUnmount = () => {\n    const { localObserver } = this.props;\n    localObserver.unsubscribe(\"chapter-components-appended\");\n  };\n\n  closePopupModal = () => {\n    this.setState({ popupImage: null });\n  };\n\n  showPopupModal = (image) => {\n    this.setState({ popupImage: image });\n  };\n\n  renderImageInModal = () => {\n    const { popupImage } = this.state;\n\n    return (\n      <ImagePopupModal\n        open={popupImage == null ? false : true}\n        close={this.closePopupModal}\n        image={popupImage}\n      ></ImagePopupModal>\n    );\n  };\n\n  createGroupHeadingTag = (title, id) => {\n    return (\n      <Typography key={id} data-type=\"chapter-header\" variant=\"h1\">\n        {title}\n      </Typography>\n    );\n  };\n\n  /**\n   * Renders the document with all it's chapters and sub chapters.\n   * @param {object} document The document that will be rendered.\n   *\n   * @memberof Contents\n   */\n  renderChapters = (chapters, isPrintMode) => {\n    return Array.isArray(chapters)\n      ? chapters.map((chapter) => this.renderChapter(chapter, isPrintMode))\n      : null;\n  };\n\n  /**\n   * Renders a chapter with a headline an a content.\n   * @param {object} chapter The chapter to be rendered.\n   *\n   * @memberof Contents\n   */\n  renderChapter = (chapter, isPrintMode) => {\n    return (\n      <React.Fragment key={chapter.id}>\n        {this.renderHeadline(chapter, isPrintMode)}\n        {chapter.components}\n        {Array.isArray(chapter.chapters)\n          ? chapter.chapters.map((subChapter) => this.renderChapter(subChapter))\n          : null}\n      </React.Fragment>\n    );\n  };\n\n  getHeaderVariant = (chapter, isPrintMode) => {\n    let headerSize = 2; //Chapters start with h2\n\n    //If we are printing, we have a flattened chapters tree, so use the chapter.level property to set the heading\n    //instead of cycling through the parent chapter objects.\n    if (isPrintMode) {\n      headerSize += chapter.level;\n      return `h${headerSize}`;\n    }\n    while (chapter.parent) {\n      headerSize++;\n      chapter = chapter.parent;\n    }\n    return `h${headerSize}`;\n  };\n\n  /**\n   * Render the headline of a chapter.\n   * @param {object} chapter The chapter to be rendered.\n   *\n   * @memberof Contents\n   */\n  renderHeadline = (chapter, isPrintMode) => {\n    return (\n      <>\n        <Typography\n          ref={chapter.scrollRef}\n          sx={{ overflowWrap: \"break-word\" }}\n          data-type=\"chapter-header\"\n          variant={this.getHeaderVariant(chapter, isPrintMode)}\n        >\n          {chapter.header}\n        </Typography>\n      </>\n    );\n  };\n\n  render = () => {\n    if (this.props.activeDocument) {\n      return (\n        <Box style={{ display: \"block\", maxWidth: \"100%\" }}>\n          {this.renderImageInModal()}\n          {this.renderChapters(this.props.activeDocument.chapters)}\n        </Box>\n      );\n    } else {\n      return null;\n    }\n  };\n}\n\nexport default Contents;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\nimport Grid from \"@mui/material/Grid\";\nimport TableOfContents from \"./TableOfContents\";\nimport Contents from \"./Contents\";\nimport { delay } from \"../../../utils/Delay\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport ScrollToTop from \"./ScrollToTop\";\n\nconst GridContainer = styled(Grid)(() => ({\n  maxHeight: \"100%\",\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  userSelect: \"text\",\n  outline: \"none\",\n}));\n\nconst ContentContainer = styled(Grid)(({ theme }) => ({\n  paddingBottom: theme.spacing(1),\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  outline: \"none\",\n}));\n\nconst TocGridWrapper = styled(Grid)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n}));\n\nconst expandedTocOnStart = (props) => {\n  const { activeDocument, options } = props;\n  const mapConfigSetting = options?.tableOfContents?.expanded;\n  const documentSetting = activeDocument?.tableOfContents?.expanded;\n  if (documentSetting || documentSetting === false) {\n    return documentSetting;\n  }\n  if (mapConfigSetting || mapConfigSetting === false) {\n    return mapConfigSetting;\n  }\n  return true;\n};\n\nclass DocumentViewer extends React.PureComponent {\n  state = {\n    showScrollButton: false,\n    showPrintWindow: false,\n    expandedTableOfContents: expandedTocOnStart(this.props),\n  };\n\n  constructor(props) {\n    super(props);\n    this.documentViewerRef = React.createRef();\n    this.setScrollButtonLimit();\n    this.bindSubscriptions();\n  }\n\n  setScrollButtonLimit = () => {\n    const { options } = this.props;\n    let showScrollButtonLimit = options.showScrollButtonLimit;\n    this.scrollLimit =\n      showScrollButtonLimit != null && showScrollButtonLimit !== \"\"\n        ? showScrollButtonLimit\n        : 400;\n  };\n\n  bindSubscriptions = () => {\n    const { localObserver } = this.props;\n\n    localObserver.subscribe(\"scroll-to-chapter\", async (chapter) => {\n      /*scrollIntoView is buggy without dirty fix - \n      tried using react life cycle methods but is, for some reason, not working*/\n      await delay(100);\n      chapter.scrollRef.current.scrollIntoView();\n    });\n\n    localObserver.subscribe(\"scroll-to-top\", () => {\n      this.scrollToTop();\n    });\n  };\n\n  onScroll = (e) => {\n    if (e.target.scrollTop > this.scrollLimit) {\n      this.setState({\n        showScrollButton: true,\n      });\n    } else {\n      this.setState({\n        showScrollButton: false,\n      });\n    }\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.activeDocument !== this.props.activeDocument) {\n      this.setState({\n        expandedTableOfContents: expandedTocOnStart(this.props),\n      });\n    }\n  };\n\n  scrollToTop = async () => {\n    scroll.scrollTo(0, {\n      containerId: \"documentViewer\",\n      smooth: false,\n      duration: 0,\n      delay: 100,\n    });\n  };\n\n  selectAllText = () => {\n    let range = document.createRange();\n    range.selectNode(this.documentViewerRef.current);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n  };\n\n  toggleCollapse = (e) => {\n    this.setState({\n      expandedTableOfContents: !this.state.expandedTableOfContents,\n    });\n  };\n\n  getTocTitle = () => {\n    const { activeDocument, options } = this.props;\n    const documentSettingTitle = activeDocument?.tableOfContents?.title;\n    const mapConfigSettingTitle = options?.tableOfContents?.title;\n\n    if (documentSettingTitle || documentSettingTitle === false) {\n      return documentSettingTitle;\n    }\n    if (mapConfigSettingTitle || mapConfigSettingTitle === false) {\n      return mapConfigSettingTitle;\n    }\n    return \"Innehållsförteckning\";\n  };\n\n  getChapterLevelsToShowInToc = () => {\n    const { activeDocument, options } = this.props;\n\n    const documentSettingLevels =\n      activeDocument?.tableOfContents?.chapterLevelsToShow;\n    const mapConfigSettingLevels =\n      options?.tableOfContents?.chapterLevelsToShow;\n\n    if (documentSettingLevels) {\n      return documentSettingLevels;\n    }\n    if (mapConfigSettingLevels) {\n      return mapConfigSettingLevels;\n    }\n\n    return 100;\n  };\n\n  getShouldShowTableOfContents = () => {\n    const { activeDocument, options } = this.props;\n\n    const documentSetting = activeDocument?.tableOfContents?.active;\n    const mapConfigSetting = options?.tableOfContents?.active;\n\n    if (documentSetting || documentSetting === false) {\n      return documentSetting;\n    }\n    if (mapConfigSetting || mapConfigSetting === false) {\n      return mapConfigSetting;\n    }\n    return true;\n  };\n\n  getTableOfContents = () => {\n    const { expandedTableOfContents } = this.state;\n    const { activeDocument, localObserver } = this.props;\n\n    const title = this.getTocTitle();\n    const chapterLevelsToShow = this.getChapterLevelsToShowInToc();\n    return (\n      <TableOfContents\n        localObserver={localObserver}\n        toggleCollapse={this.toggleCollapse}\n        activeDocument={activeDocument}\n        expanded={expandedTableOfContents}\n        title={title}\n        chapterLevelsToShow={chapterLevelsToShow}\n      />\n    );\n  };\n\n  render() {\n    const {\n      activeDocument,\n      localObserver,\n      documentWindowMaximized,\n      model,\n      options,\n    } = this.props;\n\n    const { showScrollButton } = this.state;\n    const showTableOfContents = this.getShouldShowTableOfContents();\n    return (\n      <>\n        <GridContainer\n          onScroll={this.onScroll}\n          id=\"documentViewer\"\n          ref={this.documentViewerRef}\n          container\n        >\n          {showTableOfContents && (\n            <TocGridWrapper xs={12} item>\n              {this.getTableOfContents()}\n            </TocGridWrapper>\n          )}\n\n          <ContentContainer\n            tabIndex=\"0\" //Focus grid to be able to use onKeyDown\n            onKeyDown={(e) => {\n              //If ctrl-a or command-a is pressed\n              if ((e.ctrlKey || e.metaKey) && e.keyCode === 65) {\n                this.selectAllText();\n                e.preventDefault();\n              }\n            }}\n            sx={{ marginTop: showTableOfContents ? 0 : 2 }}\n            container\n            item\n          >\n            <Contents\n              options={options}\n              model={model}\n              localObserver={localObserver}\n              activeDocument={activeDocument}\n            />\n          </ContentContainer>\n        </GridContainer>\n        {showScrollButton && documentWindowMaximized && (\n          <ScrollToTop\n            color={activeDocument.documentColor}\n            onClick={this.scrollToTop}\n          ></ScrollToTop>\n        )}\n      </>\n    );\n  }\n}\n\nexport default DocumentViewer;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Paper from \"@mui/material/Paper\";\n\nconst mapDiv = document.getElementById(\"map\");\nconst blurCss = \"filter : blur(7px)\";\n\nconst CloseButton = styled(IconButton)(({ theme }) => ({\n  position: \"absolute\",\n  backgroundColor: theme.palette.grey[50],\n\n  \"&:hover\": {\n    backgroundColor: theme.palette.grey[400],\n  },\n\n  zIndex: 100,\n  right: theme.spacing(2),\n  top: theme.spacing(2),\n}));\n\nconst StyledPaper = styled(Paper)(() => ({\n  maxHeight: \"80%\",\n  maxWidth: \"90%\",\n  overflow: \"auto\",\n  backgroundColor: \"transparent\",\n  boxShadow: \"none\",\n  objectFit: \"contain\",\n}));\n\nfunction PaperComponent(props) {\n  const { component, onClose, src, altValue } = props;\n  return (\n    <>\n      <CloseButton size=\"small\" onClick={onClose}>\n        <CloseIcon />\n      </CloseButton>\n      <StyledPaper alt={altValue} component={component} src={src} />\n    </>\n  );\n}\n\nclass ImagePopupModal extends React.PureComponent {\n  removeMapBlur = () => {\n    mapDiv.removeAttribute(\"style\", blurCss);\n  };\n\n  addMapBlur = () => {\n    mapDiv.setAttribute(\"style\", blurCss);\n  };\n\n  componentWillUnmount = () => {\n    this.removeMapBlur();\n  };\n\n  componentDidMount = () => {};\n\n  render() {\n    const { open, close, image } = this.props;\n    open ? this.addMapBlur() : this.removeMapBlur();\n\n    return (\n      <Dialog\n        maxWidth=\"lg\"\n        onBackdropClick={close}\n        PaperComponent={PaperComponent}\n        PaperProps={{\n          component: \"img\",\n          onClose: close,\n          src: image?.url,\n          altValue: image?.altValue,\n        }}\n        open={open}\n      />\n    );\n  }\n}\n\nexport default ImagePopupModal;\n","import React from \"react\";\nimport { Box, Fab } from \"@mui/material\";\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\nimport { darken } from \"@mui/material/styles\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst ScrollToTop = (props) => {\n  return (\n    // Pass on all props to the styled component\n    <Fab\n      size=\"small\"\n      onClick={props.onClick}\n      sx={{\n        position: \"fixed\",\n        bottom: (theme) => theme.spacing(2),\n        right: (theme) => theme.spacing(3),\n        ...(props.color && {\n          backgroundColor: props.color,\n          \"&:hover\": {\n            backgroundColor: darken(props.color, 0.3),\n          },\n        }),\n      }}\n    >\n      <Box sx={visuallyHidden}>Scrolla till toppen av dokumentet</Box>\n      <NavigationIcon />\n    </Fab>\n  );\n};\n\nexport default ScrollToTop;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { withTheme } from \"@emotion/react\";\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  Collapse,\n} from \"@mui/material\";\n\nfunction NestedListItemRaw(props) {\n  return (\n    <ListItem\n      component=\"li\"\n      button\n      size=\"small\"\n      dense\n      onClick={props.onCLick}\n      style={{\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: props.theme.spacing(props.level * 3),\n      }}\n    >\n      <ListItemText>{props.children}</ListItemText>\n    </ListItem>\n  );\n}\n\nconst NestedListItem = withTheme(NestedListItemRaw);\n\nconst ListRoot = styled(List)(({ theme }) => ({\n  width: \"100%\",\n  padding: theme.spacing(0),\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  paddingLeft: \"0px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  \"&:focus-visible\": {\n    backgroundColor: theme.palette.action.selected,\n  },\n}));\n\nconst GridTableOfContents = styled(Grid)(({ theme }) => ({\n  //Need to manually change color when switching between dark/light-mode\n  backgroundColor:\n    theme.palette.mode === \"dark\"\n      ? theme.palette.grey[700]\n      : theme.palette.grey[200],\n\n  tapHighlightColor: \"transparent\",\n  cursor: \"pointer\",\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  paddingTop: theme.spacing(1),\n  paddingBottom: theme.spacing(1),\n}));\n\nconst CollapseCollapseContainer = styled(Collapse)(({ theme }) => ({\n  width: \"100%\",\n}));\n\nclass TableOfContents extends React.PureComponent {\n  state = {\n    expanded: this.props.expanded,\n  };\n\n  static defaultProps = {\n    expanded: true,\n    title: \"Innehåll\",\n  };\n\n  linkClick = (chapter) => {\n    const { localObserver } = this.props;\n    localObserver.publish(\"scroll-to-chapter\", chapter);\n  };\n  /**\n   * Render all chapters of the activeDocument.\n   * @param {Array} activeDocument An array with all chapters of the activeDocument.\n   *\n   * @memberof TableOfContents\n   */\n  renderChapters = (activeDocument) => {\n    let mainChapter = 0;\n    return (\n      <ListRoot aria-labelledby=\"nested-list-subheader\">\n        {Array.isArray(activeDocument?.chapters)\n          ? activeDocument.chapters.map((chapter) =>\n              this.renderSubChapters(chapter, 0, (++mainChapter).toString())\n            )\n          : null}\n      </ListRoot>\n    );\n  };\n\n  showSubChapter = (level) => {\n    const { chapterLevelsToShow } = this.props;\n    return level < chapterLevelsToShow;\n  };\n\n  /**\n   * Private help method that recursive renders all sub chapters of a chapter.\n   * @param {object} chapter A chapter with all it's sub chapters that will be rendered.\n   * @param {string} level A recursive level that help with the table construction.\n   * @param {number} subChapterNumber A counter of the current sub chapter number\n   *\n   * @memberof TableOfContents\n   */\n  renderSubChapters = (chapter, level, subChapterNumber) => {\n    if (!this.showSubChapter(level)) {\n      return null;\n    }\n    let newLevel = level + 1;\n    let number = 0;\n\n    return (\n      <React.Fragment key={chapter.header}>\n        <NestedListItem\n          chapter={chapter}\n          onCLick={() => {\n            this.linkClick(chapter);\n          }}\n          level={level}\n        >\n          {chapter.header}\n        </NestedListItem>\n        <List disablePadding>\n          {Array.isArray(chapter.chapters)\n            ? chapter.chapters.map((subChapter) =>\n                this.renderSubChapters(\n                  subChapter,\n                  newLevel,\n                  subChapterNumber.concat(\".\" + ++number)\n                )\n              )\n            : null}\n        </List>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { activeDocument, title, expanded, toggleCollapse } = this.props;\n\n    return (\n      <GridTableOfContents container>\n        <StyledButton\n          disableRipple\n          color=\"inherit\"\n          fullWidth\n          endIcon={\n            expanded ? (\n              <ExpandLessIcon></ExpandLessIcon>\n            ) : (\n              <ExpandMoreIcon></ExpandMoreIcon>\n            )\n          }\n          onClick={toggleCollapse}\n        >\n          {title}\n        </StyledButton>\n        <CollapseCollapseContainer\n          in={expanded}\n          id=\"expansion-panel-content\"\n          aria-hidden={!expanded}\n        >\n          <Grid container spacing={0}>\n            {this.renderChapters(activeDocument)}\n          </Grid>\n        </CollapseCollapseContainer>\n      </GridTableOfContents>\n    );\n  }\n}\n\nexport default TableOfContents;\n"],"names":["Contents","props","state","popupImage","activeContent","bindPrintSpecificHandlers","localObserver","model","unsubscribe","subscribe","documents","chapters","headerChapter","forEach","document","isGroupHeader","push","createGroupHeadingTag","title","id","chapter","appendComponentsToChapter","renderedChapters","flatChaptersTree","flattenChaptersTree","map","item","mustReplace","renderChapters","publish","componentDidMount","showPopupModal","componentWillUnmount","closePopupModal","setState","image","renderImageInModal","open","close","variant","isPrintMode","Array","isArray","renderChapter","renderHeadline","components","subChapter","getHeaderVariant","headerSize","level","parent","ref","scrollRef","sx","overflowWrap","header","render","activeDocument","style","display","maxWidth","internalIds","React","GridContainer","styled","Grid","maxHeight","overflowY","overflowX","userSelect","outline","ContentContainer","theme","paddingBottom","spacing","paddingLeft","paddingRight","TocGridWrapper","marginBottom","expandedTocOnStart","options","mapConfigSetting","tableOfContents","expanded","documentSetting","DocumentViewer","showScrollButton","showPrintWindow","expandedTableOfContents","setScrollButtonLimit","showScrollButtonLimit","scrollLimit","bindSubscriptions","delay","current","scrollIntoView","scrollToTop","onScroll","e","target","scrollTop","componentDidUpdate","prevProps","scroll","containerId","smooth","duration","selectAllText","range","createRange","selectNode","documentViewerRef","window","getSelection","removeAllRanges","addRange","toggleCollapse","getTocTitle","documentSettingTitle","mapConfigSettingTitle","getChapterLevelsToShowInToc","documentSettingLevels","chapterLevelsToShow","mapConfigSettingLevels","getShouldShowTableOfContents","active","getTableOfContents","this","documentWindowMaximized","showTableOfContents","container","xs","tabIndex","onKeyDown","ctrlKey","metaKey","keyCode","preventDefault","marginTop","color","documentColor","onClick","mapDiv","getElementById","blurCss","CloseButton","IconButton","position","backgroundColor","palette","grey","zIndex","right","top","StyledPaper","Paper","overflow","boxShadow","objectFit","PaperComponent","component","onClose","src","altValue","size","alt","ImagePopupModal","removeMapBlur","removeAttribute","addMapBlur","setAttribute","onBackdropClick","PaperProps","url","bottom","darken","visuallyHidden","NestedListItem","withTheme","button","dense","onCLick","paddingTop","children","ListRoot","List","width","padding","StyledButton","Button","justifyContent","action","selected","GridTableOfContents","mode","tapHighlightColor","cursor","CollapseCollapseContainer","Collapse","TableOfContents","linkClick","mainChapter","renderSubChapters","toString","showSubChapter","subChapterNumber","newLevel","number","disablePadding","concat","disableRipple","fullWidth","endIcon","in","defaultProps"],"sourceRoot":""}