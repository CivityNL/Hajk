{"version":3,"file":"static/js/3833.52d481e1.chunk.js","mappings":"wVAiBMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAa,iBAAO,CAC/BE,QAAS,OACTC,SAAU,OAFc,IAKpBC,GAAoBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,EAAoB,kBAAgB,CAC5DM,OAD4C,EAAGC,MACjCC,QAAQ,GACtBC,MAAO,OAFqC,IAKxCC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAiNH,OAjNGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,SAAU,KACVC,gBAAgB,GAFV,EAMRC,uBAAyB,CACvB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAduB,EAqBzBC,wBAA0B,SAACC,GACzB,IAAQC,EAAiB,EAAKC,MAAtBD,aAIE,iBAHQD,EAAEG,OAAZC,MAIJH,EAAaD,GACb,EAAKK,SAAS,CAAER,gBAAgB,GACrC,IAKDS,8BAAgC,WAC9B,MAAwC,EAAKJ,MAArCD,EAAR,EAAQA,aAAcM,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,MAM9BP,EAAa,CAAEE,OAAQ,CAAEM,KAAM,QAASL,MAJbG,EAAOG,QAAO,SAACC,EAAMC,GAAP,OACvCC,KAAKC,IAAIF,EAAOJ,GAASK,KAAKC,IAAIH,EAAOH,GAASI,EAAOD,CADlB,OAMzC,EAAKN,SAAS,CAAER,gBAAgB,GACjC,IAEDkB,wBAA0B,WACxB,MAAiC,EAAKb,MAA9Bc,EAAR,EAAQA,OAAQf,EAAhB,EAAgBA,aAChB,OACE,SAAC,IAAD,CACEgB,QAAQ,WACRb,MAAOY,EACPE,SAAUjB,EACVkB,WAAY,CACVV,KAAM,SACNW,GAAI,UANR,SASG,EAAKlB,MAAMmB,QAAQC,aAAaC,KAAI,SAACnB,EAAOoB,GAC3C,OACE,SAAC,IAAD,CAAuCpB,MAAOA,EAA9C,SACGA,EAAMqB,eADM,eAAiBD,EAInC,KAGN,IAEDE,wBAA0B,WACxB,MAAoC,EAAKxB,MAAjCyB,EAAR,EAAQA,UAAW1B,EAAnB,EAAmBA,aACnB,OACE,UAAC,IAAD,CACEgB,QAAQ,WACRb,MAAOuB,EACPT,SAAUjB,EACVkB,WAAY,CACVV,KAAM,YACNW,GAAI,aANR,WASE,SAAC,IAAD,CAAUhB,OAAO,EAAjB,iBACA,SAAC,IAAD,CAAUA,OAAO,EAAjB,mBAGL,IAEDwB,gCAAkC,WAChC,MAA0D,EAAK1B,MAAvDyB,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,qBAAsB5B,EAAzC,EAAyCA,aACzC,OACE,UAAC,IAAD,CACEgB,QAAQ,WACRb,MAAOyB,EACPX,SAAUjB,EACV6B,UAAWH,EACXR,WAAY,CACVV,KAAM,uBACNW,GAAI,wBAPR,WAUE,SAAC,IAAD,CAAUhB,OAAO,EAAjB,iBACA,SAAC,IAAD,CAAUA,OAAO,EAAjB,mBAGL,IAED2B,0BAA4B,WAC1B,MAAsC,EAAK7B,MAAnC8B,EAAR,EAAQA,YAAa/B,EAArB,EAAqBA,aACrB,OACE,UAAC,IAAD,CACEgB,QAAQ,WACRb,MAAO4B,EACPd,SAAUjB,EACVkB,WAAY,CACVV,KAAM,cACNW,GAAI,eANR,WASE,SAAC,IAAD,CAAUhB,MAAO,YAAjB,uBACA,SAAC,IAAD,CAAUA,MAAO,WAAjB,0BAGL,IAED6B,oBAAsB,WACpB,MAAiC,EAAK/B,MAA9BgC,EAAR,EAAQA,MAAO3B,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,MAMjB2B,EAAoB,kBACrB5B,EAAOgB,KAAI,SAACa,GACb,MAAO,CAAEhC,MAAOgC,EAAGC,MAAOH,EAAMI,qBAAqBF,GACtD,KAHuB,CAIxB,CAAEhC,MAAO,eAAgBiC,MAAO,sBAElC,OACE,SAAC,IAAD,CACEpB,QAAQ,WACRb,MAAOI,EACPU,SAAU,EAAKnB,wBACfoB,WAAY,CACVV,KAAM,QACNW,GAAI,SANR,SASGe,EAAqBZ,KAAI,SAACf,EAAO+B,GAEhC,OACE,SAAC,IAAD,CAAkBnC,MAAOI,EAAMJ,MAA/B,SACGI,EAAM6B,OADME,EAIlB,KAGN,IAEDC,iBAAmB,WACjB,OACE,SAAC,IAAD,CACEpC,MAAO,EAAKF,MAAMM,MAClBiC,KAAK,SACLC,gBAAgB,SAAC,IAAD,CAAgBC,SAAS,QAAzB,gBAChBC,cACE,SAAC,IAAD,CAAgBD,SAAS,MAAzB,UACE,SAAC,IAAD,CAASE,MAAM,4BAAf,UACE,SAAC,IAAD,CACE,aAAW,+BACXC,QAAS,EAAKxC,8BAFhB,UAIE,SAAC,IAAD,UAKRa,WAAY,CACVV,KAAM,QACNW,GAAI,SAENF,SAAU,EAAKhB,MAAMD,cAG1B,IAED8C,yBAA2B,WACzB,MAAqC,EAAK7C,MAAlC8C,EAAR,EAAQA,WAAY/C,EAApB,EAAoBA,aACpB,OACE,UAAC,IAAD,CACEgB,QAAQ,WACRb,MAAO4C,EACP9B,SAAUjB,EACVkB,WAAY,CACVV,KAAM,aACNW,GAAI,cANR,WASE,SAAC,IAAD,CAAUhB,MAAO,MAAjB,kBACA,SAAC,IAAD,CAAUA,MAAO,MAAjB,mBAGL,IAsDA,OAtDA,8BAED,WACE,IAAQ6C,EAAmBC,KAAKhD,MAAxB+C,eACR,OACE,+BACE,UAAClE,EAAD,YACE,UAACK,EAAD,YACE,SAAC,IAAD,CAAY6B,QAAQ,WAAWkC,QAAQ,SAAvC,oBAGCD,KAAKnC,8BAER,UAAC3B,EAAD,YACE,SAAC,IAAD,CAAY6B,QAAQ,WAAWkC,QAAQ,YAAvC,wCAGCD,KAAKxB,8BAER,UAACtC,EAAD,YACE,SAAC,IAAD,CAAY6B,QAAQ,WAAWkC,QAAQ,YAAvC,+CAGCD,KAAKtB,sCAER,UAACxC,EAAD,YACE,SAAC,IAAD,CAAY6B,QAAQ,WAAWkC,QAAQ,cAAvC,yBAGCD,KAAKnB,gCAER,UAAC3C,EAAD,CAAmBgE,OAAQH,EAA3B,WACE,SAAC,IAAD,CAAYhC,QAAQ,WAAWkC,QAAQ,QAAvC,mBAGCD,KAAKvD,MAAME,eACRqD,KAAKV,mBACLU,KAAKjB,uBACPgB,IACA,SAAC,IAAD,uHAMJ,UAAC7D,EAAD,YACE,SAAC,IAAD,CAAY6B,QAAQ,WAAWkC,QAAQ,aAAvC,uBAGCD,KAAKH,kCAKf,OAvQGrD,CAAuB2D,EAAAA,eA0Q7B,WAAeC,EAAAA,EAAAA,IAAa5D,E,4BCnSxB6D,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+IACD,sBAEJN,EAAQ,EAAUG,C,8LChBX,SAASI,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,EAClD,CACD,ICDIE,EDEJ,GAD8BC,E,SAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,sBCCtLC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAqC5GC,GAAqBtF,EAAAA,EAAAA,IAAO,MAAO,CACvCyB,KAAM,oBACNwD,KAAM,OACNM,kBAzBwB,SAACrE,EAAOsE,GAChC,IACEC,EACEvE,EADFuE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWF,EAAW9B,aAAkD,IAApC8B,EAAWG,sBAAiCJ,EAAOI,qBAAsBJ,EAAOC,EAAWxD,SACvK,GAiB0BjC,EAIxB,gBACDO,EADC,EACDA,MACAkF,EAFC,EAEDA,WAFC,OAGGI,EAAAA,EAAAA,GAAS,CACb3F,QAAS,OACT4F,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZC,OAAQ3F,EAAM4F,MAAQ5F,GAAO6F,QAAQC,OAAOC,QACpB,WAAvBb,EAAWxD,UAAX,sBAEKsE,EAAAA,cAFL,kBAEkDA,EAAAA,YAFlD,KAEyF,CACxFC,UAAW,KAEY,UAAxBf,EAAW9B,UAAwB,CAEpC8C,YAAa,GACY,QAAxBhB,EAAW9B,UAAsB,CAElC+C,WAAY,IACyB,IAApCjB,EAAWG,sBAAiC,CAE7Ce,cAAe,QAxBd,IAoJH,EA1HoCtC,EAAAA,YAAiB,SAAwBuC,EAASC,GACpF,IAAM3F,GAAQ4F,EAAAA,EAAAA,GAAc,CAC1B5F,MAAO0F,EACPnF,KAAM,sBAINsF,EAOE7F,EAPF6F,SACAC,EAME9F,EANF8F,UAFF,EAQI9F,EALF+F,UAAAA,OAHF,MAGc,MAHd,IAQI/F,EAJF0E,qBAAAA,OAJF,WAQI1E,EAHFgG,kBAAAA,OALF,SAMEvD,EAEEzC,EAFFyC,SACSwD,EACPjG,EADFe,QAEImF,GAAQC,EAAAA,EAAAA,GAA8BnG,EAAOmE,GAE7CiC,GAAiBC,EAAAA,EAAAA,MAAoB,CAAC,EACxCtF,EAAUkF,EAEVA,GAAeG,EAAerF,QAQ9BqF,IAAmBrF,IACrBA,EAAUqF,EAAerF,SAG3B,IAAMwD,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAG3E,EAAO,CACrCsG,YAAaF,EAAeE,YAC5BC,KAAMH,EAAeG,KACrB7B,qBAAAA,EACAjC,SAAAA,EACA1B,QAAAA,IAGIyF,EArFkB,SAAAjC,GACxB,IACEiC,EAMEjC,EANFiC,QACA9B,EAKEH,EALFG,qBACA4B,EAIE/B,EAJF+B,YACA7D,EAGE8B,EAHF9B,SACA8D,EAEEhC,EAFFgC,KACAxF,EACEwD,EADFxD,QAEI0F,EAAQ,CACZjC,KAAM,CAAC,OAAQE,GAAwB,uBAAwBjC,GAAY,WAAJ,QAAegC,EAAAA,EAAAA,GAAWhC,IAAa1B,EAASuF,GAAe,cAAeC,GAAQ,OAAJ,QAAW9B,EAAAA,EAAAA,GAAW8B,MAEjL,OAAOG,EAAAA,EAAAA,GAAeD,EAAO3C,EAA+B0C,EAC7D,CAwEiBG,CAAkBpC,GAClC,OAAoBqC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,SAA6B,CACpD3G,MAAO,KACP2F,UAAuBe,EAAAA,EAAAA,KAAKxC,GAAoBO,EAAAA,EAAAA,GAAS,CACvDmC,GAAIf,EACJxB,WAAYA,EACZuB,WAAWiB,EAAAA,EAAAA,SAAKP,EAAQhC,KAAMsB,GAC9BH,IAAKA,GACJO,EAAO,CACRL,SAA8B,kBAAbA,GAA0BG,GAGzBgB,EAAAA,EAAAA,MAAM7D,EAAAA,SAAgB,CACtC0C,SAAU,CAAc,UAAbpD,EAEXwB,IAAUA,GAAqB2C,EAAAA,EAAAA,KAAK,OAAQ,CAC1Cd,UAAW,cACXD,SAAU,YACN,KAAMA,MAT8De,EAAAA,EAAAA,KAAKK,EAAAA,EAAY,CAC3FjC,MAAO,iBACPa,SAAUA,QAWjB,G","sources":["plugins/Print/GeneralOptions.js","../node_modules/@mui/icons-material/FormatListNumbered.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Input,\n  Tooltip,\n} from \"@mui/material\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n}));\n\nclass GeneralOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n    useCustomScale: false,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  // Handles interaction with the scale-selector. We cannot let the\n  // parent handler (handleChange) take care of this on its own since\n  // we have an extra vale (\"CUSTOM_SCALE\") that should not affect the selected\n  // scale, but instead update the state so that a scale-input is shown.\n  handleScaleSelectChange = (e) => {\n    const { handleChange } = this.props;\n    const { value } = e.target;\n    // If we're not dealing with a custom scale, just update the scale, otherwise\n    // update the local state so that the user can set a custom scale.\n    value !== \"CUSTOM_SCALE\"\n      ? handleChange(e)\n      : this.setState({ useCustomScale: true });\n  };\n\n  // Handles when the custom scale input is to be hidden, and the scale-selector\n  // is to be shown. We have to make sure to update the scale to the option closest\n  // to the current value.\n  handleDisableCustomScaleInput = () => {\n    const { handleChange, scales, scale } = this.props;\n    // First we'll have to grab the closest scale option\n    const closestScaleOption = scales.reduce((prev, curr) =>\n      Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev\n    );\n    // Then we'll update the scale to that value\n    handleChange({ target: { name: \"scale\", value: closestScaleOption } });\n    // And then we'll toggle the scale-input.\n    this.setState({ useCustomScale: false });\n  };\n\n  renderPaperSizeSelector = () => {\n    const { format, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={format}\n        onChange={handleChange}\n        inputProps={{\n          name: \"format\",\n          id: \"format\",\n        }}\n      >\n        {this.props.options.paperFormats.map((value, index) => {\n          return (\n            <MenuItem key={\"paperFormat_\" + index} value={value}>\n              {value.toUpperCase()}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderUseMarginSelector = () => {\n    const { useMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useMargin}\n        onChange={handleChange}\n        inputProps={{\n          name: \"useMargin\",\n          id: \"useMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nej</MenuItem>\n      </Select>\n    );\n  };\n\n  renderTextIconInMarginsSelector = () => {\n    const { useMargin, useTextIconsInMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useTextIconsInMargin}\n        onChange={handleChange}\n        disabled={!useMargin}\n        inputProps={{\n          name: \"useTextIconsInMargin\",\n          id: \"useTextIconsInMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nej</MenuItem>\n      </Select>\n    );\n  };\n\n  renderOrientationSelector = () => {\n    const { orientation, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={orientation}\n        onChange={handleChange}\n        inputProps={{\n          name: \"orientation\",\n          id: \"orientation\",\n        }}\n      >\n        <MenuItem value={\"landscape\"}>Liggande</MenuItem>\n        <MenuItem value={\"portrait\"}>Stående</MenuItem>\n      </Select>\n    );\n  };\n\n  renderScaleSelector = () => {\n    const { model, scales, scale } = this.props;\n    // We're gonna have to create a new array with an object for each scale-value.\n    // The objects contain the actual scale-value, along with a user-friendly label.\n    // For example, scale: 1000, label: 1:1 000\n    // We also add the extra option (\"CUSTOM_SCALE\"), allowing the user to select a\n    // a custom scale value.\n    const scaleSelectorOptions = [\n      ...scales.map((s) => {\n        return { value: s, label: model.getUserFriendlyScale(s) };\n      }),\n      { value: \"CUSTOM_SCALE\", label: \"Ange annan skala\" },\n    ];\n    return (\n      <Select\n        variant=\"standard\"\n        value={scale}\n        onChange={this.handleScaleSelectChange}\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n      >\n        {scaleSelectorOptions.map((scale, i) => {\n          // Note: it is crucial to keep the scale value (in state) divided by 1000 from what is shown to user!\n          return (\n            <MenuItem key={i} value={scale.value}>\n              {scale.label}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderScaleInput = () => {\n    return (\n      <Input\n        value={this.props.scale}\n        type=\"number\"\n        startAdornment={<InputAdornment position=\"start\">1:</InputAdornment>}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <Tooltip title=\"Visa fördefinerade val\">\n              <IconButton\n                aria-label=\"toggle custom scale selector\"\n                onClick={this.handleDisableCustomScaleInput}\n              >\n                <FormatListNumberedIcon />\n              </IconButton>\n            </Tooltip>\n          </InputAdornment>\n        }\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n        onChange={this.props.handleChange}\n      />\n    );\n  };\n\n  renderSaveAsTypeSelector = () => {\n    const { saveAsType, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={saveAsType}\n        onChange={handleChange}\n        inputProps={{\n          name: \"saveAsType\",\n          id: \"saveAsType\",\n        }}\n      >\n        <MenuItem value={\"PDF\"}>PDF</MenuItem>\n        <MenuItem value={\"PNG\"}>PNG</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    const { printOptionsOk } = this.props;\n    return (\n      <>\n        <Root>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"format\">\n              Format\n            </InputLabel>\n            {this.renderPaperSizeSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Marginaler runt kartbilden\n            </InputLabel>\n            {this.renderUseMarginSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Text och ikoner utanför kartan\n            </InputLabel>\n            {this.renderTextIconInMarginsSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"orientation\">\n              Orientering\n            </InputLabel>\n            {this.renderOrientationSelector()}\n          </StyledFormControl>\n          <StyledFormControl error={!printOptionsOk}>\n            <InputLabel variant=\"standard\" htmlFor=\"scale\">\n              Skala\n            </InputLabel>\n            {this.state.useCustomScale\n              ? this.renderScaleInput()\n              : this.renderScaleSelector()}\n            {!printOptionsOk && (\n              <FormHelperText>\n                Bilden kommer inte kunna skrivas ut korrekt. Testa med en lägre\n                upplösning eller mindre skala.\n              </FormHelperText>\n            )}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"saveAsType\">\n              Spara som\n            </InputLabel>\n            {this.renderSaveAsTypeSelector()}\n          </StyledFormControl>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(GeneralOptions);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"\n}), 'FormatListNumbered');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["Root","styled","Grid","display","flexWrap","StyledFormControl","FormControl","margin","theme","spacing","width","GeneralOptions","state","anchorEl","useCustomScale","mapTextAvailableColors","handleScaleSelectChange","e","handleChange","props","target","value","setState","handleDisableCustomScaleInput","scales","scale","name","reduce","prev","curr","Math","abs","renderPaperSizeSelector","format","variant","onChange","inputProps","id","options","paperFormats","map","index","toUpperCase","renderUseMarginSelector","useMargin","renderTextIconInMarginsSelector","useTextIconsInMargin","disabled","renderOrientationSelector","orientation","renderScaleSelector","model","scaleSelectorOptions","s","label","getUserFriendlyScale","i","renderScaleInput","type","startAdornment","position","endAdornment","title","onClick","renderSaveAsTypeSelector","saveAsType","printOptionsOk","this","htmlFor","error","React","withSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","_extends","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}