{"version":3,"file":"static/js/5931.04c0ae36.chunk.js","mappings":"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","sources":["plugins/LayerComparer/CustomOLControl.js"],"sourcesContent":["import Control from \"ol/control/Control\";\nimport { getRenderPixel } from \"ol/render\";\nimport \"./index.css\";\n\nexport default class OlSideBySideControl extends Control {\n  #container = null;\n  #divider = null;\n  #range = null;\n\n  constructor() {\n    const container = document.createElement(\"div\");\n\n    const divider = document.createElement(\"div\");\n    divider.className = \"ol-side-by-side-divider\";\n\n    const range = document.createElement(\"input\");\n    range.type = \"range\";\n    range.min = 0;\n    range.max = 1;\n    range.step = \"any\";\n    range.value = 0.5;\n    range.className = \"ol-side-by-side-range\";\n\n    super({\n      element: container,\n    });\n\n    this.#container = container;\n    this.#divider = divider;\n    this.#range = range;\n  }\n\n  #addEvents() {\n    this.#range.addEventListener(\"input\", () => {\n      this.updateClip();\n    });\n  }\n\n  updateClip() {\n    this.#divider.style.left = this.#getPosition() + \"px\";\n    this.getMap().render();\n  }\n\n  #getPosition() {\n    const rangeValue = this.#range.value;\n    const offset = (0.5 - rangeValue) * (2 * 0 + 42);\n    const size = this.getMap().getSize();\n    return size[0] * Number(rangeValue) + offset;\n  }\n\n  #prerenderLeft = (event) => {\n    const ctx = event.context;\n    const mapSize = this.getMap().getSize();\n    const width = this.#getPosition();\n\n    const tl = getRenderPixel(event, [0, 0]);\n    const tr = getRenderPixel(event, [width, 0]);\n    const bl = getRenderPixel(event, [width, mapSize[1]]);\n    const br = getRenderPixel(event, [0, mapSize[1]]);\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(tl[0], tl[1]);\n    ctx.lineTo(tr[0], tr[1]);\n    ctx.lineTo(bl[0], bl[1]);\n    ctx.lineTo(br[0], br[1]);\n    ctx.closePath();\n    ctx.clip();\n  };\n\n  #prerenderRight = (event) => {\n    const ctx = event.context;\n    const mapSize = this.getMap().getSize();\n    const width = this.#getPosition();\n\n    const tl = getRenderPixel(event, [width, 0]);\n    const tr = getRenderPixel(event, [mapSize[0], 0]);\n    const bl = getRenderPixel(event, mapSize);\n    const br = getRenderPixel(event, [width, mapSize[1]]);\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(tl[0], tl[1]);\n    ctx.lineTo(tr[0], tr[1]);\n    ctx.lineTo(bl[0], bl[1]);\n    ctx.lineTo(br[0], br[1]);\n    ctx.closePath();\n    ctx.clip();\n  };\n\n  #postrender(event) {\n    const ctx = event.context;\n    ctx.restore();\n  }\n\n  #unsetLayers = () => {\n    // Grab previous compare layer and hide them\n    this.getMap()\n      .getLayers()\n      .getArray()\n      .filter(\n        (l) =>\n          l.get(\"isLeftCompareLayer\") === true ||\n          l.get(\"isRightCompareLayer\") === true\n      )\n      .forEach((l) => {\n        l.set(\"visible\", false, true);\n        if (l.get(\"isLeftCompareLayer\") === true) {\n          l.set(\"isLeftCompareLayer\", false);\n          l.un(\"prerender\", this.#prerenderLeft);\n        } else {\n          l.set(\"isRightCompareLayer\", false);\n          l.un(\"prerender\", this.#prerenderRight);\n        }\n        l.un(\"postrender\", this.#postrender);\n      });\n  };\n\n  setCompareLayers(leftLayer, rightLayer) {\n    // Unset possible previous compare layers\n    this.#unsetLayers();\n\n    // Set visibility, silently (don't trigger a map render at this time)\n    leftLayer.set(\"visible\", true, true);\n\n    // Set a unique flag - used later\n    leftLayer.set(\"isLeftCompareLayer\", true);\n\n    // Add the render event handler that will split the screen in two\n    leftLayer.on(\"prerender\", this.#prerenderLeft);\n    leftLayer.on(\"postrender\", this.#postrender);\n\n    // Do the same for the other side of the screen\n    rightLayer.set(\"visible\", true, true);\n    rightLayer.set(\"isRightCompareLayer\", true);\n    rightLayer.on(\"prerender\", this.#prerenderRight);\n    rightLayer.on(\"postrender\", this.#postrender);\n  }\n\n  remove() {\n    // Hide previous compare layers and remove custom render handlers\n    this.#unsetLayers();\n\n    // Remove the DIV. Do it in a try/catch, else the DOM will throw\n    // an error if element can't be found.\n    try {\n      this.#container.removeChild(this.#divider);\n      this.#container.removeChild(this.#range);\n    } catch (error) {}\n  }\n\n  open() {\n    this.#container.appendChild(this.#divider);\n    this.#container.appendChild(this.#range);\n    this.#addEvents();\n  }\n}\n"],"names":["OlSideBySideControl","container","document","createElement","divider","className","range","type","min","max","step","value","element","event","ctx","context","mapSize","getMap","getSize","width","tl","getRenderPixel","tr","bl","br","save","beginPath","moveTo","lineTo","closePath","clip","getLayers","getArray","filter","l","get","forEach","set","un","this","style","left","render","leftLayer","rightLayer","on","removeChild","error","appendChild","Control","addEventListener","updateClip","rangeValue","offset","Number","restore"],"sourceRoot":""}