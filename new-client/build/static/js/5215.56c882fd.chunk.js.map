{"version":3,"file":"static/js/5215.56c882fd.chunk.js","mappings":"oQAUMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAgB,gBAAGE,EAAH,EAAGA,MAAH,eACjCC,aAAcD,EAAME,QAAQ,GAC5BC,MAAO,SACNH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,UAAW,OACXC,aAAc,iBACdC,aAAc,EACdC,OAAQ,EACRN,MAAO,OACPO,eAAgB,QATe,IAa7BC,GAAeb,EAAAA,EAAAA,IAAOc,EAAAA,EAAPd,EAAe,kBAAgB,CAClDe,WADkC,EAAGb,MACnBc,QAAQC,KAAKC,QADG,IAI9BC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACI,OADJA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,MAAM,EACNJ,KAAM,IAFA,EA+BP,OA/BO,8BAiBR,WACE,MAA2CK,KAAKC,MAAxCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,MAEjC,OACE,SAAC5B,EAAD,CAAY2B,QAASA,EAArB,UACE,SAAC,IAAD,WACE,SAAC,IAAD,CACEE,QAAQ,SAACf,EAAD,UAAeY,IACvBE,MAAOA,EACPE,UAAWL,OAKpB,OAhCGL,CAAaW,EAAAA,eAAbX,EAaGY,aAAe,CACpBP,SAAU,qBACVG,MAAO,gBAoBX,W,kNCrDMK,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAUJ,WAAYT,GAAQ,IAAD,mBACjB,cAAMA,IA+ERU,kBAAoB,SAACC,GACnB,EAAKC,WAAW,CACdC,wBAAwB,EACxBC,aAAa,IAEf,EAAKd,MAAMe,IAAIC,eAAeC,QAAQ,8BACvC,EAtFkB,EAwFnBL,WAAa,SAACM,GACZ,IAAML,EAAyBK,EAAKL,yBAA0B,EAC5DC,EAAcI,EAAKJ,cAAe,EAapC,GAVA,EAAKd,MAAMe,IAAII,WAAa,EAAKC,KAGjC,EAAKpB,MAAMe,IAAIC,eAAeC,QAAQ,uBAAwB,CAC5DI,UAAW,cACXC,WAAY,EAAKF,KACjBG,UAAW,EAAKvB,MAAMe,IAAIS,OAAOD,aAIF,IAA7B,EAAK1B,MAAM4B,cACb,OAAO,MAGkB,IAA3BZ,GAAmC,EAAKb,MAAMe,IAAIW,cAAf,WAEnC,EAAKC,SACH,CACEF,eAAe,IAEjB,YAEkB,IAAhBX,GAC4C,oBAAnC,EAAKd,MAAM4B,OAAOC,cACzB,EAAK7B,MAAM4B,OAAOC,cACrB,GAEJ,EAxHkB,EA0HnBC,YAAc,WAGR,EAAKV,OAAS,EAAKpB,MAAMe,IAAII,aAC/B,EAAKnB,MAAMe,IAAII,gBAAaY,GAE9B,EAAKJ,SACH,CACEF,eAAe,IAEjB,WAC4C,oBAAnC,EAAKzB,MAAM4B,OAAOI,cACvB,EAAKhC,MAAM4B,OAAOI,cACrB,GAEJ,EAtIC,EAAKZ,KAAOpB,EAAMoB,KAAKa,oBAAiBF,EAGxC,EAAKG,YAAclC,EAAMmC,QAAQD,aAAelC,EAAM4B,OAAOM,YAG7D,IAAME,GAC2C,IAA9C,EAAKpC,MAAMe,IAAIS,OAAOa,UAAUC,IAAIC,QAClCC,EAAAA,SACGxC,EAAMmC,QAAQM,qBACdzC,EAAMmC,QAAQC,kBACpB,EAKEA,GACF,EAAKpC,MAAMe,IAAIC,eAAeC,QAAQ,uBAAwB,CAC5DI,UAAW,cACXC,WAAY,EAAKF,KACjBG,UAAW,EAAKvB,MAAMe,IAAIS,OAAOD,YAMrC,EAAK1B,MAAQ,CACXO,MAAOJ,EAAMmC,QAAQ/B,OAASJ,EAAM4B,OAAOxB,OAAS,iBACpDsC,MAAO1C,EAAMmC,QAAQO,OAAS1C,EAAM4B,OAAOc,OAAS,KACpDjB,cAAeW,GAMjB,EAAKhC,MAAQJ,EAAMmC,QAAQ/B,OAASJ,EAAM4B,OAAOxB,OAAS,iBAG1D,EAAKtB,MAAQkB,EAAMmC,QAAQrD,OAASkB,EAAM4B,OAAO9C,OAAS,IAC1D,EAAK6D,OAAS3C,EAAMmC,QAAQQ,QAAU3C,EAAM4B,OAAOe,QAAU,OAC7D,EAAKC,SAAW5C,EAAMmC,QAAQS,UAAY5C,EAAM4B,OAAOgB,UAAY,OAGnE5C,EAAMe,IAAI8B,sBAAV,WAIA,IAAMxB,EAAS,UAAM,EAAKD,KAAX,eAGfpB,EAAMe,IAAIC,eAAe8B,UAAUzB,GAAW,SAACH,GAC7C,EAAKN,WAAWM,EACjB,IAGD,IAAM6B,EAAc,UAAM,EAAK3B,KAAX,gBA1DH,OA4DjBpB,EAAMe,IAAIC,eAAe8B,UAAUC,GAAgB,WACjD,EAAKjB,aACN,IA9DgB,CA+DlB,CAmMA,O,0CAhMD,SAAmBkB,GAGjBA,EAAUpB,OAAOxB,QAAUL,KAAKC,MAAM4B,OAAOxB,OAC3CL,KAAK4B,SAAS,CAAEvB,MAAOL,KAAKC,MAAM4B,OAAOxB,QAE3C4C,EAAUpB,OAAOc,QAAU3C,KAAKC,MAAM4B,OAAOc,OAC3C3C,KAAK4B,SAAS,CAAEe,MAAO3C,KAAKC,MAAM4B,OAAOc,OAC5C,+BAED,SAAeO,GACb,MAAO,CAAC,OAAQ,SAASC,SAASD,EACnC,6BAmED,SAAarB,GACX,IAAQqB,EAAWlD,KAAKC,MAAMmC,QAAtBc,OAIR,MAAiC,oBAA1B,OAAOrB,QAAP,IAAOA,OAAP,EAAOA,EAAQuB,QACpBvB,EAAOuB,UAKP,iCACE,SAAC,UAAD,CACEnC,eAAgBjB,KAAKC,MAAMe,IAAIC,eAC/BZ,MAAOL,KAAKF,MAAMO,MAClBsC,MAAO3C,KAAKF,MAAM6C,MAClBU,QAASrD,KAAK+B,YACdhC,KAAMC,KAAKF,MAAM4B,cACjB4B,SAAUtD,KAAKC,MAAM4B,OAAOyB,SAC5BC,WAAYvD,KAAKC,MAAM4B,OAAO0B,WAC9BC,WAAYxD,KAAKC,MAAM4B,OAAO2B,WAC9BC,gBAAiBzD,KAAKC,MAAM4B,OAAO4B,gBACnCC,yBAA0B1D,KAAKC,MAAM4B,OAAO6B,yBAC5CC,gBAAiB3D,KAAKC,MAAM4B,OAAO8B,gBACnCC,WAAY5D,KAAKC,MAAM4B,OAAO+B,WAC9BC,qBAAsB7D,KAAKC,MAAM4B,OAAOgC,qBACxCC,eAAgB9D,KAAKC,MAAM4B,OAAOiC,eAClC/E,MAAOiB,KAAKjB,MACZ6D,OAAQ5C,KAAK4C,OACbC,SAAU7C,KAAK6C,SACfkB,KAAK,SACLC,oBAAqBhE,KAAKC,MAAMe,IAAIS,OAAOa,UAAU2B,MAAMC,MACzD,SAACC,GAAD,MAAkB,kBAAXA,EAAE9C,IAAT,IApBJ,SA2BGb,EAAAA,aAAmBR,KAAKC,MAAMmE,SAAU,CACvC1C,cAAe1B,KAAKF,MAAM4B,mBAIjB,YAAXwB,GAAwBlD,KAAKqE,eAAenB,KAC5ClD,KAAKsE,qBAENtE,KAAKqE,eAAenB,IACnBlD,KAAKuE,mBAAL,UAA2BrB,EAA3B,YAEU,YAAXA,GAAwBlD,KAAKwE,wBAGnC,GASH,gCACE,WACE,OAAOC,EAAAA,EAAAA,eACL,SAAC,IAAD,CAAQC,KAAM1E,KAAKqE,eAAerE,KAAKC,MAAMmC,QAAQc,QAArD,UACE,UAAC,KAAD,CACEyB,QAAM,EACNC,SAAS,EACTC,SAAU7E,KAAKF,MAAM4B,cACrBtB,QAASJ,KAAKW,kBAJhB,WAME,SAAC,IAAD,UAAeX,KAAKC,MAAM4B,OAAO1B,QACjC,SAAC,IAAD,CAAcP,QAASI,KAAKK,aAGhCyE,SAASC,eAAe,kBAE3B,mCAED,SAAmBC,GACjB,OAAOP,EAAAA,EAAAA,eAEL,SAAC,IAAD,CAAQQ,QAAM,EAAd,UACE,SAAC,UAAD,CACE9E,KAAMH,KAAKC,MAAM4B,OAAO1B,KACxBC,QAASJ,KAAKW,kBACdN,MAAOL,KAAKK,MACZH,SAAUF,KAAKmC,gBAGnB2C,SAASC,eAAeC,GAE3B,oCAED,WACE,OAAOP,EAAAA,EAAAA,eACL,SAAC,UAAD,CACEtE,KAAMH,KAAKC,MAAM4B,OAAO1B,KACxBC,QAASJ,KAAKW,kBACdN,MAAOL,KAAKK,MACZH,SAAUF,KAAKmC,cAEjB2C,SAASC,eAAe,0BAE3B,uBAED,WAEE,OACgD,IAA9C/E,KAAKC,MAAMe,IAAIS,OAAOa,UAAUC,IAAIC,OACpCxC,KAAKkF,aAAalF,KAAKC,MAAM4B,OAEhC,OA5QGnB,CAAyBF,EAAAA,eA+Q/B,W,+KC/QM2E,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAMJ,WAAYlF,GAAQ,IAAD,yBACjB,cAAMA,IANRgC,aAAe,WACb,EAAKmD,cAAclE,QAAQ,aAC3B,EAAKmE,UAAUC,OAChB,EAIC,EAAKF,cAAgBG,MACrB,EAAKF,UAAY,IAAIG,EAAAA,QAAU,CAC7BjD,IAAKtC,EAAMsC,IACXvB,IAAKf,EAAMe,IACXyE,SAAU,EAAKL,cACfhD,QAASnC,EAAMmC,UAPA,CASlB,CAyBA,OAzBA,8BAED,WACE,OACE,SAAC,WAAD,kBACMpC,KAAKC,OADX,IAEEoB,KAAK,OACLQ,OAAQ,CACN1B,MAAM,SAAC,IAAD,IACNE,MAAO,WACP8B,YAAa,iCACbS,OAAQ,IACR7D,MAAO,IACP2G,SAAK1D,EACL2D,UAAM3D,EACNC,aAAcjC,KAAKiC,cAXvB,UAcE,SAAC,UAAD,CACEjB,IAAKhB,KAAKC,MAAMe,IAChB4E,MAAO5F,KAAKqF,UACZI,SAAUzF,KAAKoF,kBAItB,OAxCGD,CAAa3E,EAAAA,eA2CnB,W,mSCzCMgF,EAAAA,WACJ,WAAYK,GAAW,IAAD,4BA4StBC,gBAAkB,SAACC,GACjB,IACIC,EADAC,EAAS,IAAIC,EAAAA,EAEjB,IACEF,EAAWC,EAAOE,aAAaJ,EAGhC,CAFC,MAAOnF,GACPwF,MAAM,+DACP,CAMD,EAAKC,aACHL,EAASM,OAAS,EAAIN,EAAS,GAAGO,kBAAoB,OAEpD,EAAKC,WAAWC,eAAeC,MAAK,SAACC,GAAD,OAAWA,EAAMC,MAAjB,MACtCZ,EAAW,EAAKa,qBAAqBb,IAGvC,EAAKc,aAAaC,YAAYf,GAC9B,EAAKc,aAAaE,cAAcC,SAAQ,SAACC,GACvCA,EAAQC,GAAG,kBAAkB,SAACvG,GACC,YAAzBsG,EAAQE,cAGiB,UAAzBF,EAAQE,eAGZF,EAAQE,aAAe,UACxB,IACDF,EAAQC,GAAG,UAAU,SAACvG,GACS,YAAzBsG,EAAQE,cAGiB,UAAzBF,EAAQE,eAGZF,EAAQE,aAAe,UACxB,GACF,GACF,EArVqB,KA+hBtBC,eAAiB,SAACzG,GAChB,EAAK2B,IAAI+E,sBAAsB1G,EAAE2G,OAAO,SAACL,GACnC,EAAKJ,aAAaE,cAAcN,MAAK,SAACc,GAAD,OAAOA,IAAMN,CAAb,MACV,UAAzBA,EAAQE,aACVF,EAAQE,kBAAepF,EAEvBkF,EAAQE,aAAe,UAEzBF,EAAQO,SAAS,EAAKC,kBAEzB,GACF,EA1iBqB,KAmlBtBC,iBAAmB,WACjB,EAAKC,kBAAoB,EAAKC,YAC9B,EAAKA,iBAAc7F,EACnB,EAAKyD,SAASvE,QAAQ,cAAe,EAAK2G,YAC3C,EAtlBC7H,KAAKuC,IAAMsD,EAAStD,IACpBvC,KAAKgB,IAAM6E,EAAS7E,IACpBhB,KAAKyF,SAAWI,EAASJ,SACzBzF,KAAKoC,QAAUyD,EAASzD,QAExBpC,KAAK8H,eAAiB9H,KAAKoC,QAAQ0F,eACnC9H,KAAK+H,QAAU/H,KAAKoC,QAAQ2F,QAE5B/H,KAAK8G,kBAAe9E,EACpBhC,KAAKgI,WAAQhG,EACbhC,KAAKiI,YAASjG,EACdhC,KAAKkI,YAASlG,EACdhC,KAAKmI,SAAMnG,EACXhC,KAAK6H,iBAAc7F,EACnBhC,KAAK4H,uBAAoB5F,EACzBhC,KAAKwG,gBAAaxE,EAClBhC,KAAKoI,mBAAgBpG,EACrBhC,KAAKqI,WAAQrG,EACbhC,KAAKsI,YAAc,GACnBtI,KAAKuI,OAAQ,EACbvI,KAAKwI,gBAAkB,MAGvBxI,KAAKoC,QAAQ2F,QAAU/H,KAAKoC,QAAQ2F,QAAQxF,KAAI,SAACkG,GAEnB,IAAxBA,EAAEC,IAAIC,OAAOrC,SACfmC,EAAEC,IAAM,8BAOV,IAAME,EAAM,IAAIC,IAAIJ,EAAEG,KAItB,OAHAA,EAAIE,aAAaC,OAAO,WACxBN,EAAEG,IAAMA,EAAII,KAELP,CACR,GACF,CA0jBA,OA1jBA,6BAED,SAAMzC,GACJ,IAAIC,EAAS,IAAIC,EAAAA,EACf+C,EAAKjJ,KAAKwG,WAAW0C,OAAO,GAAGC,MAAM,KACrCC,EAAmB,IAAdH,EAAG3C,OAAe2C,EAAG,GAAK,GAC/BI,EAAmB,IAAdJ,EAAG3C,OAAe2C,EAAG,GAAKA,EAAG,GAClC7G,EAAU,CACRkH,UAAWtJ,KAAKwG,WAAWkC,IAC3Ba,cAAeH,EACfI,YAAaH,EACbI,MAAM,EACNC,QAAS,QACTC,QAAS3J,KAAKwG,WAAWoD,YAG7B,OAAO3D,EAAO4D,iBACZ7D,EAAS8D,QACT9D,EAAS+D,QACT/D,EAASgE,QACT5H,EAEH,6BAED,SAAa6H,GACX,IAAIC,EACFC,EAAanK,KAAKuC,IACf6H,YACAC,WACAnG,MAAK,SAAC8D,GACL,IAAIsC,GAAQ,EACZ,GAAItC,EAAMuC,YAAYC,UAAW,CAC/B,IAAIC,EAASzC,EAAMuC,YAAYC,YAC/B,GAAsB,kBAAXC,EAAqB,CAE9B,IAAIC,EAAYC,MAAMC,QAAQH,EAAOI,QACjCJ,EAAOI,OAAO,GAAG1B,MAAM,KACvBsB,EAAOI,OAAO1B,MAAM,KACpB2B,EAAab,EAAUd,MAAM,KACR,IAArBuB,EAAUpE,QAAsC,IAAtBwE,EAAWxE,SACvCgE,EAAQL,IAAcQ,EAAOI,QAEN,IAArBH,EAAUpE,SACZgE,EAAQQ,EAAW,KAAOL,EAAOI,OAEpC,CACF,CACD,OAAOP,CACR,IAEDH,KACFD,EAASC,EAAWI,aACbQ,UACPb,EAAOc,aAAa,CAAEC,KAAMC,KAAKC,QACjCnL,KAAKuC,IAAI6I,aAEZ,kCAED,SAAkBC,GAChB,IAAIC,EACkB,kBAAbD,GACH,IAAIE,eAAgBC,kBAAkBH,GACtCA,EACN,OAAO,IAAII,MAAOC,OAAOJ,EAC1B,yBAED,SAAStF,EAAU2F,GAAO,IAAD,OACnBC,EAAO5L,KAAK6L,MAAM7F,GACpB8F,EAAa,IAAIP,cACjBQ,EAAM/L,KAAKwG,WACXwF,EAAUJ,EAAOE,EAAWN,kBAAkBI,QAAQ5J,EAEpDgK,IACFC,EAAAA,EAAAA,QAAOF,EAAInD,IAAK,CACdsD,OAAQ,OACRC,KAAMH,EACNI,YAAa,cACbC,QAAS,CACP,eAAgB,cAGjBC,MAAK,SAACjB,GACLA,EAAS1L,OAAO2M,MAAK,SAACC,GACpB,IAAMC,EAAS,EAAKC,kBAAkBF,GAClCC,EAAOE,kBAAoBF,EAAOG,sBAIpC,EAAKC,aAAab,EAAI7C,OAAO,IAC7B,EAAKpC,aACFE,cACA6F,QAAO,SAACrF,GAAD,YAA0BxF,IAAnBwF,EAAEJ,YAAT,IACPH,SAAQ,SAACO,GAAD,OAAQA,EAAEJ,kBAAepF,CAAzB,KANX2J,EAAKa,EASR,GACF,IACAM,OAAM,SAACzB,GACNA,EAAS1L,OAAO2M,MAAK,SAACS,GACpBpB,EAAKoB,EACN,GACF,GAEN,qBAED,SAAKpB,GAAO,IAAD,OACHzH,EAAO,SAACH,GAAD,OACX,EAAK+C,aACFE,cACA6F,QAAO,SAAC3F,GAAD,OAAaA,EAAQE,eAAiBrD,CAAtC,GAHC,EAKPiC,EAAW,CACf+D,QAAS7F,EAAK,WAAW3B,KAAI,SAAC2E,GAE5B,OADAA,EAAQ8F,MAAM,aACP9F,CACR,IACD4C,QAAS5F,EAAK,SACd8F,QAAS9F,EAAK,YAGhB,GAC8B,IAA5B8B,EAAS+D,QAAQzD,QACW,IAA5BN,EAAS8D,QAAQxD,QACW,IAA5BN,EAASgE,QAAQ1D,OAEjB,OAAOqF,IAGT3L,KAAKiN,SAASjH,EAAU2F,EACzB,+BAED,SAAezE,GACb,MAAO,CACL,IAAIgG,EAAAA,GAAM,CACRC,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,uBACP5D,MAAO,IAETsO,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,uBAET4K,MAAO,IAAIC,EAAAA,EAAO,CAChBH,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,uBAETwK,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,uBACP5D,MAAO,IAET0O,OAAQ,MAGZ,IAAIP,EAAAA,GAAM,CACRK,MAAO,IAAIG,EAAAA,EAAa,CACtBL,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,uBAETwK,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,mBACP5D,MAAO,IAET4O,OAAQ,EACRF,OAAQ,EACRG,MAAOC,KAAKC,GAAK,IAEnBC,SAAU,SAAC7G,GACT,IAAI8G,EACF9G,EAAQ+G,wBAAyBC,EAAAA,GAC7BhH,EAAQ+G,cAAcE,iBAAiB,GACvCjH,EAAQ+G,cAAcE,iBAC5B,OAAO,IAAIC,EAAAA,EAAWJ,EACvB,IAGN,+BAED,SAAe9G,GACb,MAAO,CACL,IAAIgG,EAAAA,GAAM,CACRC,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,mBACP5D,MAAO,IAETsO,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,uBAET4K,MAAO,IAAIC,EAAAA,EAAO,CAChBH,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,uBAETwK,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,mBACP5D,MAAO,IAET0O,OAAQ,MAIf,+BAED,SAAevG,GACb,MAAO,CACL,IAAIgG,EAAAA,GAAM,CACRC,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,mBACP5D,MAAO,IAETsO,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,qBAET4K,MAAO,IAAIC,EAAAA,EAAO,CAChBH,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,qBAETwK,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,mBACP5D,MAAO,IAET0O,OAAQ,MAIf,+BAED,WACE,MAAO,CACL,IAAIP,EAAAA,GAAM,CACRG,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,6BAETwK,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,qBACP5D,MAAO,IAETwO,MAAO,IAAIC,EAAAA,EAAO,CAChBC,OAAQ,EACRJ,KAAM,IAAIC,EAAAA,EAAK,CACb3K,MAAO,uBAETwK,OAAQ,IAAIC,EAAAA,EAAO,CACjBzK,MAAO,2BACP5D,MAAO,QAKhB,qCAED,SAAqBiH,GAAW,IAAD,OAC7B,OAAOA,EAAS6G,QAAO,SAAC3F,GACtB,OAAO,EAAKV,WAAWC,eAAeC,MAAK,SAACC,GAC1C,IAAI0H,EAAQnH,EAAQoH,gBAAgB3H,EAAM4H,MAC1C,SAAI5H,EAAMC,QAAUyH,IAAU1H,EAAM6H,aAIrC,GACF,GACF,yBA6CD,SAAStE,EAAQuE,EAAQ9C,GAAO,IAAD,SAMvB/C,EAAM,IAAIC,IAAIqB,EAAOtB,KAGrB8F,EAAuB,CAAC,EATD,UAUR9F,EAAIE,aAAa6F,WAVT,IAU7B,2BAAiD,CAAC,IAAD,qBAArCC,EAAqC,KAAlCC,EAAkC,KAC/CH,EAAqBE,EAAEE,eAAiBD,CACzC,CAZ4B,+BAiB7B,IAAME,GAAkB,kBACnBL,GADmB,IAEtBM,QAAS,MACTC,QAAS,QACTC,QAAS,aACTC,SAAUjF,EAAOhB,OAAO,GACxBkG,QAASlF,EAAON,aAIZd,EAAe,IAAIuG,gBAAgBN,GAEzCnG,EAAI0G,OAASxG,EAAayG,YAG1BtD,EAAAA,EAAAA,QAAOrD,EAAI2G,YACRjD,MAAK,SAACjB,GACL,GAAwB,MAApBA,EAASmE,OACX,OAAO7D,EAAK,mBAEdN,EAAS1L,OAAO2M,MAAK,SAACvG,GACpB,OAAIA,EAAK5C,SAAS,uBACTwI,EAAK,oBAEd,EAAK7F,gBAAgBC,GACd4F,EAAK,qBACb,GACF,IACAmB,OAAM,SAAC2C,GAEN,OADAC,QAAQC,KAAR,wCAA8CF,IACvC9D,EAAK,kBACb,GACJ,+BAED,SAAezE,GACblH,KAAK6H,YAAcX,EACnBlH,KAAKyF,SAASvE,QAAQ,cAAegG,EACtC,gCAED,SAAgB0I,GAAQ,IAAD,OACS,IAA1BA,EAAM/K,SAASyB,QACjBtG,KAAK6P,eAAe,KAAM,MAG5BD,EAAM/K,SAASoC,SAAQ,SAACC,IACjBA,EAAQ4I,SAAW5I,EAAQoH,gBAAgByB,MAC9C,EAAK9H,OAAOjB,cAAcgJ,OAAO9I,GAEnC0I,EAAMK,gBAAgB1H,OAAQ,EAC9B,EAAKsH,eAAe3I,EACrB,GACF,oCAED,WAAuB,IAAD,OACJlH,KAAKuC,IAClB6H,YACAC,WACAwC,QACC,SAAC7E,GAAD,OAAWA,EAAMsG,gBAAgB4B,UAAY,EAAK1J,WAAW0J,OAA7D,IAGMjJ,SAAQ,SAACkJ,GACjB,GAAIA,EAAS5F,UAAW,CACtB,IAAI9B,EAAI0H,EAAS5F,YAIjB,GAHI9B,EAAE2H,OACJ3H,EAAE2H,QAEA3H,EAAE+B,UAAW,CACf,IAAIC,EAAShC,EAAE+B,YACfC,EAAOtG,GAAI,IAAI+G,MAAOmF,kBACtB5H,EAAEuC,aAAaP,EAChB,CACGhC,EAAEsC,SACJtC,EAAEsC,SAEL,CACF,GACF,yBAED,SAASuF,EAAW3E,GAAO,IAAD,OACxB3L,KAAKkK,OAASlK,KAAK+H,QAAQ7D,MAAK,SAACgG,GAAD,OAAYA,EAAOlF,KAAOsL,CAA1B,IAChCtQ,KAAKuI,OAAQ,EACbvI,KAAK8G,aAAe,IAAIyJ,EAAAA,EAAa,CACnCC,OAAQ,SAAC/B,GAAD,OAAY,EAAKgC,SAAS,EAAKvG,OAAQuE,EAAQ9C,EAA/C,EACR+E,SAAUC,EAAAA,GACV/G,WAAY5J,KAAKkK,OAAON,aAG1B5J,KAAKgI,MAAQ,IAAI4I,EAAAA,EAAO,CACtBC,UAAW,SACXC,OAAQ,IACRvC,KAAM,aACN2B,QAAS,aACThG,OAAQlK,KAAK8G,aACbiK,MAAO/Q,KAAKgR,mBAGVhR,KAAKgI,OACPhI,KAAKuC,IAAI0O,YAAYjR,KAAKgI,OAG5BhI,KAAKuC,IAAI2O,SAASlR,KAAKgI,OACvBhI,KAAKwG,WAAaxG,KAAKkK,OACvBlK,KAAK6H,YAAc,KACnB7H,KAAKyF,SAASvE,QAAQ,aAAclB,KAAKkK,QACzClK,KAAKyF,SAASvE,QAAQ,cAAe,MACrClB,KAAKyF,SAASvE,QAAQ,eAAgBlB,KAAKgI,MAC5C,+BAED,WAAkB,IAAD,OACfhI,KAAKiI,OAAS,IAAIkJ,EAAAA,EAAO,CACvBJ,MAAO/Q,KAAKoR,iBACZC,gBAAiBC,EAAAA,GACjBpI,OAAQ,CAAClJ,KAAKgI,SAGhBhI,KAAKiI,OAAOd,GAAG,UAAU,SAACyI,GACxB,EAAK2B,gBAAgB3B,EAAO,EAAK1F,OAClC,IAEDlK,KAAKkI,OAAS,IAAIsJ,EAAAA,EAAO,CACvBxL,SAAUhG,KAAKiI,OAAOjB,gBAExBhH,KAAKuC,IAAIkP,eAAezR,KAAKiI,QAC7BjI,KAAKuC,IAAIkP,eAAezR,KAAKkI,OAC9B,4BAED,SAAYwJ,GAAe,IAAD,OACxB1R,KAAK2R,KAAO,IAAIC,EAAAA,GAAK,CACnB1H,OAAQlK,KAAK8G,aACbiK,MAAO/Q,KAAK6R,iBACZxQ,KAAMqQ,EACNI,WAAW,EACXzL,aAAcrG,KAAKqG,eAErBrG,KAAK2R,KAAKxK,GAAG,WAAW,SAACyI,GACvBA,EAAM1I,QAAQE,aAAe,QAC7B,EAAKyI,eAAeD,EAAM1I,SAO1B6K,YAAW,WACT,EAAKC,uBACN,GAAE,EACJ,IACDhS,KAAKuC,IAAIkP,eAAezR,KAAK2R,MAC7B3R,KAAKuC,IAAI0P,UAAUC,IAAI,OACxB,+BAED,WACElS,KAAKgQ,QAAS,EACdhQ,KAAKuC,IAAI4E,GAAG,cAAenH,KAAKqH,eACjC,6BAED,WACErH,KAAKmS,KAAO,IAAIC,EAAAA,EAAU,CACxBlJ,OAAQ,CAAClJ,KAAKgI,SAEhBhI,KAAKuC,IAAIkP,eAAezR,KAAKmS,KAC9B,oCAED,SAAoB9Q,EAAMqQ,GACX,QAATrQ,GACFrB,KAAKqS,YAAYX,GAEN,SAATrQ,GACFrB,KAAKsS,eAEM,WAATjR,GACFrB,KAAKuS,iBAEM,WAATlR,IACFrB,KAAKuC,IAAI0P,UAAUC,IAAI,QACvBlS,KAAKwS,kBAIPxS,KAAKuC,IAAIkQ,WAAWP,IAAI,UACzB,sCAeD,WAEElS,KAAKuC,IAAIkQ,WAAW1J,OAAO,WAGvB/I,KAAKiI,QACPjI,KAAKuC,IAAImQ,kBAAkB1S,KAAKiI,QAE9BjI,KAAKkI,QACPlI,KAAKuC,IAAImQ,kBAAkB1S,KAAKkI,QAE9BlI,KAAK2R,MACP3R,KAAKuC,IAAImQ,kBAAkB1S,KAAK2R,MAE9B3R,KAAKmS,MACPnS,KAAKuC,IAAImQ,kBAAkB1S,KAAKmS,MAE9BnS,KAAKgQ,SACPhQ,KAAKgQ,QAAS,EACdhQ,KAAKuC,IAAI0P,UAAUlJ,OAAO,QAC1B/I,KAAKuC,IAAIoQ,GAAG,cAAe3S,KAAKqH,gBAEnC,sBAED,WACErH,KAAKwG,gBAAaxE,EAClBhC,KAAK6H,iBAAc7F,EACnBhC,KAAKoI,mBAAgBpG,EACrBhC,KAAKwI,gBAAkB,MACvBxI,KAAKuI,OAAQ,EACbvI,KAAKuC,IAAI0P,UAAUlJ,OAAO,QAEtB/I,KAAKgI,QACPhI,KAAKuC,IAAI0O,YAAYjR,KAAKgI,OAC1BhI,KAAKgI,WAAQhG,GAEfhC,KAAKgS,uBACN,2BAQD,WACEhS,KAAKsF,QACLtF,KAAKyF,SAASvE,QAAQ,cAAelB,KAAK6H,aAC1C7H,KAAKyF,SAASvE,QAAQ,aAAclB,KAAKwG,YACzCxG,KAAKyF,SAASvE,QAAQ,aACvB,2BAED,WACE,OAAOlB,KAAKoC,QAAQ2F,OACrB,OAnmBGvC,GAsmBN,W","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Edit/Edit.js","plugins/Edit/EditModel.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Drawer buttons and Widget buttons should render a Drawer button. */}\n        {(target === \"toolbar\" || this.pluginIsWidget(target)) &&\n          this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden mdUp={this.pluginIsWidget(this.props.options.target)}>\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      <PluginControlButton\n        icon={this.props.custom.icon}\n        onClick={this.handleButtonClick}\n        title={this.title}\n        abstract={this.description}\n      />,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React from \"react\";\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\n\nimport FormatShapesIcon from \"@mui/icons-material/FormatShapes\";\n\nimport EditView from \"./EditView.js\";\nimport EditModel from \"./EditModel.js\";\nimport Observer from \"react-event-observer\";\n\nclass Edit extends React.PureComponent {\n  onWindowHide = () => {\n    this.localObserver.publish(\"resetView\");\n    this.editModel.reset();\n  };\n\n  constructor(props) {\n    super(props);\n    this.localObserver = Observer();\n    this.editModel = new EditModel({\n      map: props.map,\n      app: props.app,\n      observer: this.localObserver,\n      options: props.options,\n    });\n  }\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Edit\"\n        custom={{\n          icon: <FormatShapesIcon />,\n          title: \"Redigera\",\n          description: \"Redigera objekt i kartan (WFS)\",\n          height: 500,\n          width: 500,\n          top: undefined,\n          left: undefined,\n          onWindowHide: this.onWindowHide,\n        }}\n      >\n        <EditView\n          app={this.props.app}\n          model={this.editModel}\n          observer={this.localObserver}\n        />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Edit;\n","import { WFS } from \"ol/format\";\nimport { Style, Stroke, Fill, Circle, RegularShape } from \"ol/style\";\nimport { MultiPoint, Polygon } from \"ol/geom\";\nimport Vector from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { all as strategyAll } from \"ol/loadingstrategy\";\nimport { Select, Modify, Draw, Translate } from \"ol/interaction\";\nimport { never } from \"ol/events/condition\";\nimport X2JS from \"x2js\";\nimport { hfetch } from \"utils/FetchWrapper\";\n\nclass EditModel {\n  constructor(settings) {\n    this.map = settings.map;\n    this.app = settings.app;\n    this.observer = settings.observer;\n    this.options = settings.options;\n\n    this.activeServices = this.options.activeServices;\n    this.sources = this.options.sources;\n\n    this.vectorSource = undefined;\n    this.layer = undefined;\n    this.select = undefined;\n    this.modify = undefined;\n    this.key = undefined;\n    this.editFeature = undefined;\n    this.editFeatureBackup = undefined;\n    this.editSource = undefined;\n    this.removeFeature = undefined;\n    this.shell = undefined;\n    this.instruction = \"\";\n    this.filty = false;\n    this.removalToolMode = \"off\";\n\n    // Normalize the sources that come from options.\n    this.options.sources = this.options.sources.map((s) => {\n      // Namespace URI is required for insert. QGIS Server tends to accept this value.\n      if (s.uri.trim().length === 0) {\n        s.uri = \"http://www.opengis.net/wfs\";\n      }\n\n      // Get rid of the SERVICE=WFS attribute if existing: we will add it on the following requests\n      // while QGIS Server's WFS endpoint requires the SERVICE parameter to be preset. We'd\n      // end up with duplicate parameters, so the safest way around is to remove it, in a controlled\n      // manner, without disturbing the URL.\n      const url = new URL(s.url);\n      url.searchParams.delete(\"service\");\n      s.url = url.href;\n\n      return s;\n    });\n  }\n\n  write(features) {\n    var format = new WFS(),\n      lr = this.editSource.layers[0].split(\":\"),\n      fp = lr.length === 2 ? lr[0] : \"\",\n      ft = lr.length === 2 ? lr[1] : lr[0],\n      options = {\n        featureNS: this.editSource.uri,\n        featurePrefix: fp,\n        featureType: ft,\n        hasZ: false,\n        version: \"1.1.0\", // or \"1.0.0\"\n        srsName: this.editSource.projection,\n      };\n\n    return format.writeTransaction(\n      features.inserts,\n      features.updates,\n      features.deletes,\n      options\n    );\n  }\n\n  refreshLayer(layerName) {\n    var source,\n      foundLayer = this.map\n        .getLayers()\n        .getArray()\n        .find((layer) => {\n          var match = false;\n          if (layer.getSource().getParams) {\n            let params = layer.getSource().getParams();\n            if (typeof params === \"object\") {\n              // FIXME: Can be a bug here: we can't expect our edited layer to always be of index 0 if a LayerGroup (which gives Array so we must handle that as well)\n              let paramName = Array.isArray(params.LAYERS)\n                ? params.LAYERS[0].split(\":\")\n                : params.LAYERS.split(\":\");\n              let layerSplit = layerName.split(\":\");\n              if (paramName.length === 2 && layerSplit.length === 2) {\n                match = layerName === params.LAYERS;\n              }\n              if (paramName.length === 1) {\n                match = layerSplit[1] === params.LAYERS;\n              }\n            }\n          }\n          return match;\n        });\n\n    if (foundLayer) {\n      source = foundLayer.getSource();\n      source.changed();\n      source.updateParams({ time: Date.now() });\n      this.map.updateSize();\n    }\n  }\n\n  parseWFSTresponse(response) {\n    var str =\n      typeof response !== \"string\"\n        ? new XMLSerializer().serializeToString(response)\n        : response;\n    return new X2JS().xml2js(str);\n  }\n\n  transact(features, done) {\n    var node = this.write(features),\n      serializer = new XMLSerializer(),\n      src = this.editSource,\n      payload = node ? serializer.serializeToString(node) : undefined;\n\n    if (payload) {\n      hfetch(src.url, {\n        method: \"POST\",\n        body: payload,\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"text/xml\",\n        },\n      })\n        .then((response) => {\n          response.text().then((wfsResponseText) => {\n            const resXml = this.parseWFSTresponse(wfsResponseText);\n            if (resXml.ExceptionReport || !resXml.TransactionResponse) {\n              // do not delete the data so the user can submit it again\n              done(resXml);\n            } else {\n              this.refreshLayer(src.layers[0]);\n              this.vectorSource\n                .getFeatures()\n                .filter((f) => f.modification !== undefined)\n                .forEach((f) => (f.modification = undefined));\n              done(resXml);\n            }\n          });\n        })\n        .catch((response) => {\n          response.text().then((errorMessage) => {\n            done(errorMessage);\n          });\n        });\n    }\n  }\n\n  save(done) {\n    const find = (mode) =>\n      this.vectorSource\n        .getFeatures()\n        .filter((feature) => feature.modification === mode);\n\n    const features = {\n      updates: find(\"updated\").map((feature) => {\n        feature.unset(\"boundedBy\");\n        return feature;\n      }),\n      inserts: find(\"added\"),\n      deletes: find(\"removed\"),\n    };\n\n    if (\n      features.updates.length === 0 &&\n      features.inserts.length === 0 &&\n      features.deletes.length === 0\n    ) {\n      return done();\n    }\n\n    this.transact(features, done);\n  }\n\n  getSelectStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 255, 255, 1)\",\n          width: 3,\n        }),\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 255, 255, 1)\",\n            width: 2,\n          }),\n          radius: 3,\n        }),\n      }),\n      new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.2)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 1)\",\n            width: 2,\n          }),\n          points: 4,\n          radius: 8,\n          angle: Math.PI / 4,\n        }),\n        geometry: (feature) => {\n          var coordinates =\n            feature.getGeometry() instanceof Polygon\n              ? feature.getGeometry().getCoordinates()[0]\n              : feature.getGeometry().getCoordinates();\n          return new MultiPoint(coordinates);\n        },\n      }),\n    ];\n  }\n\n  getVectorStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 1)\",\n          width: 3,\n        }),\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 1)\",\n            width: 3,\n          }),\n          radius: 4,\n        }),\n      }),\n    ];\n  }\n\n  getHiddenStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0)\",\n          width: 0,\n        }),\n        fill: new Fill({\n          color: \"rgba(1, 2, 3, 0)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 0)\",\n            width: 0,\n          }),\n          radius: 0,\n        }),\n      }),\n    ];\n  }\n\n  getSketchStyle() {\n    return [\n      new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.5)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          width: 4,\n        }),\n        image: new Circle({\n          radius: 6,\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(255, 255, 255, 0.5)\",\n            width: 2,\n          }),\n        }),\n      }),\n    ];\n  }\n\n  filterByDefaultValue(features) {\n    return features.filter((feature) => {\n      return this.editSource.editableFields.some((field) => {\n        var value = feature.getProperties()[field.name];\n        if (field.hidden && value === field.defaultValue) {\n          return true;\n        }\n        return false;\n      });\n    });\n  }\n\n  loadDataSuccess = (data) => {\n    var format = new WFS();\n    var features;\n    try {\n      features = format.readFeatures(data);\n    } catch (e) {\n      alert(\"Fel: data kan inte läsas in. Kontrollera koordinatsystem.\");\n    }\n\n    // Make sure we have a name for geometry column. If there are features already,\n    // take a look at the first one and get geometry field's name from that first feature.\n    // If there are no features however, default to 'geom'. If we don't then OL will\n    // fallback to its own default geometry field name, which happens to be 'geometry' and not 'geom.\n    this.geometryName =\n      features.length > 0 ? features[0].getGeometryName() : \"geom\";\n\n    if (this.editSource.editableFields.some((field) => field.hidden)) {\n      features = this.filterByDefaultValue(features);\n    }\n\n    this.vectorSource.addFeatures(features);\n    this.vectorSource.getFeatures().forEach((feature) => {\n      feature.on(\"propertychange\", (e) => {\n        if (feature.modification === \"removed\") {\n          return;\n        }\n        if (feature.modification === \"added\") {\n          return;\n        }\n        feature.modification = \"updated\";\n      });\n      feature.on(\"change\", (e) => {\n        if (feature.modification === \"removed\") {\n          return;\n        }\n        if (feature.modification === \"added\") {\n          return;\n        }\n        feature.modification = \"updated\";\n      });\n    });\n  };\n\n  loadData(source, extent, done) {\n    // Prepare the URL for retrieving WFS data. We will want to set\n    // some search params later on, but we want to avoid any duplicates.\n    // The values we will set below should override any existing, if\n    // same key already exists in URL.\n    // To ensure it will happen, we read the possible current params…\n    const url = new URL(source.url);\n\n    // …and make sure that the keys are in UPPER CASE.\n    const existingSearchParams = {};\n    for (const [k, v] of url.searchParams.entries()) {\n      existingSearchParams[k.toUpperCase()] = v;\n    }\n\n    // Now we merge the possible existing params with the rest, defined\n    // below. We can be confident that we won't have duplicates and that\n    // our values \"win\", as they are defined last.\n    const mergedSearchParams = {\n      ...existingSearchParams,\n      SERVICE: \"WFS\",\n      VERSION: \"1.1.0\",\n      REQUEST: \"GetFeature\",\n      TYPENAME: source.layers[0],\n      SRSNAME: source.projection,\n    };\n\n    // Create a new URLSearchParams object from the merged object…\n    const searchParams = new URLSearchParams(mergedSearchParams);\n    // …and update our URL's search string with the new value\n    url.search = searchParams.toString();\n\n    // Send a String as HFetch doesn't currently accept true URL objects\n    hfetch(url.toString())\n      .then((response) => {\n        if (response.status !== 200) {\n          return done(\"data-load-error\");\n        }\n        response.text().then((data) => {\n          if (data.includes(\"ows:ExceptionReport\")) {\n            return done(\"data-load-error\");\n          }\n          this.loadDataSuccess(data);\n          return done(\"data-load-success\");\n        });\n      })\n      .catch((error) => {\n        console.warn(`Error loading vectorsource... ${error}`);\n        return done(\"data-load-error\");\n      });\n  }\n\n  editAttributes(feature) {\n    this.editFeature = feature;\n    this.observer.publish(\"editFeature\", feature);\n  }\n\n  featureSelected(event) {\n    if (event.selected.length === 0) {\n      this.editAttributes(null, null);\n    }\n\n    event.selected.forEach((feature) => {\n      if (!feature.getId() && feature.getProperties().user) {\n        this.select.getFeatures().remove(feature);\n      }\n      event.mapBrowserEvent.filty = true;\n      this.editAttributes(feature);\n    });\n  }\n\n  refreshEditingLayer() {\n    var mapLayers = this.map\n      .getLayers()\n      .getArray()\n      .filter(\n        (layer) => layer.getProperties().caption === this.editSource.caption\n      );\n\n    mapLayers.forEach((mapLayer) => {\n      if (mapLayer.getSource) {\n        let s = mapLayer.getSource();\n        if (s.clear) {\n          s.clear();\n        }\n        if (s.getParams) {\n          var params = s.getParams();\n          params.t = new Date().getMilliseconds();\n          s.updateParams(params);\n        }\n        if (s.changed) {\n          s.changed();\n        }\n      }\n    });\n  }\n\n  setLayer(serviceId, done) {\n    this.source = this.sources.find((source) => source.id === serviceId);\n    this.filty = true;\n    this.vectorSource = new VectorSource({\n      loader: (extent) => this.loadData(this.source, extent, done),\n      strategy: strategyAll,\n      projection: this.source.projection,\n    });\n\n    this.layer = new Vector({\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginEdit\",\n      caption: \"Edit layer\",\n      source: this.vectorSource,\n      style: this.getVectorStyle(),\n    });\n\n    if (this.layer) {\n      this.map.removeLayer(this.layer);\n    }\n\n    this.map.addLayer(this.layer);\n    this.editSource = this.source;\n    this.editFeature = null;\n    this.observer.publish(\"editSource\", this.source);\n    this.observer.publish(\"editFeature\", null);\n    this.observer.publish(\"layerChanged\", this.layer);\n  }\n\n  activateModify() {\n    this.select = new Select({\n      style: this.getSelectStyle(),\n      toggleCondition: never,\n      layers: [this.layer],\n    });\n\n    this.select.on(\"select\", (event) => {\n      this.featureSelected(event, this.source);\n    });\n\n    this.modify = new Modify({\n      features: this.select.getFeatures(),\n    });\n    this.map.addInteraction(this.select);\n    this.map.addInteraction(this.modify);\n  }\n\n  activateAdd(geometryType) {\n    this.draw = new Draw({\n      source: this.vectorSource,\n      style: this.getSketchStyle(),\n      type: geometryType,\n      stopClick: true,\n      geometryName: this.geometryName,\n    });\n    this.draw.on(\"drawend\", (event) => {\n      event.feature.modification = \"added\";\n      this.editAttributes(event.feature);\n      // OpenLayers seems to have a problem stopping the clicks if\n      // the draw interaction is removed too early. This fix is not pretty,\n      // but it gets the job done. It seems to be enough to remove the draw\n      // interaction after one cpu-cycle.\n      // If this is not added, the user will get a zoom-event when closing\n      // a polygon drawing.\n      setTimeout(() => {\n        this.deactivateInteraction();\n      }, 1);\n    });\n    this.map.addInteraction(this.draw);\n    this.map.clickLock.add(\"edit\");\n  }\n\n  activateRemove() {\n    this.remove = true;\n    this.map.on(\"singleclick\", this.removeSelected);\n  }\n\n  activateMove() {\n    this.move = new Translate({\n      layers: [this.layer],\n    });\n    this.map.addInteraction(this.move);\n  }\n\n  activateInteraction(type, geometryType) {\n    if (type === \"add\") {\n      this.activateAdd(geometryType);\n    }\n    if (type === \"move\") {\n      this.activateMove();\n    }\n    if (type === \"modify\") {\n      this.activateModify();\n    }\n    if (type === \"remove\") {\n      this.map.clickLock.add(\"edit\");\n      this.activateRemove();\n    }\n\n    // Add snap after all interactions have been added\n    this.map.snapHelper.add(\"measure\");\n  }\n\n  removeSelected = (e) => {\n    this.map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      if (this.vectorSource.getFeatures().some((f) => f === feature)) {\n        if (feature.modification === \"added\") {\n          feature.modification = undefined;\n        } else {\n          feature.modification = \"removed\";\n        }\n        feature.setStyle(this.getHiddenStyle());\n      }\n    });\n  };\n\n  deactivateInteraction() {\n    // First remove the snap interaction\n    this.map.snapHelper.delete(\"measure\");\n\n    // Next, remove correct map interaction\n    if (this.select) {\n      this.map.removeInteraction(this.select);\n    }\n    if (this.modify) {\n      this.map.removeInteraction(this.modify);\n    }\n    if (this.draw) {\n      this.map.removeInteraction(this.draw);\n    }\n    if (this.move) {\n      this.map.removeInteraction(this.move);\n    }\n    if (this.remove) {\n      this.remove = false;\n      this.map.clickLock.delete(\"edit\");\n      this.map.un(\"singleclick\", this.removeSelected);\n    }\n  }\n\n  reset() {\n    this.editSource = undefined;\n    this.editFeature = undefined;\n    this.removeFeature = undefined;\n    this.removalToolMode = \"off\";\n    this.filty = false;\n    this.map.clickLock.delete(\"edit\");\n\n    if (this.layer) {\n      this.map.removeLayer(this.layer);\n      this.layer = undefined;\n    }\n    this.deactivateInteraction();\n  }\n\n  resetEditFeature = () => {\n    this.editFeatureBackup = this.editFeature;\n    this.editFeature = undefined;\n    this.observer.publish(\"editFeature\", this.editFeature);\n  };\n\n  deactivate() {\n    this.reset();\n    this.observer.publish(\"editFeature\", this.editFeature);\n    this.observer.publish(\"editSource\", this.editSource);\n    this.observer.publish(\"deactivate\");\n  }\n\n  getSources() {\n    return this.options.sources;\n  }\n}\n\nexport default EditModel;\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","state","open","this","props","abstract","icon","onClick","title","avatar","subheader","React","defaultProps","BaseWindowPlugin","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","windowVisible","onWindowOpen","setState","custom","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","description","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","prevProps","target","includes","render","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","pluginIsWidget","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","renderWindow","Edit","localObserver","editModel","reset","Observer","EditModel","observer","top","left","model","settings","loadDataSuccess","data","features","format","WFS","readFeatures","alert","geometryName","length","getGeometryName","editSource","editableFields","some","field","hidden","filterByDefaultValue","vectorSource","addFeatures","getFeatures","forEach","feature","on","modification","removeSelected","forEachFeatureAtPixel","pixel","f","setStyle","getHiddenStyle","resetEditFeature","editFeatureBackup","editFeature","activeServices","sources","layer","select","modify","key","removeFeature","shell","instruction","filty","removalToolMode","s","uri","trim","url","URL","searchParams","delete","href","lr","layers","split","fp","ft","featureNS","featurePrefix","featureType","hasZ","version","srsName","projection","writeTransaction","inserts","updates","deletes","layerName","source","foundLayer","getLayers","getArray","match","getSource","getParams","params","paramName","Array","isArray","LAYERS","layerSplit","changed","updateParams","time","Date","now","updateSize","response","str","XMLSerializer","serializeToString","X2JS","xml2js","done","node","write","serializer","src","payload","hfetch","method","body","credentials","headers","then","wfsResponseText","resXml","parseWFSTresponse","ExceptionReport","TransactionResponse","refreshLayer","filter","catch","errorMessage","unset","transact","Style","stroke","Stroke","fill","Fill","image","Circle","radius","RegularShape","points","angle","Math","PI","geometry","coordinates","getGeometry","Polygon","getCoordinates","MultiPoint","value","getProperties","name","defaultValue","extent","existingSearchParams","entries","k","v","toUpperCase","mergedSearchParams","SERVICE","VERSION","REQUEST","TYPENAME","SRSNAME","URLSearchParams","search","toString","status","error","console","warn","event","editAttributes","getId","user","remove","mapBrowserEvent","caption","mapLayer","clear","getMilliseconds","serviceId","VectorSource","loader","loadData","strategy","strategyAll","Vector","layerType","zIndex","style","getVectorStyle","removeLayer","addLayer","Select","getSelectStyle","toggleCondition","never","featureSelected","Modify","addInteraction","geometryType","draw","Draw","getSketchStyle","stopClick","setTimeout","deactivateInteraction","clickLock","add","move","Translate","activateAdd","activateMove","activateModify","activateRemove","snapHelper","removeInteraction","un"],"sourceRoot":""}