{"version":3,"file":"static/js/4777.e6f3f7bf.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/documentWindow/TextArea.js","plugins/DocumentHandler/utils/ContentComponentFactory.js"],"sourcesContent":["import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\n\nconst GridContainer = styled(Grid)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst GridContainerContent = styled(Grid)(({ theme }) => ({\n  //Need to manually change color when switching between dark/light-mode\n  backgroundColor:\n    theme.palette.mode === \"dark\"\n      ? theme.palette.grey[700]\n      : theme.palette.grey[200],\n}));\n\nconst GridTypographyContainer = styled(Grid)(({ theme }) => ({\n  padding: theme.spacing(1),\n}));\n\nconst StyledDivider = styled(Divider)(({ theme }) => ({\n  //Need to manually change color when switching between dark/light-mode\n  backgroundColor:\n    theme.palette.mode === \"dark\"\n      ? theme.palette.grey[200]\n      : theme.palette.grey[400],\n  height: \"2px\",\n}));\n\nclass TextArea extends React.PureComponent {\n  render() {\n    const { backgroundColor, dividerColor, textAreaContentArray } = this.props;\n\n    return (\n      <GridContainer id=\"text-area-content\" justifyContent=\"center\" container>\n        <GridContainerContent\n          xs={12}\n          style={{ backgroundColor: backgroundColor }}\n          item\n        >\n          <StyledDivider sx={{ backgroundColor: dividerColor }} />\n          <Grid justifyContent=\"center\" container>\n            <GridTypographyContainer component=\"blockquote\" xs={12} item>\n              {textAreaContentArray}\n            </GridTypographyContainer>\n          </Grid>\n          <StyledDivider sx={{ backgroundColor: dividerColor }} />\n        </GridContainerContent>\n      </GridContainer>\n    );\n  }\n}\n\nexport default TextArea;\n","import React from \"react\";\nimport MapIcon from \"@mui/icons-material/Map\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport Box from \"@mui/material/Box\";\nimport TextArea from \"../documentWindow/TextArea\";\nimport { styled } from \"@mui/material/styles\";\nimport { useTheme } from \"@mui/material\";\n\nimport {\n  Button,\n  Typography,\n  CardMedia,\n  List,\n  ListItem,\n  Grid,\n  Tooltip,\n} from \"@mui/material\";\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\n\n//Had to make some magic to be able to handle list in all different sizes.\n//Common problem to get second row indented in a good way and even more difficult\n//when you can change the font-size in theme.\nconst getIndentationValue = (fontSize, multiplier, negative) => {\n  let value = multiplier * fontSize.substring(0, fontSize.length - 3);\n  return negative ? `${value * -1}rem` : `${value}rem`;\n};\n\nconst renderChild = (child) => {\n  if (child.nodeType === TEXT_NODE) {\n    return child.data;\n  }\n\n  if (child.nodeType === ELEMENT_NODE) {\n    // Don't assume that callback exits\n    if (typeof child.callback === \"function\") {\n      return child.callback(child);\n    } else {\n      // If there's no callback, warn and render just\n      // the inner text portion of Element\n      console.warn(\n        \"Unsupported DOMElement encountered. Rendering only innerText\",\n        child\n      );\n      return child.innerText;\n    }\n  }\n};\n\nconst getFormattedComponentFromTag = (tag) => {\n  const childNodes = [...tag.childNodes];\n  return childNodes.map((child, index) => {\n    return <React.Fragment key={index}>{renderChild(child)}</React.Fragment>;\n  });\n};\n\nexport const Paragraph = ({ pTag }) => {\n  return (\n    <Typography variant=\"body1\">\n      {getFormattedComponentFromTag(pTag)}\n    </Typography>\n  );\n};\n\nconst ListUlList = styled(List)(({ theme }) => ({\n  listStyle: \"initial\",\n  listStylePosition: \"inside\",\n  overflowWrap: \"break-word\",\n  wordBreak: \"break-word\",\n  marginBottom: theme.spacing(1),\n  padding: theme.spacing(0),\n  paddingLeft: getIndentationValue(theme.typography.body1.fontSize, 1.375),\n  textIndent: getIndentationValue(theme.typography.body1.fontSize, 1.375, true),\n}));\n\nconst ListItemOlListItem = styled(ListItem)(({ theme }) => ({\n  padding: theme.spacing(0),\n}));\n\nconst TypographyOlListItem = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(0),\n}));\n\nconst ListOlList = styled(List)(({ theme }) => ({\n  padding: theme.spacing(0),\n  marginBottom: theme.spacing(1),\n}));\n\nconst TypographyHeading = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst TypographyImageText = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst BoxImageInformationWrapper = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  maxWidth: \"100%\",\n}));\n\nexport const ULComponent = ({ ulComponent }) => {\n  let children = [...ulComponent.children];\n  return (\n    <ListUlList component=\"ul\">\n      {children.map((listItem, index) => {\n        return (\n          <Typography key={index} component=\"li\" variant=\"body1\">\n            {getFormattedComponentFromTag(listItem)}{\" \"}\n          </Typography>\n        );\n      })}\n    </ListUlList>\n  );\n};\n\nexport const OLComponent = ({ olComponent }) => {\n  let children = [...olComponent.children];\n  return (\n    <ListOlList component=\"ol\">\n      {children.map((listItem, index) => {\n        return (\n          <ListItemOlListItem disableGutters key={index}>\n            <Grid wrap=\"nowrap\" container>\n              <Grid\n                item\n                sx={{\n                  marginRight: (theme) =>\n                    getIndentationValue(\n                      theme.typography.body1.fontSize,\n                      index < 9 ? 1 : 0.5\n                    ),\n                  padding: 0,\n                  marginBottom: index < 9 ? 1 : \"inherit\",\n                }}\n              >\n                <Typography variant=\"body1\">{`${index + 1}.`}</Typography>\n              </Grid>\n              <Grid item>\n                <TypographyOlListItem variant=\"body1\">\n                  {getFormattedComponentFromTag(listItem)}\n                </TypographyOlListItem>\n              </Grid>\n            </Grid>\n          </ListItemOlListItem>\n        );\n      })}\n    </ListOlList>\n  );\n};\n\nexport const Heading = ({ headingTag }) => {\n  return (\n    <TypographyHeading variant={headingTag.tagName.toLowerCase()}>\n      {getFormattedComponentFromTag(headingTag)}\n    </TypographyHeading>\n  );\n};\n\nconst getTextArea = (tag, defaultColors) => {\n  const children = [...tag.childNodes];\n  let textAreaContentArray = children.map((element, index) => {\n    return <React.Fragment key={index}>{renderChild(element)}</React.Fragment>;\n  });\n\n  const backgroundColor =\n    tag.attributes.getNamedItem(\"data-background-color\")?.value ||\n    defaultColors?.textAreaBackgroundColor;\n\n  const dividerColor =\n    tag.attributes.getNamedItem(\"data-divider-color\")?.value ||\n    defaultColors?.textAreaDividerColor;\n\n  return (\n    <TextArea\n      backgroundColor={backgroundColor}\n      dividerColor={dividerColor}\n      textAreaContentArray={textAreaContentArray}\n    />\n  );\n};\n\nexport const BlockQuote = ({ blockQuoteTag, defaultColors }) => {\n  // Grab the theme to determine current light/dark mode\n  const theme = useTheme();\n  if (blockQuoteTag.attributes.getNamedItem(\"data-text-section\")) {\n    return getTextArea(\n      blockQuoteTag,\n      theme.palette.mode === \"light\" && defaultColors // Only supply defaultColors if we're in light mode\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const Figure = ({ figureTag }) => {\n  const children = [...figureTag.children];\n  return children.map((element, index) => {\n    return (\n      <React.Fragment key={index}>{element.callback(element)}</React.Fragment>\n    );\n  });\n};\n\n/**\n * The render function for the img-tag.\n * @param {string} imgTag The img-tag.\n *\n * @memberof Contents\n */\nexport const Img = ({ imgTag, localObserver, componentId, baseUrl }) => {\n  const tagIsPresent = (imgTag, attribute) => {\n    return imgTag.attributes.getNamedItem(attribute) == null ? false : true;\n  };\n\n  const getImageStyle = (image) => {\n    if (image.height && image.width) {\n      return {\n        objectFit: \"contain\",\n        objectPosition: \"left\",\n        ...(image.popup && { marginBottom: 1, cursor: \"pointer\" }),\n      };\n    } else {\n      return {\n        objectFit: \"contain\",\n        objectPosition: \"left\",\n        marginTop: 1,\n        width: \"100%\",\n        ...(image.popup && { marginBottom: 1, cursor: \"pointer\" }),\n      };\n    }\n  };\n\n  const getMediaPositionStyle = (position) => {\n    switch (position) {\n      case \"right\":\n        return {\n          alignItems: \"flex-end\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        };\n      case \"floatRight\":\n        return {\n          float: \"right\",\n          marginLeft: 1,\n        };\n      case \"left\":\n        return {\n          alignItems: \"flex-start\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        };\n      case \"floatLeft\":\n        return {\n          float: \"left\",\n          marginRight: 1,\n        };\n      case \"center\":\n        return {\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        };\n      default:\n        return {};\n    }\n  };\n\n  const getImageDescription = (image) => {\n    return (\n      <BoxImageInformationWrapper sx={{ width: image.width }}>\n        {image.caption && (\n          <Typography id={`image_${image.captionId}`} variant=\"subtitle2\">\n            {image.caption}\n          </Typography>\n        )}\n        {image.source && (\n          <TypographyImageText\n            id={`image_${image.sourceId}`}\n            variant=\"subtitle2\"\n          >\n            {image.source}\n          </TypographyImageText>\n        )}\n      </BoxImageInformationWrapper>\n    );\n  };\n\n  const image = {\n    caption: imgTag.attributes.getNamedItem(\"data-caption\")?.value,\n    popup: tagIsPresent(imgTag, \"data-image-popup\"),\n    source: imgTag.attributes.getNamedItem(\"data-source\")?.value,\n    url: imgTag.attributes.getNamedItem(\"src\")?.value,\n    altValue: imgTag.attributes.getNamedItem(\"alt\")?.value,\n    height: imgTag.attributes.getNamedItem(\"data-image-height\")?.value,\n    width: imgTag.attributes.getNamedItem(\"data-image-width\")?.value,\n    position: imgTag.attributes.getNamedItem(\"data-image-position\")?.value,\n    id: `image_${componentId}`,\n    captionId: `imagecaption_${componentId}`,\n    sourceId: `imagesource_${componentId}`,\n  };\n\n  let onClickCallback = image.popup\n    ? () => {\n        localObserver.publish(\"image-popup\", image);\n      }\n    : null;\n\n  const getDescribedByAttribute = () => {\n    let describedBy = [];\n    if (image.caption) {\n      describedBy.push(`${image.captionId}`);\n    }\n    if (image.source) {\n      describedBy.push(`${image.sourceId}`);\n    }\n    return describedBy.length > 0 ? describedBy.join(\" \") : null;\n  };\n\n  let imgUrl = image.url;\n  if (imgUrl.includes(\"../\")) {\n    imgUrl = image.url.replace(\"../\", baseUrl);\n  }\n\n  return (\n    <Box\n      key={`${image.id}`}\n      data-position={image.position}\n      sx={getMediaPositionStyle(image.position)}\n    >\n      <CardMedia\n        onClick={onClickCallback}\n        alt={image.altValue || \"\"}\n        aria-describedby={getDescribedByAttribute()}\n        component=\"img\"\n        image={imgUrl}\n        sx={{\n          ...getImageStyle(image),\n          ...(image.height &&\n            image.width && {\n              height: image.height,\n              width: image.width,\n            }),\n          \".MuiCardMedia-media\": {\n            width: \"auto\",\n            maxWidth: \"100%\",\n          },\n        }}\n      />\n      {getImageDescription(image)}\n    </Box>\n  );\n};\n\n/**\n * The render function for the video-tag as an img-tag.\n * @param {object} imgTag The video-tag as an img-tag.\n * @returns React.Fragment\n */\nexport const Video = ({ imgTag, componentId, baseUrl }) => {\n  const videoAttributes = {\n    caption: imgTag.dataset.caption,\n    height: imgTag.dataset.imageHeight,\n    width: imgTag.dataset.imageWidth,\n    position: imgTag.dataset.imagePosition,\n    source: imgTag.dataset.source,\n    url: imgTag.src,\n    id: `video_${componentId}`,\n  };\n\n  const getVideoDescription = (videoAttributes) => {\n    return (\n      <Box\n        sx={{\n          width: videoAttributes.width,\n          marginBottom: 1,\n          maxWidth: \"100%\",\n        }}\n      >\n        {videoAttributes.caption && (\n          <Typography\n            id={`video_${videoAttributes.captionId}`}\n            variant=\"subtitle2\"\n          >\n            {videoAttributes.caption}\n          </Typography>\n        )}\n        {videoAttributes.source && (\n          <Typography\n            id={`video_${videoAttributes.sourceId}`}\n            variant=\"subtitle2\"\n            sx={{ marginBottom: 1 }}\n          >\n            {videoAttributes.source}\n          </Typography>\n        )}\n      </Box>\n    );\n  };\n\n  let videoUrl = videoAttributes.url;\n  if (videoUrl.includes(\"../\")) {\n    videoUrl = videoAttributes.url.replace(\"../\", baseUrl);\n  }\n\n  return (\n    <React.Fragment key={videoAttributes.id}>\n      <Box sx={this.getMediaPositionStyle(videoAttributes.position)}>\n        <video\n          height={videoAttributes.height}\n          width={videoAttributes.width}\n          controls={\"controls\"}\n        >\n          <source src={videoUrl} type=\"video/mp4\"></source>\n        </video>\n        {getVideoDescription(videoAttributes)}\n      </Box>\n    </React.Fragment>\n  );\n};\n\n/**\n * The render function for the audio-tag as an img-tag.\n * @param {object} imgTag The audio-tag as an img-tag.\n * @returns React.Fragment\n */\nexport const Audio = ({ imgTag, componentId, baseUrl }) => {\n  const audioAttributes = {\n    caption: imgTag.attributes.getNamedItem(\"data-caption\")?.value,\n    position: imgTag.attributes.getNamedItem(\"data-image-position\")?.value,\n    source: imgTag.attributes.getNamedItem(\"data-source\")?.value,\n    url: imgTag.attributes.getNamedItem(\"src\")?.value,\n    width: imgTag.attributes.getNamedItem(\"data-image-width\")?.value,\n    id: `audio_${componentId}`,\n  };\n\n  const getAudioDescription = (audioAttributes) => {\n    return (\n      <Box\n        sx={{\n          width: audioAttributes.width,\n          marginBottom: 1,\n          maxWidth: \"100%\",\n        }}\n      >\n        {audioAttributes.caption && (\n          <Typography\n            id={`video_${audioAttributes.captionId}`}\n            variant=\"subtitle2\"\n          >\n            {audioAttributes.caption}\n          </Typography>\n        )}\n        {audioAttributes.source && (\n          <Typography\n            id={`video_${audioAttributes.sourceId}`}\n            variant=\"subtitle2\"\n            sx={{ marginBottom: 1 }}\n          >\n            {audioAttributes.source}\n          </Typography>\n        )}\n      </Box>\n    );\n  };\n\n  let audioUrl = audioAttributes.url;\n  if (audioUrl.includes(\"../\")) {\n    audioUrl = audioAttributes.url.replace(\"../\", baseUrl);\n  }\n\n  return (\n    <Box\n      key={audioAttributes.id}\n      sx={this.getMediaPositionStyle(audioAttributes.position)}\n    >\n      <audio controls={\"controls\"}>\n        <source src={imgTag.src} type=\"audio/mpeg\"></source>\n      </audio>\n      {getAudioDescription(audioAttributes)}\n    </Box>\n  );\n};\n\n/**\n * The render function for the source-tag.\n * @param {object} sourceTag The source-tag.\n * @returns React.Fragment\n */\nexport const Source = ({ sourceTag }) => {\n  const children = [...sourceTag.childNodes];\n  const src = sourceTag.src;\n  const type = sourceTag.type;\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <source src={src} type={type}></source>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <source src={src} type={type}></source>\n    </React.Fragment>,\n  ];\n};\n\nexport const Strong = ({ strongTag }) => {\n  const children = [...strongTag.childNodes];\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <strong key={index}>{renderChild(child)}</strong>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <strong>{strongTag.textContent}</strong>\n    </React.Fragment>,\n  ];\n};\n\nexport const Underline = ({ uTag }) => {\n  const children = [...uTag.childNodes];\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <u>{renderChild(child)}</u>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <u>{uTag.textContent}</u>\n    </React.Fragment>,\n  ];\n};\nexport const Italic = ({ emTag }) => {\n  const children = [...emTag.childNodes];\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <em>{renderChild(child)}</em>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <em>{emTag.textContent}</em>\n    </React.Fragment>,\n  ];\n};\n\n/**\n * The render function for the br-tag.\n * @param {string} brTag The br-tag.\n *\n * @memberof htmlToMaterialUiParser\n */\nexport const LineBreak = () => {\n  return <br />;\n};\n\n/**\n * Callback used to render different link-components from a-elements\n * @param {Element} aTag a-element.\n * @returns {<Link>} Returns materialUI component <Link>\n *\n * @memberof Contents\n */\nexport const CustomLink = ({ aTag, localObserver, bottomMargin }) => {\n  const getLinkDataPerType = (attributes) => {\n    const {\n      0: mapLink,\n      1: headerIdentifier,\n      2: documentLink,\n      3: externalLink,\n      4: hoverLink,\n    } = [\n      \"data-maplink\",\n      \"data-header-identifier\",\n      \"data-document\",\n      \"data-link\",\n      \"data-hover\",\n    ].map((attributeKey) => {\n      return attributes.getNamedItem(attributeKey)?.value;\n    });\n\n    return { mapLink, headerIdentifier, documentLink, externalLink, hoverLink };\n  };\n\n  const getHoverLink = (hoverLink, tagText) => {\n    return (\n      <Tooltip title={hoverLink}>\n        <abbr\n          style={{\n            cursor: \"text\",\n            textDecoration: \"underline dotted\",\n          }}\n        >\n          {tagText}\n        </abbr>\n      </Tooltip>\n    );\n  };\n\n  const getExternalLink = (externalLink) => {\n    return (\n      <Button\n        startIcon={\n          <OpenInNewIcon\n            sx={{\n              verticalAlign: \"middle\",\n            }}\n          />\n        }\n        sx={{\n          padding: 0,\n          color: \"info.main\",\n          \".MuiButton-startIcon\": {\n            marginLeft: 0,\n          },\n          ...(bottomMargin && { marginBottom: 1 }),\n        }}\n        target=\"_blank\"\n        component=\"a\"\n        key=\"external-link\"\n        href={externalLink}\n      >\n        <Box component=\"span\">{getFormattedComponentFromTag(aTag)}</Box>\n      </Button>\n    );\n  };\n\n  const getMapLink = (aTag, mapLinkOrg) => {\n    // Attempt to safely URI Decode the supplied string. If\n    // it fails, use it as-is.\n    // The reason we want probably want to decode is that the\n    // link is created using the Anchor plugin, which encodes\n    // the query string properly, see #831 and #838.\n    let mapLink = null;\n    try {\n      mapLink = decodeURIComponent(mapLinkOrg);\n    } catch (error) {\n      mapLink = mapLinkOrg;\n    }\n\n    return (\n      <Button\n        startIcon={\n          <MapIcon\n            sx={{\n              verticalAlign: \"middle\",\n            }}\n          />\n        }\n        sx={{\n          padding: 0,\n          color: \"info.main\",\n          ...(bottomMargin && { marginBottom: 1 }),\n          \".MuiButton-startIcon\": {\n            marginLeft: 0,\n          },\n        }}\n        target=\"_blank\"\n        href={externalLink}\n        key=\"map-link\"\n        component=\"button\"\n        onClick={() => {\n          localObserver.publish(\"document-maplink-clicked\", mapLink);\n        }}\n      >\n        <Box component=\"span\">{getFormattedComponentFromTag(aTag)}</Box>\n      </Button>\n    );\n  };\n\n  const getDocumentLink = (headerIdentifier, documentLink, isPrintMode) => {\n    return (\n      <Button\n        startIcon={\n          <DescriptionIcon\n            sx={{\n              verticalAlign: \"middle\",\n            }}\n          />\n        }\n        sx={{\n          padding: 0,\n          color: \"info.main\",\n          \".MuiButton-startIcon\": {\n            marginLeft: 0,\n          },\n          ...(bottomMargin && { marginBottom: 1 }),\n        }}\n        href=\"#\"\n        key=\"document-link\"\n        component={isPrintMode ? \"span\" : \"button\"}\n        underline=\"hover\"\n        onClick={() => {\n          localObserver.publish(\"document-link-clicked\", {\n            documentName: documentLink,\n            headerIdentifier: headerIdentifier,\n          });\n        }}\n      >\n        <Box component=\"span\">{getFormattedComponentFromTag(aTag)}</Box>\n      </Button>\n    );\n  };\n\n  const { mapLink, headerIdentifier, documentLink, externalLink, hoverLink } =\n    getLinkDataPerType(aTag.attributes);\n\n  if (documentLink) {\n    const isPrintMode = Boolean(aTag.attributes.printMode);\n    return getDocumentLink(headerIdentifier, documentLink, isPrintMode);\n  }\n\n  if (mapLink) {\n    return getMapLink(aTag, mapLink, localObserver);\n  }\n\n  if (externalLink) {\n    return getExternalLink(externalLink);\n  }\n\n  if (hoverLink) {\n    const tagText = aTag.text;\n    return getHoverLink(hoverLink, tagText);\n  }\n\n  // If we got this far it seems that _we've been trying to parse an A tag that didn't\n  // have any of the data-* attributes_. One possible reason why this has happened is that\n  // some mobile browsers (iOS on Safari…) auto-creates A tags from number sequencies, as\n  // it thinks that the number is a phone number. We don't want this to happen, but we\n  // don't want to lose the number sequence either. So we must parse this auto-inserted\n  // A tag. See also #1098 for details.\n  if (aTag.href?.startsWith(\"tel:\")) {\n    return getFormattedComponentFromTag(aTag);\n  }\n\n  return null;\n};\n"],"names":["GridContainer","styled","Grid","marginBottom","theme","spacing","GridContainerContent","backgroundColor","palette","mode","grey","GridTypographyContainer","padding","StyledDivider","Divider","height","TextArea","this","props","dividerColor","textAreaContentArray","id","justifyContent","container","xs","style","item","sx","component","React","getIndentationValue","fontSize","multiplier","negative","value","substring","length","renderChild","child","nodeType","data","callback","console","warn","innerText","getFormattedComponentFromTag","tag","childNodes","map","index","Paragraph","pTag","variant","ListUlList","List","listStyle","listStylePosition","overflowWrap","wordBreak","paddingLeft","typography","body1","textIndent","ListItemOlListItem","ListItem","TypographyOlListItem","Typography","ListOlList","TypographyHeading","TypographyImageText","BoxImageInformationWrapper","Box","maxWidth","ULComponent","ulComponent","children","listItem","OLComponent","olComponent","disableGutters","wrap","marginRight","Heading","headingTag","tagName","toLowerCase","BlockQuote","blockQuoteTag","defaultColors","useTheme","attributes","getNamedItem","element","textAreaBackgroundColor","textAreaDividerColor","getTextArea","Figure","figureTag","Img","imgTag","localObserver","componentId","baseUrl","image","caption","popup","attribute","tagIsPresent","source","url","altValue","width","position","captionId","sourceId","onClickCallback","publish","imgUrl","includes","replace","alignItems","display","flexDirection","float","marginLeft","getMediaPositionStyle","onClick","alt","describedBy","push","join","getDescribedByAttribute","objectFit","objectPosition","cursor","marginTop","getImageStyle","getImageDescription","Video","videoAttributes","dataset","imageHeight","imageWidth","imagePosition","src","videoUrl","controls","type","getVideoDescription","Audio","audioAttributes","audioUrl","getAudioDescription","Source","sourceTag","array","forEach","Strong","strongTag","textContent","Underline","uTag","Italic","emTag","LineBreak","CustomLink","aTag","bottomMargin","attributeKey","mapLink","headerIdentifier","documentLink","externalLink","hoverLink","getLinkDataPerType","isPrintMode","startIcon","verticalAlign","color","href","underline","documentName","getDocumentLink","Boolean","printMode","mapLinkOrg","decodeURIComponent","error","target","getMapLink","getExternalLink","tagText","title","textDecoration","getHoverLink","text","startsWith"],"sourceRoot":""}