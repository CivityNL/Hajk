{"version":3,"file":"static/js/2197.6fad193d.chunk.js","mappings":"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","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Location/CustomControlButtonView.js","plugins/Location/Location.js","plugins/Location/LocationModel.js","plugins/Location/LocationView.js","plugins/Location/constants/index.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Drawer buttons and Widget buttons should render a Drawer button. */}\n        {(target === \"toolbar\" || this.pluginIsWidget(target)) &&\n          this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden mdUp={this.pluginIsWidget(this.props.options.target)}>\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      <PluginControlButton\n        icon={this.props.custom.icon}\n        onClick={this.handleButtonClick}\n        title={this.title}\n        abstract={this.description}\n      />,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React, { useEffect, useCallback } from \"react\";\nimport { useSnackbar } from \"notistack\";\n\nimport { Paper, Tooltip } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport LocationSearchingIcon from \"@mui/icons-material/LocationSearching\";\nimport LocationDisabledIcon from \"@mui/icons-material/LocationDisabled\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\n\nimport {\n  LOCATION_DENIED_SNACK_MESSAGE,\n  LOCATION_DENIED_SNACK_OPTIONS,\n} from \"./constants\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst StyledToggleButton = styled(ToggleButton)(() => ({\n  minWidth: \"unset\",\n  // ToggleButton have a different color when not selected,\n  // but we want to unset it so it looks just like other Buttons.\n  color: \"unset\",\n  paddingLeft: 7,\n  paddingRight: 7,\n  paddingTop: 6,\n  paddingBottom: 6,\n}));\n\nconst CustomControlButtonView = React.memo(\n  ({ onClick, defaultTooltip, model }) => {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [selected, setSelected] = React.useState(false);\n    const [tooltip, setTooltip] = React.useState(defaultTooltip);\n    const [currentIcon, setCurrentIcon] = React.useState(\n      <LocationSearchingIcon />\n    );\n\n    // Handler for the \"geoLocationChange\" event. Makes sure to format the raw input data\n    // and update state with nice looking messages.\n    const handleGeoLocationChange = useCallback((rawData) => {\n      // We must do some formatting (to limit the decimal precision on\n      // some values). Let's prepare an object.\n      const formattedData = {};\n\n      // Loop through the entries of rawData and limit precision to one\n      // decimal point on all numbers.\n      for (let k in rawData) {\n        formattedData[k] = Number.isFinite(rawData[k])\n          ? rawData[k].toFixed(1)\n          : rawData[k];\n      }\n\n      // Prepare an output array that contains end-user text\n      const output = [\n        ...(formattedData.accuracy\n          ? [`Nogranhet: ${formattedData.accuracy} m\\n`]\n          : []),\n        ...(formattedData.altitude && formattedData.altitudeAccuracy\n          ? [\n              `Höjd: ${formattedData.altitude} (+/- ${formattedData.altitudeAccuracy}) m\\n`,\n            ]\n          : []),\n        ...(formattedData.speed\n          ? [`Hastighet: ${formattedData.speed} km/h\\n`]\n          : []),\n        ...(formattedData.heading\n          ? [`Riktning: ${formattedData.heading} rad\\n`]\n          : []),\n      ];\n\n      // Create the actual string that will be rendered inside the Tooltip component.\n      // The 'display: block' part is important to create line breaks inside Tooltip.\n      const str = (\n        <React.Fragment>\n          {output.map((v, i) => {\n            return (\n              <div key={i} style={{ display: \"block\" }}>\n                {v}\n              </div>\n            );\n          })}\n        </React.Fragment>\n      );\n\n      setTooltip(str);\n    }, []);\n\n    // Handler for the \"locationStatus\" event. Makes sure to update the state according\n    // to the current location status.\n    const handleStatusChange = useCallback(\n      (status) => {\n        switch (status) {\n          case \"loading\":\n            setCurrentIcon(<CircularProgress size={24} />);\n            break;\n          case \"on\":\n            setCurrentIcon(<MyLocationIcon />);\n            break;\n          case \"error\":\n            setCurrentIcon(<LocationDisabledIcon />);\n            setTooltip(\"Positionera: position ej tillgänglig\");\n            break;\n          case \"off\":\n          default:\n            setCurrentIcon(<LocationSearchingIcon />);\n            setTooltip(defaultTooltip);\n            break;\n        }\n      },\n      [defaultTooltip]\n    );\n\n    // Handler for the \"locationError\" event. Makes sure to prompt the user with information\n    // regarding the error along with information on how to fix the error.\n    const handleLocationError = useCallback(\n      (error) => {\n        // If error code is 1 (User denied Geolocation), show Snackbar with instructions to enable it again\n        if (error.code === 1) {\n          enqueueSnackbar(\n            LOCATION_DENIED_SNACK_MESSAGE,\n            LOCATION_DENIED_SNACK_OPTIONS\n          );\n        } else {\n          enqueueSnackbar(\n            `Kunde inte fastställa din plats. Felkod: ${error.code}. Detaljer: \"${error.message}\".`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      },\n      [enqueueSnackbar]\n    );\n\n    // This effect makes sure to subscribe to all events that could be sent on the local-observer.\n    useEffect(() => {\n      // We are submitting events on the local-observer when the geoLocation-api emits changes.\n      // We have to catch the local-observer events and update the view accordingly.\n      const changeListener = model.localObserver.subscribe(\n        \"geolocationChange\",\n        handleGeoLocationChange\n      );\n\n      // We are submitting events on the local-observer when the geoLocation is toggled off/on etc.\n      // We have to catch the local-observer events and update the view accordingly.\n      const statusListener = model.localObserver.subscribe(\n        \"locationStatus\",\n        handleStatusChange\n      );\n\n      // We are submitting events on the local-observer if the geoLocation-api encounters some\n      // kind of error (for example if the user has denied use of location in the browser). These\n      // are caught here.\n      const errorListener = model.localObserver.subscribe(\n        \"geolocationError\",\n        handleLocationError\n      );\n\n      // We have to make sure to clean up all listeners on eventual effect trigger.\n      return () => {\n        changeListener.unsubscribe();\n        statusListener.unsubscribe();\n        errorListener.unsubscribe();\n      };\n    }, [\n      model,\n      handleGeoLocationChange,\n      handleStatusChange,\n      handleLocationError,\n    ]);\n\n    return (\n      <Tooltip disableInteractive title={tooltip}>\n        <StyledPaper>\n          <StyledToggleButton\n            aria-label={defaultTooltip}\n            onClick={onClick}\n            value=\"check\"\n            selected={selected}\n            onChange={() => {\n              selected ? model.disable() : model.enable();\n              setSelected(!selected);\n            }}\n          >\n            {currentIcon}\n          </StyledToggleButton>\n        </StyledPaper>\n      </Tooltip>\n    );\n  }\n);\n\nexport default CustomControlButtonView;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Observer from \"react-event-observer\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\n\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\nimport LocationModel from \"./LocationModel\";\nimport LocationView from \"./LocationView\";\nimport CustomControlButtonView from \"./CustomControlButtonView\";\n\nclass Location extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.localObserver = Observer();\n    this.model = new LocationModel({\n      ...this.props,\n      localObserver: this.localObserver,\n    });\n  }\n\n  // This custom renderer (used for Control button) will bypass\n  // the usual stuff that renders in BaseWindowPlugin, while still\n  // being an instance of it.\n  // The reason we do this is that none of the available rendering\n  // modes from BaseWindowPlugin satisfy our needs. We don't want\n  // a Drawer button, neither a Widget nor Control button. Instead\n  // we need a special Toggle Button that can be either on or off,\n  // and that will render next to the \"normal\" control buttons.\n  renderControlButton() {\n    return createPortal(\n      <CustomControlButtonView\n        defaultTooltip={`Positionera: Visa min position i kartan`}\n        model={this.model}\n      />,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Location\"\n        custom={{\n          icon: <MyLocationIcon />,\n          title: \"Positionera\",\n          description: \"Visa min position i kartan\",\n          height: 450,\n          width: 430,\n          top: undefined,\n          left: undefined,\n          model: this.model,\n          // Supply a custom renderer *if* admin wants to render this plugin\n          // as a Control button\n          render:\n            this.props.options.target === \"control\"\n              ? this.renderControlButton\n              : null,\n        }}\n      >\n        <LocationView map={this.props.map} model={this.model} />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Location;\n","import Geolocation from \"ol/Geolocation.js\";\nimport Feature from \"ol/Feature.js\";\nimport Point from \"ol/geom/Point.js\";\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport { Vector as VectorSource } from \"ol/source.js\";\nimport { easeOut } from \"ol/easing\";\nimport { getVectorContext } from \"ol/render\";\nimport { unByKey } from \"ol/Observable\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style.js\";\n\nclass LocationModel {\n  constructor(props) {\n    this.map = props.map;\n    this.localObserver = props.localObserver;\n    this.zoomToLocation = true;\n\n    // Create source and layer and add to map. Later on we'll draw features to this layer.\n    this.source = new VectorSource({ wrapX: false });\n    this.layer = new VectorLayer({\n      source: this.source,\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginLocation\",\n      caption: \"Location layer\",\n    });\n    this.map.addLayer(this.layer);\n\n    // Create two features: one for position (point) and\n    // another one for position accuracy (outer ring)\n    this.accuracyFeature = new Feature();\n    this.positionFeature = new Feature();\n    this.positionFeature.setStyle(\n      new Style({\n        image: new CircleStyle({\n          radius: 6,\n          fill: new Fill({\n            color: \"#3399CC\",\n          }),\n          stroke: new Stroke({\n            color: \"#fff\",\n            width: 2,\n          }),\n        }),\n      })\n    );\n\n    // Init geolocation layer where the point will be drawn to\n    this.geolocation = new Geolocation({\n      trackingOptions: {\n        enableHighAccuracy: true,\n      },\n      projection: this.map.getView().getProjection(),\n    });\n\n    // Set up some event handlers for our Geolocation object\n    this.geolocation.on(\"change\", this.handleGeolocationChange);\n    this.geolocation.on(\"error\", this.handleGeolocationError);\n    this.geolocation.on(\n      \"change:accuracyGeometry\",\n      this.handleGeolocationChangeAccuracy\n    );\n    this.geolocation.on(\n      \"change:position\",\n      this.handleGeolocationChangePosition\n    );\n  }\n\n  handleGeolocationChange = (e) => {\n    this.localObserver.publish(\"geolocationChange\", {\n      accuracy: e.target.getAccuracy(),\n      altitude: e.target.getAltitude(),\n      altitudeAccuracy: e.target.getAltitudeAccuracy(),\n      heading: e.target.getHeading(),\n      speed: e.target.getSpeed(),\n    });\n  };\n\n  handleGeolocationError = (error) => {\n    this.localObserver.publish(\"locationStatus\", \"error\");\n    // Yeah, it's clumsy but we want to send another event\n    // with the error object, so the first event is not enough.\n    this.localObserver.publish(\"geolocationError\", error);\n  };\n\n  handleGeolocationChangeAccuracy = (e) => {\n    this.accuracyFeature.setGeometry(e.target.getAccuracyGeometry());\n  };\n\n  handleGeolocationChangePosition = (e) => {\n    const coordinates = e.target.getPosition();\n    this.positionFeature.setGeometry(\n      coordinates ? new Point(coordinates) : null\n    );\n\n    // If we've got new coordinates, make sure to hide the loading indicator\n    this.localObserver.publish(\"locationStatus\", \"on\");\n\n    if (this.zoomToLocation) {\n      const maxZoom = this.map.getView().getMaxZoom();\n      const minZoom = this.map.getView().getMinZoom();\n      const zoom = Math.ceil((maxZoom - minZoom) * 0.5); // Let's end up in the middle zoom\n      this.map.getView().animate({ duration: 2500, center: coordinates, zoom });\n      this.zoomToLocation = false;\n    }\n  };\n\n  toggleTracking = (active) => {\n    // Inform the View components that we're loading\n    this.localObserver.publish(\"locationStatus\", active ? \"loading\" : \"off\");\n\n    this.geolocation.setTracking(active);\n\n    // If deactivating, cleanup\n    if (active === false) {\n      // Remove features from map if tracking has been switched off\n      this.layer.getSource().clear();\n      // Make sure that we zoom to location next time tracking is activated\n      this.zoomToLocation = true;\n    }\n    // If activating, add two features to map:\n    // one for accuracy (the outer ring) and one for position (inner point)\n    else {\n      this.layer.getSource().addFeature(this.accuracyFeature);\n      this.layer.getSource().addFeature(this.positionFeature);\n\n      // Finally, start flashing the position feature\n      setInterval(() => {\n        this.flash(this.positionFeature);\n      }, 3000);\n    }\n  };\n\n  // Flash handler: sets up the animation and creats a handler for the postrender\n  flash = (feature) => {\n    // Helper: takes care of the actual animation.\n    const animate = (event) => {\n      // Event is the postrender event that happens - surprise - after render,\n      // because we actually tell the map to render (see at the end of this function)\n      const frameState = event.frameState;\n      const elapsed = frameState.time - start;\n      if (elapsed >= duration) {\n        // Remove the listener when time has elapsed\n        unByKey(listenerKey);\n        return;\n      }\n\n      // Grab the context that will hold our animated feature\n      const vectorContext = getVectorContext(event);\n      const elapsedRatio = elapsed / duration;\n\n      // Radius will be 5 at start and 30 at end\n      const radius = easeOut(elapsedRatio) * 25 + 5;\n      const opacity = easeOut(1 - elapsedRatio);\n\n      const style = new Style({\n        image: new CircleStyle({\n          radius: radius,\n          stroke: new Stroke({\n            color: \"rgba(255, 0, 0, \" + opacity + \")\",\n            width: 0.25 + opacity,\n          }),\n        }),\n      });\n\n      vectorContext.setStyle(style);\n      vectorContext.drawGeometry(flashGeom);\n\n      // This ensure that the listener for postrender will be triggered\n      this.map.render();\n    };\n\n    // Setup the animation\n    const duration = 3000;\n    const start = Date.now();\n    // Prepare the feature that will get animated\n    const flashGeom = feature.getGeometry().clone();\n    // Save the listener key so we can unsubscribe when animation is done\n    const listenerKey = this.layer.on(\"postrender\", animate);\n  };\n\n  enable() {\n    this.toggleTracking(true);\n  }\n\n  disable() {\n    this.toggleTracking(false);\n  }\n}\n\nexport default LocationModel;\n","import React from \"react\";\n\nimport { withSnackbar } from \"notistack\";\n\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\nimport {\n  LOCATION_DENIED_SNACK_MESSAGE,\n  LOCATION_DENIED_SNACK_OPTIONS,\n} from \"./constants\";\n\nclass LocationView extends React.PureComponent {\n  state = {\n    loading: false, // indicates if loading is in progress\n    track: false, // enables or disables GPS tracking\n    accuracy: undefined, // this and the following actual GPS info values\n    altitude: undefined,\n    altitudeAccuracy: undefined,\n    heading: undefined,\n    speed: undefined,\n  };\n\n  locationDetails = {\n    accuracy: { id: 0, label: \"Precision (m)\" },\n    altitude: { id: 1, label: \"Höjd (m. ö. h.)\" },\n    altitudeAccuracy: { id: 2, label: \"Höjdprecision (m)\" },\n    heading: { id: 3, label: \"Riktning (rad)\" },\n    speed: { id: 4, label: \"Hastighet (m/s)\" },\n  };\n\n  componentDidMount() {\n    this.map = this.props.map;\n    this.model = this.props.model;\n\n    this.model.localObserver.subscribe(\n      \"geolocationChange\",\n      ({ accuracy, altitude, altitudeAccuracy, heading, speed }) => {\n        this.setState({\n          accuracy,\n          altitude,\n          altitudeAccuracy,\n          heading,\n          speed,\n        });\n      }\n    );\n\n    this.model.localObserver.subscribe(\"locationStatus\", (status) => {\n      switch (status) {\n        case \"loading\":\n          this.setState({ loading: true });\n          break;\n        case \"on\":\n          this.setState({ loading: false });\n          break;\n        case \"error\":\n          this.setState({ loading: false });\n          break;\n        case \"off\":\n        default:\n          this.setState({ loading: false });\n          break;\n      }\n    });\n\n    this.model.localObserver.subscribe(\"geolocationError\", (error) => {\n      // If error code is 1 (User denied Geolocation), show Snackbar with instructions to enable it again\n      if (error.code === 1) {\n        this.props.enqueueSnackbar(\n          LOCATION_DENIED_SNACK_MESSAGE,\n          LOCATION_DENIED_SNACK_OPTIONS\n        );\n      } else {\n        this.props.enqueueSnackbar(\n          `Kunde inte fastställa din plats. Felkod: ${error.code}. Detaljer: \"${error.message}\".`,\n          {\n            variant: \"error\",\n          }\n        );\n      }\n    });\n  }\n\n  toggleTracking = (event) => {\n    const { checked } = event.target;\n    checked ? this.model.enable() : this.model.disable();\n    this.setState({ track: checked });\n    this.setState({ loading: checked });\n  };\n\n  renderLocationDetails() {\n    if (this.state.track === false) {\n      return null;\n    } else {\n      return (\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Egenskap</TableCell>\n                <TableCell align=\"right\">Värde</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(this.locationDetails).map((row) => {\n                let r = this.locationDetails[row];\n                return (\n                  <TableRow key={r.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {r.label}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {this.state[row] ? this.state[row] : \"–\"}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.track}\n                onChange={this.toggleTracking}\n                value=\"track\"\n              />\n            }\n            label=\"Visa min position\"\n          />\n        </FormGroup>\n        {this.state.loading && <LinearProgress />}\n        {this.renderLocationDetails()}\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(LocationView);\n","export const LOCATION_DENIED_SNACK_MESSAGE =\n  \"Du behöver tillåta att applikationen visar din position. För datorer: De flesta webbläsare har en lås-ikon i adressfältet som du kan klicka på för att tillåta Plats/Position.\";\nexport const LOCATION_DENIED_SNACK_OPTIONS = Object.freeze({\n  variant: \"info\",\n  persist: false,\n  anchorOrigin: {\n    vertical: \"top\",\n    horizontal: \"center\",\n  },\n});\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","state","open","this","props","abstract","icon","onClick","title","avatar","subheader","React","defaultProps","BaseWindowPlugin","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","windowVisible","onWindowOpen","setState","custom","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","description","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","prevProps","target","includes","render","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","pluginIsWidget","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","renderWindow","StyledPaper","Paper","StyledToggleButton","ToggleButton","minWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","CustomControlButtonView","defaultTooltip","model","enqueueSnackbar","useSnackbar","setSelected","tooltip","setTooltip","currentIcon","setCurrentIcon","handleGeoLocationChange","useCallback","rawData","formattedData","k","Number","isFinite","toFixed","output","accuracy","altitude","altitudeAccuracy","speed","heading","str","v","i","style","display","handleStatusChange","status","size","handleLocationError","error","code","LOCATION_DENIED_SNACK_MESSAGE","LOCATION_DENIED_SNACK_OPTIONS","message","variant","useEffect","changeListener","localObserver","statusListener","errorListener","unsubscribe","disableInteractive","value","onChange","disable","enable","Location","Observer","LocationModel","top","left","handleGeolocationChange","getAccuracy","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","handleGeolocationError","handleGeolocationChangeAccuracy","accuracyFeature","setGeometry","getAccuracyGeometry","handleGeolocationChangePosition","coordinates","getPosition","positionFeature","Point","zoomToLocation","maxZoom","getView","getMaxZoom","minZoom","getMinZoom","zoom","Math","ceil","animate","duration","center","toggleTracking","active","geolocation","setTracking","layer","getSource","clear","addFeature","setInterval","flash","feature","start","Date","now","flashGeom","getGeometry","clone","listenerKey","on","event","elapsed","frameState","time","unByKey","vectorContext","getVectorContext","elapsedRatio","radius","easeOut","opacity","Style","image","CircleStyle","stroke","Stroke","setStyle","drawGeometry","source","VectorSource","wrapX","VectorLayer","layerType","zIndex","name","caption","addLayer","Feature","fill","Fill","Geolocation","trackingOptions","enableHighAccuracy","projection","getProjection","LocationView","loading","track","locationDetails","label","checked","align","Object","keys","row","r","component","scope","control","renderLocationDetails","withSnackbar","freeze","persist","anchorOrigin","vertical","horizontal"],"sourceRoot":""}