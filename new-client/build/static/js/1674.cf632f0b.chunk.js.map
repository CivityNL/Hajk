{"version":3,"file":"static/js/1674.cf632f0b.chunk.js","mappings":"2TAAaA,EAAuB,SAACC,GACnC,OAAOA,EAAaC,MAAM,KAAKC,KAAI,SAACC,GAClC,OAAOA,EAAOC,MACf,GACF,EAEYC,EAAiB,SAACL,GAE7B,OADsBD,EAAqBC,GACpBM,KAAK,KAAKL,MAAM,IACxC,EAEYM,EAAa,SAACC,GACzB,OAAOA,EAAKC,MAAQD,EAAKC,KAAKC,OAAS,CACxC,EAEYC,EAAsB,SAAtBA,EAAuBC,GAClC,OAAOA,EAASC,QAAO,SAACC,EAAKC,GAC3B,GAAIA,EAAQC,OAAQ,CAClB,IAAIC,GAA8B,UAAQF,GAC1CE,EAA+BL,SAAW,GAC1CE,EAAG,kBAAOA,GAAP,CAAYG,GAChB,CACD,OAAIF,EAAQH,UAAYG,EAAQH,SAASF,OAAS,EAC1C,GAAN,eAAWI,IAAX,OAAmBH,EAAoBI,EAAQH,YAE1CE,CACR,GAAE,GACJ,C,6ICxBKI,EAAoB,SAApBA,EAAqBT,GACzB,OAAOA,EAAKI,QAAO,SAACM,EAAaX,GAI/B,OAHID,EAAAA,EAAAA,YAAWC,KACbW,EAAW,kBAAOA,IAAP,OAAuBD,EAAkBV,EAAKC,SAErD,GAAN,eAAWU,GAAX,CAAwBX,EAAKY,IAC9B,GAAE,GACJ,EAQYC,EAAyB,SAAzBA,EACXZ,GAII,IAHJa,EAGG,uDAHQ,KACXC,EAEG,uDAFK,EACRC,EACG,uDADS,GAERC,EAAqBhB,EAAKI,QAAO,SAACa,EAAOC,GAiC3C,OAhCAA,GAAQ,kBACHA,GACA,CACDL,SAAAA,EACAC,MAAAA,EACAK,YAAa,GACbT,YAAa,GACbU,WAAYL,EACZM,QAASC,EAAAA,eAIAtB,MAAQkB,EAASlB,KAAKC,OAAS,IAC1CiB,EAASR,YAAT,kBACKQ,EAASR,cADd,OAEKD,EAAkBS,EAASlB,QAEhCkB,EAASC,YAAT,kBACKD,EAASC,cADd,OAEKD,EAASlB,KAAKP,KAAI,SAACyB,GACpB,OAAOA,EAASP,EACjB,MAGHM,GAAK,kBACAA,GACAL,EAAuBM,EAASlB,KAAMkB,EAASP,GAAIG,EAAQ,EAArC,kBACpBC,GADoB,CAEvBG,EAASP,SAIR,kBAAKM,IAAZ,UAAyBC,EAASP,GAAKO,GACxC,GAAE,CAAC,GAIJ,OAHAK,OAAOC,OAAOR,GAAoBS,SAAQ,SAACC,UAClCA,EAAE1B,IACV,IACMgB,CACR,C","sources":["plugins/DocumentHandler/utils/helpers.js","plugins/DocumentHandler/utils/stateConverter.js"],"sourcesContent":["export const splitAndTrimOnCommas = (searchString) => {\n  return searchString.split(\",\").map((string) => {\n    return string.trim();\n  });\n};\n\nexport const getStringArray = (searchString) => {\n  let tempStringArray = splitAndTrimOnCommas(searchString);\n  return tempStringArray.join(\" \").split(\" \");\n};\n\nexport const hasSubMenu = (item) => {\n  return item.menu && item.menu.length > 0;\n};\n\nexport const flattenChaptersTree = (chapters) => {\n  return chapters.reduce((acc, chapter) => {\n    if (chapter.header) {\n      let chapterStrippedFromSubChapters = { ...chapter };\n      chapterStrippedFromSubChapters.chapters = [];\n      acc = [...acc, chapterStrippedFromSubChapters];\n    }\n    if (chapter.chapters && chapter.chapters.length > 0) {\n      return [...acc, ...flattenChaptersTree(chapter.chapters)];\n    }\n    return acc;\n  }, []);\n};\n","import React from \"react\";\nimport { hasSubMenu } from \"../utils/helpers\";\n\nconst getAllChildrenIds = (menu) => {\n  return menu.reduce((allChildren, item) => {\n    if (hasSubMenu(item)) {\n      allChildren = [...allChildren, ...getAllChildrenIds(item.menu)];\n    }\n    return [...allChildren, item.id];\n  }, []);\n};\n/**\n * Function takes the hierarchial menu and flattens it into a normalized state where\n * the objects key is the id of the menu-item. The structure is now flat and every\n * object has references to parents, children etc.\n * While we are normalizing, we are also setting internal properties we later use\n * to make items selected, colored etc.\n */\nexport const getNormalizedMenuState = (\n  menu,\n  parentId = null,\n  level = 0,\n  parentIds = []\n) => {\n  let normalizedItemList = menu.reduce((items, menuItem) => {\n    menuItem = {\n      ...menuItem,\n      ...{\n        parentId,\n        level,\n        menuItemIds: [],\n        allChildren: [],\n        allParents: parentIds,\n        itemRef: React.createRef(),\n      },\n    };\n\n    if (menuItem.menu && menuItem.menu.length > 0) {\n      menuItem.allChildren = [\n        ...menuItem.allChildren,\n        ...getAllChildrenIds(menuItem.menu),\n      ];\n      menuItem.menuItemIds = [\n        ...menuItem.menuItemIds,\n        ...menuItem.menu.map((menuItem) => {\n          return menuItem.id;\n        }),\n      ];\n\n      items = {\n        ...items,\n        ...getNormalizedMenuState(menuItem.menu, menuItem.id, level + 1, [\n          ...parentIds,\n          menuItem.id,\n        ]),\n      };\n    }\n    return { ...items, ...{ [menuItem.id]: menuItem } };\n  }, {});\n  Object.values(normalizedItemList).forEach((n) => {\n    delete n.menu;\n  });\n  return normalizedItemList;\n};\n"],"names":["splitAndTrimOnCommas","searchString","split","map","string","trim","getStringArray","join","hasSubMenu","item","menu","length","flattenChaptersTree","chapters","reduce","acc","chapter","header","chapterStrippedFromSubChapters","getAllChildrenIds","allChildren","id","getNormalizedMenuState","parentId","level","parentIds","normalizedItemList","items","menuItem","menuItemIds","allParents","itemRef","React","Object","values","forEach","n"],"sourceRoot":""}