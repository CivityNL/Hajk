{"version":3,"file":"static/js/3332.f38ee6e5.chunk.js","mappings":"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","sources":["plugins/TimeSlider/TimeSliderView.js","plugins/TimeSlider/components/TimeSliderSettings.js","../node_modules/@mui/icons-material/Pause.js","../node_modules/@mui/icons-material/PlayArrow.js","../node_modules/@mui/icons-material/RotateLeftOutlined.js","../node_modules/@mui/icons-material/SettingsOutlined.js"],"sourcesContent":["import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { Slider, Button, Badge, Grid, Tooltip } from \"@mui/material\";\nimport { Vector as VectorLayer } from \"ol/layer\";\n\nimport TimeSliderSettings from \"./components/TimeSliderSettings.js\";\nimport Dialog from \"../../components/Dialog/Dialog\";\n\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport RotateLeftOutlinedIcon from \"@mui/icons-material/RotateLeftOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\n\nclass TimeSliderView extends React.PureComponent {\n  static propTypes = {\n    map: PropTypes.object.isRequired,\n    localObserver: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      resolution: this.props.defaultResolution ?? \"years\",\n      stepSize: this.getStepSize(this.props.defaultResolution ?? \"years\"),\n      loadingError: true,\n      layerStatus: this.validateLayers(),\n      settingsDialog: false,\n      sliderSpeed: 1000,\n    };\n\n    this.map = props.map;\n    this.layers = props.layers;\n    this.startTime = this.getTime(\"timeSliderStart\");\n    this.endTime = this.getTime(\"timeSliderEnd\");\n    this.marks = this.getMarks(5); //Prop is number of marks no the slider\n    this.markResolution = \"\";\n    this.localObserver = props.localObserver;\n    this.bindSubscriptions();\n  }\n\n  componentDidMount() {\n    if (this.props.visibleAtStart === true) {\n      this.initiateTimeSliderView();\n    }\n  }\n\n  bindSubscriptions = () => {\n    this.localObserver.subscribe(\"initiateTimeSliderView\", () => {\n      this.initiateTimeSliderView();\n    });\n\n    this.localObserver.subscribe(\"resetTimeSliderView\", () => {\n      this.resetTimeSliderView();\n    });\n\n    this.localObserver.subscribe(\"resetTimeSlider\", () => {\n      this.resetTimeSlider();\n    });\n\n    this.localObserver.subscribe(\"toggleSlider\", (enabled) => {\n      this.toggleSlider(enabled);\n    });\n  };\n\n  validateLayers = () => {\n    const { layers } = this.props;\n    const layerStatus = {\n      error: false,\n      errorType: \"\",\n      faultyLayers: [],\n    };\n\n    if (layers.length === 0) {\n      layerStatus.error = true;\n      layerStatus.errorType = \"layers_missing\";\n    }\n\n    layers.forEach((layer) => {\n      if (!layer.get(\"timeSliderStart\") || !layer.get(\"timeSliderEnd\")) {\n        layerStatus.error = true;\n        layerStatus.errorType = \"layer_error\";\n        layerStatus.faultyLayers.push({\n          layerId: layer.get(\"name\"),\n          layerError: \"date_missing\",\n        });\n      }\n      if (layer.get(\"timeSliderStart\") === layer.get(\"timeSliderEnd\")) {\n        layerStatus.error = true;\n        layerStatus.errorType = \"layer_error\";\n        layerStatus.faultyLayers.push({\n          layerId: layer.get(\"name\"),\n          layerError: \"date_start_equals_end\",\n        });\n      }\n    });\n\n    return layerStatus;\n  };\n\n  initiateTimeSliderView = () => {\n    this.setState(\n      {\n        currentUnixTime: this.startTime,\n      },\n      () => {\n        this.initiateTimeLineLayers();\n        this.refreshLayers();\n      }\n    );\n  };\n\n  resetTimeSliderView = () => {\n    this.resetTimeSlider();\n    this.resetTimeLineLayers();\n  };\n\n  resetTimeSlider = () => {\n    this.toggleSlider(false);\n\n    this.localObserver.publish(\"updateHeaderTitle\", \"\");\n    this.setState(\n      {\n        currentUnixTime: this.startTime,\n      },\n      () => {\n        this.refreshLayers();\n      }\n    );\n  };\n\n  initiateTimeLineLayers = () => {\n    this.layers.forEach((layer) => {\n      const source = layer.getSource();\n      if (layer instanceof VectorLayer) {\n        source.originalStyleFunction = layer.getStyleFunction();\n        source.on(\"addfeature\", this.handleFeatureAdded);\n        layer.setStyle(null);\n      } else {\n        source.updateParams({\n          TIME: new Date(this.state.currentUnixTime).toISOString(),\n        });\n      }\n      layer.setVisible(true);\n    });\n  };\n\n  resetTimeLineLayers = () => {\n    this.layers.forEach((layer) => {\n      const source = layer.getSource();\n      if (layer instanceof VectorLayer) {\n        source.un(\"addfeature\", this.handleFeatureAdded);\n        layer.setStyle(source.originalStyleFunction);\n        layer.setVisible(false);\n      } else {\n        source.updateParams({\n          TIME: undefined,\n        });\n        layer.setVisible(false);\n      }\n    });\n  };\n\n  handleFeatureAdded = (event) => {\n    const source = event.target;\n    const feature = event.feature;\n    this.getTimeSliderLayerStyle(feature, source.originalStyleFunction);\n  };\n\n  refreshLayers = () => {\n    this.layers.forEach((layer) => {\n      if (layer instanceof VectorLayer) {\n        layer.getSource().refresh();\n      } else {\n        layer.getSource().updateParams({\n          TIME: new Date(this.startTime).toISOString(),\n        });\n      }\n    });\n  };\n\n  getUnixTimeFromString = (str) => {\n    const y = str.substr(0, 4),\n      m = str.substr(4, 2),\n      d = str.substr(6, 2);\n\n    return new Date(`${y}-${m}-${d}`).getTime();\n  };\n\n  getTime = (type) => {\n    let time = undefined;\n    this.layers.forEach((layer) => {\n      const layerTime = layer.get(type);\n      if (layerTime) {\n        let layerUnixTime = this.getUnixTimeFromString(layerTime);\n        if (!time) time = layerUnixTime;\n\n        if (type === \"timeSliderStart\" && time > layerUnixTime) {\n          time = layerUnixTime;\n        } else if (type === \"timeSliderEnd\" && time < layerUnixTime) {\n          time = layerUnixTime;\n        }\n      }\n    });\n    return time;\n  };\n\n  shouldFeatureShow = (feature) => {\n    const { currentUnixTime } = this.state;\n    const featureStart = feature.get(\"start\");\n    const featureEnd = feature.get(\"end\");\n\n    if (!featureStart || !featureEnd) {\n      return false;\n    }\n    let startDate = new Date(featureStart);\n    let endDate = new Date(featureEnd);\n    if (!startDate.getTime() > 0 || !endDate.getTime() > 0) {\n      startDate = this.getUnixTimeFromString(featureStart);\n      endDate = this.getUnixTimeFromString(featureEnd);\n    }\n    if (startDate <= currentUnixTime && endDate >= currentUnixTime) {\n      return true;\n    }\n    return false;\n  };\n\n  getTimeSliderLayerStyle(feature, originalStyleFunction) {\n    if (this.shouldFeatureShow(feature)) {\n      feature.setStyle(originalStyleFunction);\n    } else {\n      feature.setStyle(null);\n    }\n  }\n\n  toggleSlider = (enabled) => {\n    this.setState({ playing: enabled });\n    this.localObserver.publish(\"toggleHeaderPlayButton\", enabled);\n    if (enabled) {\n      clearInterval(this.sliderTimer);\n      this.sliderTimer = null;\n      this.sliderTimer = setInterval(() => {\n        let nextUnixTime = this.state.currentUnixTime + this.state.stepSize;\n        if (nextUnixTime >= this.endTime) {\n          nextUnixTime = this.endTime;\n          clearInterval(this.sliderTimer);\n          this.localObserver.publish(\"toggleHeaderPlayButton\", false);\n          this.setState({ playing: false });\n        }\n        this.handleSliderChange(nextUnixTime);\n      }, this.state.sliderSpeed);\n    } else {\n      clearInterval(this.sliderTimer);\n    }\n  };\n\n  getStepSize = (resolution) => {\n    const day = 1000 * 60 * 60 * 24;\n    switch (resolution) {\n      case \"years\":\n        return day * 365;\n      case \"months\":\n        return day * 31;\n      default:\n        return day;\n    }\n  };\n\n  setNextDate = (nextUnixTime) => {\n    const { currentUnixTime, resolution } = this.state;\n\n    const currentDate = new Date(currentUnixTime);\n    let nextDate = new Date(nextUnixTime);\n\n    if (resolution === \"years\") {\n      if (currentDate.getFullYear() === nextDate.getFullYear()) {\n        currentUnixTime <= nextUnixTime\n          ? nextDate.setFullYear(currentDate.getFullYear() + 1)\n          : nextDate.setFullYear(currentDate.getFullYear() - 1);\n      }\n    } else if (resolution === \"months\") {\n      if (currentDate.getMonth() === nextDate.getMonth()) {\n        currentUnixTime <= nextUnixTime\n          ? nextDate.setMonth(currentDate.getMonth() + 1)\n          : nextDate.setMonth(currentDate.getMonth() - 1);\n      }\n    } else {\n      if (currentDate.getDay() === nextDate.getDay()) {\n        currentUnixTime <= nextUnixTime\n          ? nextDate.setDate(currentDate.getDate() + 1)\n          : nextDate.setDate(currentDate.getDate() - 1);\n      }\n    }\n    return nextDate;\n  };\n\n  handleSliderChange = (nextUnixTime) => {\n    const nextDate = this.setNextDate(nextUnixTime);\n    this.setState({ currentUnixTime: nextDate.getTime() }, () => {\n      this.updateLayers();\n      this.updateHeader();\n    });\n  };\n\n  updateHeader = () => {\n    const { currentUnixTime, resolution } = this.state;\n    this.localObserver.publish(\n      \"updateHeaderTitle\",\n      this.getDateLabel(currentUnixTime, resolution)\n    );\n  };\n\n  getDateLabel = (unixTime, resolution) => {\n    let options = {};\n    const date = new Date(unixTime);\n\n    switch (resolution) {\n      case \"years\":\n        options = { year: \"numeric\" };\n        break;\n      case \"months\":\n        options = { month: \"long\", year: \"numeric\" };\n        break;\n      default:\n        options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n        break;\n    }\n\n    return date.toLocaleString(\"default\", options);\n  };\n\n  getShortDateLabel = (unixTime, resolution) => {\n    let options = {};\n    const date = new Date(unixTime);\n\n    switch (resolution) {\n      case \"years\":\n        options = { year: \"numeric\" };\n        break;\n      case \"months\":\n        options = { month: \"short\", year: \"numeric\" };\n        break;\n      default:\n        options = { day: \"numeric\", month: \"short\" };\n        break;\n    }\n\n    return date.toLocaleString(\"default\", options);\n  };\n\n  updateLayers = () => {\n    const extent = this.map.getView().calculateExtent();\n    this.layers.map((layer) => {\n      const source = layer.getSource();\n      if (layer instanceof VectorLayer) {\n        return source.forEachFeatureInExtent(extent, (feature) => {\n          this.getTimeSliderLayerStyle(feature, source.originalStyleFunction);\n        });\n      } else {\n        return source.updateParams({\n          TIME: new Date(this.state.currentUnixTime).toISOString(),\n        });\n      }\n    });\n  };\n\n  createMarks = (totalTime, markResolution, numMarks) => {\n    let marks = [];\n    const stepSize = Math.floor(totalTime / (numMarks - 1)); //-1 since we want to include endDate\n\n    for (let i = 0; i < numMarks; i++) {\n      const markTime = this.startTime + stepSize * i;\n      marks.push({\n        value: markTime,\n        label: this.getShortDateLabel(markTime, markResolution),\n      });\n    }\n\n    return marks;\n  };\n\n  getMarks = (numMarks) => {\n    const totalTime = this.endTime - this.startTime;\n    const unixMsPerMonth = 2592000000;\n    const numMonths = Math.floor(totalTime / unixMsPerMonth);\n\n    if (numMonths >= numMarks * 12) {\n      this.markResolution = \"years\";\n    } else if (numMonths >= numMarks) {\n      this.markResolution = \"months\";\n    } else {\n      this.markResolution = \"days\";\n    }\n\n    return this.createMarks(totalTime, this.markResolution, numMarks);\n  };\n\n  handleResolutionChange = (value) => {\n    this.setState({ resolution: value, stepSize: this.getStepSize(value) });\n  };\n\n  handleSliderSpeedChange = (value) => {\n    this.setState({ sliderSpeed: value }, () => {\n      this.toggleSlider(this.state.playing);\n    });\n  };\n\n  renderSettingsDialog = () => {\n    const { settingsDialog, resolution, sliderSpeed, layerStatus } = this.state;\n    if (settingsDialog) {\n      return createPortal(\n        <Dialog\n          options={{\n            text: (\n              <TimeSliderSettings\n                layers={this.layers}\n                layerStatus={layerStatus}\n                resolution={resolution}\n                sliderSpeed={sliderSpeed}\n                handleResolutionChange={this.handleResolutionChange}\n                handleSliderSpeedChange={this.handleSliderSpeedChange}\n              />\n            ),\n            headerText: \"Tidslinjeinställningar\",\n            buttonText: \"OK\",\n            useLegacyNonMarkdownRenderer: true,\n          }}\n          open={settingsDialog}\n          onClose={() => {\n            this.setState({\n              settingsDialog: false,\n            });\n          }}\n        ></Dialog>,\n        document.getElementById(\"windows-container\")\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderSettingsButton = () => {\n    const { layerStatus } = this.state;\n    return (\n      <Badge\n        color=\"error\"\n        invisible={!layerStatus.error}\n        badgeContent={`${\n          layerStatus.faultyLayers.length > 0\n            ? layerStatus.faultyLayers.length\n            : 1\n        }`}\n      >\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            this.setState({ settingsDialog: !this.state.settingsDialog });\n          }}\n        >\n          <SettingsOutlinedIcon />\n        </Button>\n      </Badge>\n    );\n  };\n\n  render() {\n    const { currentUnixTime, stepSize, playing } = this.state;\n\n    if (currentUnixTime) {\n      return (\n        <Grid container sx={{ padding: 2 }}>\n          <>{this.renderSettingsDialog()}</>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              paddingLeft:\n                this.markResolution === \"years\"\n                  ? 2\n                  : this.markResolution === \"months\"\n                  ? 4\n                  : 6,\n              paddingRight:\n                this.markResolution === \"years\"\n                  ? 2\n                  : this.markResolution === \"months\"\n                  ? 4\n                  : 6,\n            }}\n          >\n            <Slider\n              size=\"small\"\n              value={currentUnixTime}\n              min={this.startTime}\n              max={this.endTime}\n              step={stepSize}\n              marks={this.marks}\n              onChange={(e, value) => {\n                if (value !== currentUnixTime) {\n                  this.handleSliderChange(value);\n                }\n              }}\n            />\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item align=\"center\" xs={4}>\n              <Tooltip\n                disableInteractive\n                title={playing ? \"Stoppa tidslinjen\" : \"Starta tidslinjen\"}\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={() => {\n                    this.toggleSlider(!playing);\n                  }}\n                >\n                  {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item align=\"center\" xs={4}>\n              <Tooltip disableInteractive title=\"Återställ tidslinjen\">\n                <Button variant=\"contained\" onClick={this.resetTimeSlider}>\n                  <RotateLeftOutlinedIcon />\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item align=\"center\" xs={4}>\n              <Tooltip disableInteractive title=\"Inställningar\">\n                {this.renderSettingsButton()}\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={{ width: \"100%\", height: \"100%\" }}\n        >\n          <>{this.renderSettingsDialog()}</>\n          <Grid item>{this.renderSettingsButton()}</Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default TimeSliderView;\n","import React from \"react\";\nimport { Grid, Typography, Tooltip, Switch } from \"@mui/material\";\nimport { FormControl, FormHelperText, MenuItem, Select } from \"@mui/material\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@mui/material\";\n\nimport WarningIcon from \"@mui/icons-material/Warning\";\n\nclass TimeSliderSettings extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.layerStatus = props.layerStatus;\n  }\n\n  renderLayerList = () => {\n    const { layers, layerStatus } = this.props;\n\n    return (\n      <List>\n        {layers.map((layer, index) => {\n          const id = layer.get(\"name\");\n          const visible = layer.get(\"visible\");\n          let error = false;\n          let errorType = \"\";\n          layerStatus.faultyLayers\n            .filter((layer) => {\n              return layer.layerId === id;\n            })\n            .forEach((layer) => {\n              error = true;\n              errorType = layer.layerError;\n            });\n          return (\n            <ListItem\n              key={index}\n              sx={{\n                borderLeft: (theme) =>\n                  `${theme.spacing(0.5)} solid ${\n                    error\n                      ? theme.palette.error.main\n                      : theme.palette.success.main\n                  }`,\n              }}\n              disabled={!visible}\n            >\n              {error && (\n                <Tooltip\n                  disableInteractive\n                  key={`tt_${index}`}\n                  title={`${\n                    error\n                      ? errorType === \"date_start_equals_end\"\n                        ? \"Start- och slutdatumet på lagret har samma värde!\"\n                        : \"Start- eller slutdatumet på lagret saknas!\"\n                      : \"Lagret ser okej ut!\"\n                  }`}\n                >\n                  <ListItemIcon>\n                    <WarningIcon />\n                  </ListItemIcon>\n                </Tooltip>\n              )}\n\n              <ListItemText primary={layer.get(\"caption\")} />\n\n              <ListItemSecondaryAction>\n                <Tooltip\n                  disableInteractive\n                  title={visible ? \"Dölj lager\" : \"Visa lager\"}\n                >\n                  <Switch\n                    checked={visible}\n                    onChange={() => {\n                      layer.setVisible(!visible);\n                      this.setState({ time: new Date() });\n                    }}\n                    name=\"checkedA\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  };\n\n  renderSettingsContainer = () => {\n    const {\n      sliderSpeed,\n      resolution,\n      handleResolutionChange,\n      handleSliderSpeedChange,\n    } = this.props;\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <Select\n              variant=\"standard\"\n              labelId=\"select-stepSize-label\"\n              id=\"select-stepSize\"\n              value={sliderSpeed}\n              onChange={(e) => {\n                handleSliderSpeedChange(e.target.value);\n              }}\n            >\n              <MenuItem value={2000}>Långsam (0.5 Hz)</MenuItem>\n              <MenuItem value={1000}>Medium (1 Hz)</MenuItem>\n              <MenuItem value={500}>Snabb (2 Hz)</MenuItem>\n            </Select>\n            <FormHelperText>Ändra tidslinjens hastighet</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <Select\n              variant=\"standard\"\n              labelId=\"select-resolution-label\"\n              id=\"select-resolution\"\n              value={resolution}\n              onChange={(e) => {\n                handleResolutionChange(e.target.value);\n              }}\n            >\n              <MenuItem value={\"days\"}>Dag</MenuItem>\n              <MenuItem value={\"months\"}>Månad</MenuItem>\n              <MenuItem value={\"years\"}>År</MenuItem>\n            </Select>\n          </FormControl>\n          <FormHelperText>Ändra tidslinjens upplösning</FormHelperText>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  render() {\n    const { layerStatus } = this.props;\n\n    if (layerStatus.errorType === \"layers_missing\") {\n      return (\n        <Grid container>\n          <Typography>\n            Inga tidslinje-lager kunde hittas. Kontakta systemadministratören.\n          </Typography>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography>Lagerstatus: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderLayerList()}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>Inställningar: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderSettingsContainer()}\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default TimeSliderSettings;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"\n}), 'RotateLeftOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}), 'SettingsOutlined');\n\nexports.default = _default;"],"names":["TimeSliderView","props","bindSubscriptions","localObserver","subscribe","initiateTimeSliderView","resetTimeSliderView","resetTimeSlider","enabled","toggleSlider","validateLayers","layers","layerStatus","error","errorType","faultyLayers","length","forEach","layer","get","push","layerId","layerError","setState","currentUnixTime","startTime","initiateTimeLineLayers","refreshLayers","resetTimeLineLayers","publish","source","getSource","VectorLayer","originalStyleFunction","getStyleFunction","on","handleFeatureAdded","setStyle","updateParams","TIME","Date","state","toISOString","setVisible","un","undefined","event","target","feature","getTimeSliderLayerStyle","refresh","getUnixTimeFromString","str","y","substr","m","d","getTime","type","time","layerTime","layerUnixTime","shouldFeatureShow","featureStart","featureEnd","startDate","endDate","playing","clearInterval","sliderTimer","setInterval","nextUnixTime","stepSize","endTime","handleSliderChange","sliderSpeed","getStepSize","resolution","day","setNextDate","currentDate","nextDate","getFullYear","setFullYear","getMonth","setMonth","getDay","setDate","getDate","updateLayers","updateHeader","getDateLabel","unixTime","options","date","year","month","toLocaleString","getShortDateLabel","extent","map","getView","calculateExtent","forEachFeatureInExtent","createMarks","totalTime","markResolution","numMarks","marks","Math","floor","i","markTime","value","label","getMarks","numMonths","handleResolutionChange","handleSliderSpeedChange","renderSettingsDialog","settingsDialog","createPortal","text","headerText","buttonText","useLegacyNonMarkdownRenderer","open","onClose","document","getElementById","renderSettingsButton","color","invisible","badgeContent","variant","onClick","defaultResolution","loadingError","this","visibleAtStart","container","sx","padding","item","xs","paddingLeft","paddingRight","size","min","max","step","onChange","e","direction","justifyContent","alignItems","spacing","align","disableInteractive","title","width","height","React","TimeSliderSettings","renderLayerList","index","id","visible","filter","borderLeft","theme","palette","main","success","disabled","primary","checked","name","inputProps","renderSettingsContainer","fullWidth","labelId","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}