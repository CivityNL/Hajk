{"version":3,"file":"static/js/9900.4fa2eb80.chunk.js","mappings":"uXAeMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IAWRC,kBAAoB,WAClB,EAAKD,MAAME,SAASC,UAAU,eAAe,SAACC,GAC5C,EAAKJ,MAAME,SAASG,QAAQ,yBAA0BD,GACtD,EAAKE,SAAS,CACZC,YAAaH,EACbI,WAAY,EAAKR,MAAMS,MAAMD,YAEhC,IAED,EAAKR,MAAME,SAASC,UAAU,aAAa,WACzC,EAAKH,MAAME,SAASG,QAAQ,8BAA0BK,GACtD,EAAKJ,SAAS,CACZC,iBAAaG,EACbF,gBAAYE,EACZC,WAAY,EACZC,gBAAYF,GAEf,GACF,EA9BkB,EAgCnBG,wBAA0B,SAACC,GACzB,EAAKR,SAAS,CACZS,SAAS,EACTC,aAAyB,oBAAXF,EACdH,WAAuB,oBAAXG,EAA+B,EAAI,GAElD,EAtCkB,EAgDnBG,WAAa,WACX,IAAMN,EAAa,EAAKO,MAAMP,WAAa,EACxB,IAAfA,GACF,EAAKX,MAAMS,MAAMU,QACjB,EAAKb,SAAS,CACZC,iBAAaG,EACbF,gBAAYE,EACZC,WAAY,EACZC,gBAAYF,KAGd,EAAKJ,SAAS,CAAEK,WAAAA,GAEnB,EA7DkB,EA+DnBS,WAAa,WACX,IAAMT,EAAa,EAAKO,MAAMP,WAAa,EAC3C,EAAKL,SAAS,CAAEK,WAAAA,GACjB,EAlEkB,EAoEnBU,iBAAmB,SAACC,GAClB,IAAIC,OAAUb,EACVY,IAAa,EAAKJ,MAAMN,aAC1BW,EAAUD,GAEZ,EAAKhB,SAAS,CACZM,WAAYW,GAEf,EA5EkB,EA8EnBC,iBAAmB,SAACC,GAClB,OAAKA,EAODA,EAAKC,iBAEL,UAAC,IAAD,yCAC8B,IAC3BD,EAAKC,gBAAgBC,UAAUC,cAAcC,cAKlDJ,EAAKK,qBACLL,EAAKK,oBAAoBC,oBAGvB,4BACE,SAAC,IAAD,uCACA,UAAC,IAAD,mCACwB,KACrB,UAAAN,EAAKK,oBAAoBC,mBAAmBC,qBAA5C,eAA2DH,aAC1D,MAEJ,UAAC,IAAD,qCAC0B,KACvB,UAAAJ,EAAKK,oBAAoBC,mBAAmBE,oBAA5C,eAA0DJ,aACzD,MAEJ,UAAC,IAAD,uCAC4B,KACzB,UAAAJ,EAAKK,oBAAoBC,mBAAmBG,oBAA5C,eAA0DL,aACzD,SAMN,SAAC,IAAD,4FAvCA,SAAC,IAAD,uFAgBD,IAAD,KA4BH,EA7HkB,EA+HnBM,cAAgB,WACd,MAAuB,EAAKnC,MAApBS,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,IACf3B,EAAM4B,MAAK,SAACC,IAERA,IACCA,EAASZ,iBAAoBY,EAASR,qBAQvCrB,EAAM8B,OAAQ,EACd9B,EAAM+B,sBACN/B,EAAMgC,uBAAoB/B,EAC1B,EAAKU,aACLgB,EAAIM,eAAerC,QACjB,aACA,EAAKmB,iBAAiBc,IAExB,EAAKjB,sBAAiBX,GACtBD,EAAMkC,0BAfN,EAAK3C,MAAME,SAASG,QAAQ,cAAeI,EAAMgC,mBACjDL,EAAIM,eAAerC,QACjB,aACA,EAAKmB,iBAAiBc,IAc3B,GACF,EAxJkB,EA2LnBM,cAAgB,WACd,OACE,SAAC,UAAD,CACEC,IAAI,UACJrC,WAAY,EAAKU,MAAMV,WACvBC,MAAO,EAAKT,MAAMS,MAClBP,SAAU,EAAKF,MAAME,SACrBkC,IAAK,EAAKpC,MAAMoC,IAChBxB,WAAY,EAAKM,MAAMN,WACvBS,iBAAkB,SAACC,GAAD,OAAc,EAAKD,iBAAiBC,EAApC,GAGvB,EAvMkB,EAyMnBwB,sBAAwB,WACtB,IAAQtC,EAAe,EAAKU,MAApBV,WACR,EAA4B,EAAKR,MAAzBS,EAAR,EAAQA,MAAOP,EAAf,EAAeA,SACf,OACE,SAAC,UAAD,CACE2C,IAAI,kBACJrC,WAAYA,EACZC,MAAOA,EACPP,SAAUA,EACV6C,OAAK,WAGV,EAnNC,EAAK7B,MAAQ,CACX8B,QAAShD,EAAMS,MAAMwC,aACrBzC,gBAAYE,EACZH,iBAAaG,EACbC,WAAY,EACZC,gBAAYF,GAEd,EAAKT,oBATY,CAUlB,CAwRA,OAxRA,gCA8BD,SAASiD,GACPC,KAAKnD,MAAMS,MAAMU,QACjBgC,KAAK7C,SAAS,CACZS,SAAS,IAEXoC,KAAKnD,MAAMS,MAAM2C,SAASF,EAAWC,KAAKtC,wBAC3C,8BA4GD,WAAiB,IAAD,OACd,EAAqCsC,KAAKjC,MAAlCF,EAAR,EAAQA,aAAcR,EAAtB,EAAsBA,WACtB,OACE,UAAC,IAAD,CAAa6C,QAAQ,WAAWC,MAAOtC,EAAcuC,WAAS,EAA9D,WACE,SAAC,IAAD,CAAYF,QAAQ,WAAWG,GAAG,sBAAlC,2BAGA,SAAC,IAAD,CACEA,GAAG,gBACHH,QAAQ,WACRI,OAAiB,OAAVjD,QAAU,IAAVA,OAAA,EAAAA,EAAYgD,KAAM,GACzBE,SAAU,SAACC,GACT,EAAKP,SAASO,EAAEC,OAAOH,MACxB,EANH,SAQGN,KAAKjC,MAAM8B,QAAQa,KAAI,SAACC,EAAQC,GAC/B,OACE,SAAC,IAAD,CAEEN,MAAOK,EAAON,GAFhB,mBAGKM,EAAOE,UAFLD,EAIV,MAEF/C,IACC,SAAC,IAAD,6EAMP,uBA8BD,WACE,MAAyDmC,KAAKjC,MAAtDP,EAAR,EAAQA,WAAYH,EAApB,EAAoBA,WAAYD,EAAhC,EAAgCA,YAAaQ,EAA7C,EAA6CA,QAC7C,OACE,+BACE,UAAC,IAAD,CAASJ,WAAYA,EAAYsD,YAAY,WAA7C,WACE,UAAC,IAAD,YACE,SAAC,IAAD,iDACA,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAtC,UACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACGvD,GAAU,SAAC,IAAD,IAAuBoC,KAAKoB,wBALrC,MAUV,UAAC,IAAD,YACE,SAAC,IAAD,UACkB,IAAf5D,EAAA,2BACgBH,QADhB,IACgBA,OADhB,EACgBA,EAAYwD,SAD5B,cAIH,SAAC,IAAD,WACE,UAAC,KAAD,CAAME,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAtC,WACE,UAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACGnB,KAAKL,wBACLK,KAAKP,oBAENrC,IACA,iCACE,SAAC,KAAD,CAAM8D,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACEf,WAAS,EACTiB,QAASrB,KAAKlC,WACdoC,QAAQ,YAHV,yBAQF,SAAC,KAAD,CAAMgB,MAAI,EAACC,GAAI,EAAf,UACE,SAAC,IAAD,CACEf,WAAS,EACTF,QAAQ,YACRoB,SAAS,SAAC,IAAD,IACTC,UAAWlE,EACXmE,MAAM,UACNH,QAASrB,KAAKhB,cANhB,+BAxBF,MAwCV,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,SAAC,IAAD,WACE,SAAC,KAAD,CAAM+B,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAtC,UACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEf,WAAS,EACTF,QAAQ,YACRsB,MAAM,UACNH,QAASrB,KAAKlC,WAJhB,0CALE,SAoBjB,OAnSGlB,CAAiB6E,EAAAA,eAqSvB,W,mPCtSMC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAa,kBAAgB,CAC9CE,UAAW,SACXC,QAF8B,EAAGC,MAElBf,QAAQ,GAFO,IAK1BgB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYnF,GAAQ,IAAD,iCACjB,cAAMA,IAyBRoF,eAAiB,SAAChF,GAChB,IAAQI,EAAe,EAAKR,MAApBQ,WACR,GAAKJ,GAAYI,EAAjB,CAEA,IAAM6E,EAAejF,EAAQkF,gBACzBC,EAAW,CAAC,EAgChB,OA9BA/E,EAAWgF,eAAeC,SAAQ,SAACC,GACA,OAA7BL,EAAaK,EAAMC,QACE,YAAnBD,EAAME,UAAuD,KAA7BP,EAAaK,EAAMC,MACrDJ,EAASG,EAAMC,MAAQD,EAAMG,OAAOhC,KAAI,SAACJ,GACvC,MAAO,CACLkC,KAAMlC,EACNqC,QACsC,kBAA7BT,EAAaK,EAAMC,YAGUjF,IAFhC2E,EAAaK,EAAMC,MAChBI,MAAM,KACNC,MAAK,SAACC,GAAD,OAAOA,IAAMxC,CAAb,IAGjB,IAC2B,YAAnBiC,EAAME,SACQ,YAAnBF,EAAMQ,SACRX,EAASG,EAAMC,MACbN,EAAaK,EAAMC,OAAgC,OAAvBD,EAAMS,eAAyB,EAE7DZ,EAASG,EAAMC,MACbN,EAAaK,EAAMC,OAAgC,IAAvBD,EAAMS,cAAsB,EAK5DZ,EAASG,EAAMC,MACbN,EAAaK,EAAMC,OAASD,EAAMS,cAAgB,GAGzD,IACMZ,CAnC4B,CAoCpC,EA9DC,EAAKrE,MAAQ,CACXkF,gBAAY1F,EACZN,aAASM,GAEX,EAAK2F,WAAa,CAAC,EACnBrG,EAAME,SAASC,UAAU,0BAA0B,SAACC,GAClD,EAAKE,SAAS,CACZ8F,WAAY,EAAKhB,eAAehF,GAChCA,QAASA,GAEZ,IACD,UAAAJ,EAAMQ,kBAAN,mBAAkBgF,sBAAlB,SAAkCC,SAAQ,SAACC,EAAOY,GAChDZ,EAAMa,eAAgB,CACvB,IAED,UAAAvG,EAAMQ,kBAAN,mBAAkBgG,yBAAlB,SAAqCf,SAAQ,SAACC,EAAOY,GACnDZ,EAAMa,eAAgB,CACvB,IAnBgB,CAoBlB,CAimBA,OAjmBA,4CAED,WACEpD,KAAKnD,MAAME,SAASuG,YAAY,yBACjC,8BA0CD,WAAiB,IAAD,WACRpB,EAAelC,KAAKnD,MAAMS,MAAMF,YAAY+E,gBAClDoB,OAAOC,KAAKxD,KAAKjC,MAAMkF,YAAYX,SAAQ,SAACmB,GAC1C,IAAInD,EAAQ,EAAKvC,MAAMkF,WAAWQ,GACpB,KAAVnD,IAAcA,EAAQ,MACtBoD,MAAMC,QAAQrD,KAChBA,EAAQA,EACLsD,QAAO,SAACd,GAAD,OAAOA,EAAEH,OAAT,IACPjC,KAAI,SAACoC,GAAD,OAAOA,EAAEN,IAAT,IACJqB,KAAK,MAEV3B,EAAauB,GAAOnD,CACrB,IAED,UAAAN,KAAKnD,MAAMQ,kBAAX,mBAAuBgG,yBAAvB,SAA0Cf,SAAQ,SAACC,GACjD,IAAIjC,EAAQiC,EAAMS,aACJ,KAAV1C,IAAcA,EAAQ,MACtBoD,MAAMC,QAAQrD,KAChBA,EAAQA,EACLsD,QAAO,SAACd,GAAD,OAAOA,EAAEH,OAAT,IACPjC,KAAI,SAACoC,GAAD,OAAOA,EAAEN,IAAT,IACJqB,KAAK,MAEV,IAAIC,EAAW,EAAKjH,MAAMS,MAAMF,YAAY2G,kBACvCD,IACHA,EAAW,QAETvB,EAAMC,OAASsB,IAEjB5B,EAAaK,EAAMC,MAAQlC,EAE9B,IACDN,KAAKnD,MAAMS,MAAMF,YAAY4G,cAAc9B,EAC5C,6BAED,SAAaM,EAAMlC,GAAQ,IAAD,OACpB2C,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC1C,QAAQiB,KAAK5D,IAAoB,KAAVA,EACzB2C,EAAWT,GAAQlC,EAEdN,KAAKjC,MAAMkF,WAAWT,KACzBS,EAAWT,GAAQ,IAGvBxC,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,6BAED,SAAa3B,EAAMlC,GAAQ,IAAD,OACpB2C,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAChC,OAAV3C,EACFA,GAAQ,EACW,QAAVA,IACTA,GAAQ,GAGV2C,EAAWT,GAAQlC,EACnBN,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,4BAED,SAAY3B,EAAMlC,GAAQ,IAAD,OACnB2C,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC1C,qBAAqBiB,KAAK5D,IAAoB,KAAVA,GACtCA,EAAQA,EAAM8D,QAAQ,IAAK,KAC3BnB,EAAWT,GAAQlC,GAEdN,KAAKjC,MAAMkF,WAAWT,KACzBS,EAAWT,GAAQ,IAGvBxC,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,yBAED,SAAS3B,EAAMlC,GAAQ,IAAD,OAGhB+D,EADF,4oCACgBH,KAAK5D,GACnB2C,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC1CoB,GAAmB,KAAV/D,GACX2C,EAAWT,GAAQlC,SACZN,KAAKkD,WAAWV,KAEvBS,EAAWT,GAAQ,GACnBxC,KAAKkD,WAAWV,GACd,qDAEJxC,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,0BAED,SAAU3B,EAAMlC,GAAQ,IAAD,OACjB2C,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC9CA,EAAWT,GAAQlC,EACnBN,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,4BAED,SAAY3B,EAAMlC,GAAQ,IAAD,OACnB2C,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC9CA,EAAWT,GAAQlC,EACnBN,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,8BAED,SAAc3B,EAAMG,EAASrC,EAAOM,GAAQ,IAAD,OACrCqC,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC9CA,EAAWT,GAAM5B,GAAO+B,QAAUA,EAClC3C,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,0BAED,SAAU3B,EAAM8B,GAAO,IAAD,OAChBrB,EAAaM,OAAOU,OAAO,CAAC,EAAGjE,KAAKjC,MAAMkF,YAC9CA,EAAWT,GAAQ8B,EACnBtE,KAAKmE,gBACLnE,KAAK7C,SACH,CACE8F,WAAYA,IAEd,WACE,EAAKkB,eACN,GAEJ,2BAED,WAEkD,UAA9CnE,KAAKnD,MAAMS,MAAMF,YAAYmH,cACiB,YAA9CvE,KAAKnD,MAAMS,MAAMF,YAAYmH,eAE7BvE,KAAKnD,MAAMS,MAAMF,YAAYmH,aAAe,UAE/C,+BAED,SAAehC,EAAOiC,GAAW,IAAD,mBACH,qBAAhBjC,EAAMkC,OAAyC,KAAhBlC,EAAMkC,QAC9ClC,EAAMkC,MAAQlC,EAAMC,MAIjBD,EAAME,UAA+B,KAAnBF,EAAME,WACJ,QAAnBF,EAAMQ,UAAyC,YAAnBR,EAAMQ,WACpCR,EAAME,SAAW,UAGI,WAAnBF,EAAMQ,UAA4C,YAAnBR,EAAMQ,WACvCR,EAAME,SAAW,UAGI,SAAnBF,EAAMQ,WACRR,EAAME,SAAW,SAGI,cAAnBF,EAAMQ,UAA+C,aAAnBR,EAAMQ,WAC1CR,EAAME,SAAW,aAGI,YAAnBF,EAAMQ,WACRR,EAAME,SAAW,YAGrB,IAAInC,EAAQN,KAAKjC,MAAMkF,WAAWV,EAAMC,MAYxC,YAVcjF,IAAV+C,GAAiC,OAAVA,IACzBA,EAAQ,IAGI,KAAVA,GAAgBiC,EAAMa,eACG,OAAvBb,EAAMS,eACR1C,EAAQiC,EAAMS,cAIVT,EAAME,UACZ,IAAK,SACH,OACE,SAAC,IAAD,CACEpC,GAAIkC,EAAMlC,GACVqE,MAAOnC,EAAMkC,MACbrE,WAAW,EACXuE,OAAO,SACPzE,QAAQ,WACRqB,UAAWiD,EACXlE,MAAOA,EACPH,MAAOH,KAAKkD,WAAW0B,eAAerC,EAAMC,MAC5CqC,YACE,UAAA7E,KAAKkD,WAAWX,EAAMC,aAAtB,eAA6BsC,SAAU,EACnC9E,KAAKkD,WAAWX,EAAMC,MACtBD,EAAMwC,YAEZxE,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKC,aAAa1C,EAAMC,KAAMhC,EAAEC,OAAOH,OACvCiC,EAAMa,eAAgB,CACvB,IAGP,IAAK,SACH,OACE,SAAC,IAAD,CACE/C,GAAIkC,EAAMlC,GACVqE,MAAOnC,EAAMkC,MACbrE,WAAW,EACXuE,OAAO,SACPzE,QAAQ,WACRqB,UAAWiD,EACXlE,MAAOA,EACPH,MAAOH,KAAKkD,WAAW0B,eAAerC,EAAMC,MAC5CqC,YACE,UAAA7E,KAAKkD,WAAWX,EAAMC,aAAtB,eAA6BsC,SAAU,EACnC9E,KAAKkD,WAAWX,EAAMC,MACtBD,EAAMwC,YAEZxE,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKE,YAAY3C,EAAMC,KAAMhC,EAAEC,OAAOH,OACtCiC,EAAMa,eAAgB,CACvB,IAGP,IAAK,QACH,OACE,SAAC,IAAD,CACE/C,GAAIkC,EAAMlC,GACVqE,MAAOnC,EAAMkC,MACbrE,WAAW,EACXuE,OAAO,SACPQ,KAAK,OACLjF,QAAQ,WACRqB,UAAWiD,EACXlE,MAAOA,EACPH,MAAOH,KAAKkD,WAAW0B,eAAerC,EAAMC,MAC5CqC,YACE,UAAA7E,KAAKkD,WAAWX,EAAMC,aAAtB,eAA6BsC,SAAU,EACnC9E,KAAKkD,WAAWX,EAAMC,MACtBD,EAAMwC,YAEZxE,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKI,UAAU7C,EAAMC,KAAMhC,EAAEC,OAAOH,OACpCiC,EAAMa,eAAgB,CACvB,EACDiC,gBAAiB,CACfC,QAAQ,KAIhB,IAAK,YACH,OACE,SAAC,IAAD,CACEjF,GAAIkC,EAAMlC,GACVqE,MAAOnC,EAAMC,KACbpC,WAAW,EACXuE,OAAO,SACPQ,KAAK,iBACLjF,QAAQ,WACRqB,UAAWiD,EACXlE,MAAOA,EACPH,MAAOH,KAAKkD,WAAW0B,eAAerC,EAAMC,MAC5CqC,YACE,UAAA7E,KAAKkD,WAAWX,EAAMC,aAAtB,eAA6BsC,SAAU,EACnC9E,KAAKkD,WAAWX,EAAMC,MACtBD,EAAMwC,YAEZxE,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKI,UAAU7C,EAAMC,KAAMhC,EAAEC,OAAOH,OACpCiC,EAAMa,eAAgB,CACvB,EACDiC,gBAAiB,CACfC,QAAQ,KAIhB,IAAK,MACH,OACE,+BACE,SAAC,IAAD,CACEjF,GAAIkC,EAAMlC,GACVqE,MAAOnC,EAAMkC,MACbc,KAAK,QACLnF,WAAW,EACXuE,OAAO,SACPzE,QAAQ,WACRqB,UAAWiD,EACXrE,MAAOH,KAAKkD,WAAW0B,eAAerC,EAAMC,MAC5CqC,YACE,UAAA7E,KAAKkD,WAAWX,EAAMC,aAAtB,eAA6BsC,SAAU,EACnC9E,KAAKkD,WAAWX,EAAMC,MACtBD,EAAMwC,YAEZzE,MAAOA,EACPC,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKQ,UAAUjD,EAAMC,KAAMhC,EAAEC,OAAOH,OACpCiC,EAAMa,eAAgB,CACvB,EACDqC,OAAQ,SAACjF,GACP,EAAKwE,aACkB,QAAnBzC,EAAME,UACR,EAAKiD,SAASnD,EAAMC,KAAMhC,EAAEC,OAAOH,OAErCiC,EAAMa,eAAgB,CACvB,MAIT,IAAK,UACH,OACE,+BACE,SAAC,IAAD,CACE/C,GAAIkC,EAAMlC,GACVqE,MAAOnC,EAAMkC,MACbc,KAAK,QACLnF,WAAW,EACXuE,OAAO,SACPzE,QAAQ,WACRqB,UAAWiD,EACXmB,WAAS,EACTxF,MAAOH,KAAKkD,WAAW0B,eAAerC,EAAMC,MAC5CqC,YACE,UAAA7E,KAAKkD,WAAWX,EAAMC,aAAtB,eAA6BsC,SAAU,EACnC9E,KAAKkD,WAAWX,EAAMC,MACtBD,EAAMwC,YAEZzE,MAAOA,EACPC,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKQ,UAAUjD,EAAMC,KAAMhC,EAAEC,OAAOH,OACpCiC,EAAMa,eAAgB,CACvB,EACDqC,OAAQ,SAACjF,GACP,EAAKwE,aACkB,QAAnBzC,EAAME,UACR,EAAKiD,SAASnD,EAAMC,KAAMhC,EAAEC,OAAOH,OAErCiC,EAAMa,eAAgB,CACvB,MAIT,IAAK,UACH,IAAIwC,EAAgB,GACc,kBAAvBrD,EAAMS,eACf4C,EAAgBrD,EAAMS,aAAaJ,MAAM,MAEvCL,EAAMa,eACRwC,EAActD,SAAQ,SAACU,GACrB1C,EAAMgC,SAAQ,SAACuD,GACT7C,IAAiB6C,EAAIrD,OACvBqD,EAAIlD,SAAU,EAEjB,GACF,IAGH,IAAImD,EAAavD,EAAMG,OAAOhC,KAAI,SAACmF,EAAK1C,GACtC,IAAI9C,EAAKkC,EAAMC,KAAOW,EACpBjC,EAAOZ,EAAMuC,MAAK,SAAC3B,GAAD,OAAUA,EAAKsB,OAASqD,CAAxB,KAAgC,CAChDlD,SAAS,GAGb,OACE,SAAC,IAAD,CAEEoD,SACE,SAAC,IAAD,CACEpD,QAASzB,EAAKyB,QACdpB,UAAWiD,EACXhD,MAAM,UACNjB,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKgB,cAAczD,EAAMC,KAAMhC,EAAEC,OAAOkC,QAASkD,EAAK1C,GACtDZ,EAAMa,eAAgB,CACvB,IAGLsB,MAAOmB,GAbFxF,EAgBV,IACD,OACE,iCACE,UAAC,IAAD,CAAaD,WAAS,EAACuE,OAAO,SAASsB,UAAU,WAAjD,WACE,SAAC,IAAD,CAAWA,UAAU,SAArB,SAA+B1D,EAAMkC,SACrC,SAAC,IAAD,UAAYqB,KACZ,SAAC,IAAD,CACEI,MAAO,CAAEC,UAAW,MAAOC,aAAc,cAG7C,qBAGN,IAAK,QACH,IAAIC,EAAU,KAQd,OAPI3C,MAAMC,QAAQpB,EAAMG,UACtB2D,EAAU9D,EAAMG,OAAOhC,KAAI,SAACmF,EAAK1C,GAAN,OACzB,mBAAgB7C,MAAOuF,EAAvB,SACGA,GADU1C,EADY,MAO3B,+BACE,UAAC,IAAD,CAAa/C,WAAW,EAAM6F,UAAU,WAAxC,WACE,SAAC,IAAD,CAAWA,UAAU,SAArB,SAA+B1D,EAAMkC,SACrC,UAAC,IAAD,CACEnE,MAAOA,EACPJ,QAAQ,WACRqB,UAAWiD,EACX8B,OAAO,SAAC,IAAD,CAAO9D,KAAMD,EAAMC,KAAMnC,GAAIkC,EAAMC,OAC1CjC,SAAU,SAACC,GACT,EAAKwE,aACL,EAAKuB,YAAYhE,EAAMC,KAAMhC,EAAEC,OAAOH,OACtCiC,EAAMa,eAAgB,CACvB,EATH,WAWE,mBAAQ9C,MAAM,GAAd,gCACC+F,MAEH,SAAC,IAAD,UAAiB9D,EAAMwC,mBAI/B,IAAK,UACH,OACE,SAAC,IAAD,CACEgB,SACE,SAAC,IAAD,CACEpD,QACsB,YAAnBJ,EAAMQ,UAA0C,OAAhBR,EAAMjC,OACnB,QAAnBiC,EAAMQ,UAAsC,IAAhBR,EAAMjC,MAErCkB,MAAM,UACND,UAAWiD,EACXjE,SAAU,SAACC,GACT,EAAKwE,aACDxE,EAAEC,OAAOkC,QACY,YAAnBJ,EAAMQ,SACRR,EAAMjC,MAAQ,KAEdiC,EAAMjC,MAAQ,EAGO,YAAnBiC,EAAMQ,SACRR,EAAMjC,MAAQ,MAEdiC,EAAMjC,MAAQ,EAGlBiC,EAAMa,eAAgB,EACtB,EAAKoD,aAAajE,EAAMC,KAAMD,EAAMjC,OACpC,EAAKmG,aACN,IAGL/B,MAAOnC,EAAMC,OAKnB,QACE,OAAO,0BAAOlC,IAEnB,uBAED,WAAU,IAAD,eACC2C,EAAejD,KAAKjC,MAApBkF,WACA3F,EAAU0C,KAAKnD,MAAfS,MAER,IAAK2F,QAAwC1F,IAA1ByC,KAAKnD,MAAMQ,WAA0B,OAAO,KAE/D,IAAMqJ,EAAM,UAAG1G,KAAKnD,MAAMQ,kBAAd,iBAAG,EAAuBgF,sBAA1B,aAAG,EAAuC3B,KAAI,SAAC6B,EAAOY,GAChE,IAAMwD,EAAc,EAAKC,eAAerE,GAAO,GAC/C,OACE,SAAC,KAAD,CAAMrB,MAAI,EAACC,GAAI,GAAYzB,IAAK6C,EAAMC,KAAtC,SACGmE,GADqBxD,EAI3B,IAEK0D,EAAa,UAAG7G,KAAKnD,MAAMQ,kBAAd,iBAAG,EAAuBgG,yBAA1B,aAAG,EAClBO,QAAO,SAAC1C,GAAD,OAA0B,IAAhBA,EAAK4F,MAAf,IACRpG,KAAI,SAAC6B,EAAOY,GACX,IAAMwD,EAAc,EAAKC,eAAerE,GAAO,GAC/C,OACE,SAAC,KAAD,CAAMrB,MAAI,EAACC,GAAI,GAAYzB,IAAK6C,EAAMC,KAAtC,SACGmE,GADqBxD,EAI3B,IAEH,OACE,iCACE,SAACzB,EAAD,CAAYR,MAAI,EAACC,GAAI,GAArB,UACE,SAAC,IAAD,CACEjB,QAAQ,WACRsB,MAAM,UACNkD,MAAM,gCAGV,UAAChD,EAAD,CAAYR,MAAI,EAACC,GAAI,GAArB,WACE,+CACCuF,GACa,OAAbG,QAAa,IAAbA,OAAA,EAAAA,EAAe/B,QAAS,EAAI,2BAA0B,GACtD+B,MAEH,SAACnF,EAAD,CAAYR,MAAI,EAACC,GAAI,GAArB,UACE,SAAC,IAAD,CACEK,MAAM,UACNuF,GAAI,CAAEC,MAAO,SACb9G,QAAQ,YACRmB,QAAS/D,EAAM2J,iBAJjB,oBAWP,OAtnBGjF,CAAwBP,EAAAA,WAynB9B,W,kNChoBMyF,GAAevF,EAAAA,EAAAA,IAAOwF,EAAAA,EAAPxF,EAAe,gBAAGyF,EAAH,EAAGA,SAAUrF,EAAb,EAAaA,MAAb,MAA0B,CAC5DsF,UAAU,GAAD,OAAKtF,EAAMf,QAAQ,IAAnB,sBACTsG,aAAcF,EAAQ,UACfrF,EAAMf,QAAQ,IADC,kBACae,EAAMwF,QAAQC,UAAUC,MADrC,UAEf1F,EAAMf,QAAQ,IAFC,sBAFY,IAO9B0G,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAY7K,GAAQ,IAAD,yBACjB,cAAMA,IACDkB,MAAQ,CACXX,iBAAaG,GAGf,EAAKV,MAAME,SAASC,UAAU,0BAA0B,SAACC,GACvD,EAAKE,SAAS,CACZC,YAAaH,GAEhB,IAVgB,CAWlB,CA6LA,OA7LA,4CAED,WACE+C,KAAKnD,MAAME,SAASuG,YAAY,yBACjC,2BAED,SAAW6B,EAAMwC,GACf,MAA8B3H,KAAKnD,MAA3BS,EAAR,EAAQA,MAAOG,EAAf,EAAeA,WACf,GAAIkK,GAAgBlK,IAAekK,EAAaC,cAC9CtK,EAAMkC,6BAGR,GAAI/B,IAAe0H,EAMnB,OAFA7H,EAAMkC,wBAEE2F,GACN,IAAK,MACH7H,EAAMuK,oBAAoB,MAAOF,GACjC,MACF,IAAK,SACHrK,EAAMuK,oBAAoB,UAC1B,MACF,IAAK,SACHvK,EAAMuK,oBAAoB,UAC1B,MACF,IAAK,OACHvK,EAAMuK,oBAAoB,aAhB5BvK,EAAMkC,uBAqBT,kCAED,WACEQ,KAAKnD,MAAMS,MAAMwK,MAAMC,YAAa,EACpC/H,KAAKnD,MAAMqB,iBAAiB,SAC5B8B,KAAKgI,WACH,MACAhI,KAAKnD,MAAMQ,WAAW4K,eAAiB,aAAe,QAEzD,iCAED,WACEjI,KAAKnD,MAAMS,MAAMwK,MAAMC,YAAa,EACpC/H,KAAKnD,MAAMqB,iBAAiB,cAC5B8B,KAAKgI,WACH,MACAhI,KAAKnD,MAAMQ,WAAW6K,cAAgB,kBAAoB,aAE7D,oCAED,WACElI,KAAKnD,MAAMS,MAAMwK,MAAMC,YAAa,EACpC/H,KAAKnD,MAAMqB,iBAAiB,WAC5B8B,KAAKgI,WACH,MACAhI,KAAKnD,MAAMQ,WAAW8K,iBAAmB,eAAiB,UAE7D,gCAED,WACEnI,KAAKnD,MAAMqB,iBAAiB,UAC5B8B,KAAKgI,WAAW,SACjB,gCAED,WACEhI,KAAKnD,MAAMqB,iBAAiB,UAC5B8B,KAAKgI,WAAW,SACjB,8BAED,WACEhI,KAAKnD,MAAMS,MAAMwK,MAAMC,YAAa,EACpC/H,KAAKnD,MAAMqB,iBAAiB,QAC5B8B,KAAKgI,WAAW,OACjB,uBAED,WAAU,IAAD,OACC3K,EAAe2C,KAAKnD,MAApBQ,WACAD,EAAgB4C,KAAKjC,MAArBX,YAER,OAAKC,GAAcD,EAAoB,MAGrC,UAAC,KAAD,CAAM2D,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,8BAEF,SAAC,KAAD,CAAMD,MAAI,EAACC,GAAI,EAAf,UACE,UAAC+F,EAAD,CACEhH,QAAQ,YACRE,WAAS,EACTmB,UAAWlE,EAAW+K,YAAc/K,EAAW4K,eAC/C5G,QAAS,WACP,EAAKgH,mBACN,EACDjB,SAAoC,UAA1BpH,KAAKnD,MAAMY,WACrB0H,KAAK,SACLmD,MAAM,qBATR,mBAYE,SAAC,IAAD,CAAiBvB,GAAI,CAAEwB,WAAY,WAGvC,SAAC,KAAD,CAAMrH,MAAI,EAACC,GAAI,EAAf,UACE,UAAC+F,EAAD,CACEhH,QAAQ,YACRE,WAAS,EACTmB,UAAWlE,EAAWmL,WAAanL,EAAW6K,cAC9C7G,QAAS,WACP,EAAKoH,kBACN,EACDtD,KAAK,SACLmD,MAAM,qBACNlB,SAAoC,eAA1BpH,KAAKnD,MAAMY,WATvB,mBAYE,SAAC,IAAD,CAAiBsJ,GAAI,CAAEwB,WAAY,WAGvC,SAAC,KAAD,CAAMrH,MAAI,EAACC,GAAI,EAAf,UACE,UAAC+F,EAAD,CACEhH,QAAQ,YACRE,WAAS,EACTmB,UAAWlE,EAAWqL,cAAgBrL,EAAW8K,iBACjD9G,QAAS,WACP,EAAKsH,qBACN,EACDxD,KAAK,SACLmD,MAAM,mBACNlB,SAAoC,YAA1BpH,KAAKnD,MAAMY,WATvB,iBAYE,SAAC,IAAD,CAAiBsJ,GAAI,CAAEwB,WAAY,WAIvC,SAAC,KAAD,CAAMrH,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,yBAEF,SAAC,KAAD,CAAMD,MAAI,EAACC,GAAI,EAAf,UACE,UAAC+F,EAAD,CACEhH,QAAQ,YACRE,WAAS,EACTiB,QAAS,WACP,EAAKuH,eACN,EACDzD,KAAK,SACLmD,MAAM,kBACNlB,SAAoC,SAA1BpH,KAAKnD,MAAMY,WARvB,oBAWE,SAAC,EAAAoL,EAAD,CAAgB9B,GAAI,CAAEwB,WAAY,WAGtC,SAAC,KAAD,CAAMrH,MAAI,EAACC,GAAI,EAAf,UACE,UAAC+F,EAAD,CACEhH,QAAQ,YACRE,WAAS,EACTiB,QAAS,WACP,EAAKyH,iBACN,EACD3D,KAAK,SACLmD,MAAM,mBACNlB,SAAoC,WAA1BpH,KAAKnD,MAAMY,WARvB,oBAWE,SAAC,IAAD,CAAYsJ,GAAI,CAAEwB,WAAY,WAGlC,SAAC,KAAD,CAAMrH,MAAI,EAACC,GAAI,EAAf,UACE,UAAC+F,EAAD,CACEhH,QAAQ,YACRE,WAAS,EACTiB,QAAS,WACP,EAAK0H,iBACN,EACD5D,KAAK,SACLmD,MAAM,oBACNlB,SAAoC,WAA1BpH,KAAKnD,MAAMY,WARvB,sBAWE,SAAC,IAAD,CAAkBsJ,GAAI,CAAEwB,WAAY,YAK7C,OAzMGb,CAAgBsB,EAAAA,WA4MtB,W","sources":["plugins/Edit/EditView.js","plugins/Edit/components/AttributeEditor.js","plugins/Edit/components/Toolbar.js"],"sourcesContent":["import React from \"react\";\nimport Toolbar from \"./components/Toolbar\";\nimport AttributeEditor from \"./components/AttributeEditor\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport { Step, StepContent, StepLabel, Stepper } from \"@mui/material\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\n\nclass EditView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sources: props.model.getSources(),\n      editSource: undefined,\n      editFeature: undefined,\n      activeStep: 0,\n      activeTool: undefined,\n    };\n    this.bindSubscriptions();\n  }\n\n  bindSubscriptions = () => {\n    this.props.observer.subscribe(\"editFeature\", (feature) => {\n      this.props.observer.publish(\"feature-to-update-view\", feature);\n      this.setState({\n        editFeature: feature,\n        editSource: this.props.model.editSource,\n      });\n    });\n\n    this.props.observer.subscribe(\"resetView\", () => {\n      this.props.observer.publish(\"feature-to-update-view\", undefined);\n      this.setState({\n        editFeature: undefined,\n        editSource: undefined,\n        activeStep: 0,\n        activeTool: undefined,\n      });\n    });\n  };\n\n  handleVectorLoadingDone = (status) => {\n    this.setState({\n      loading: false,\n      loadingError: status === \"data-load-error\" ? true : false,\n      activeStep: status === \"data-load-error\" ? 0 : 1,\n    });\n  };\n\n  setLayer(serviceId) {\n    this.props.model.reset();\n    this.setState({\n      loading: true,\n    });\n    this.props.model.setLayer(serviceId, this.handleVectorLoadingDone);\n  }\n\n  handlePrev = () => {\n    const activeStep = this.state.activeStep - 1;\n    if (activeStep === 0) {\n      this.props.model.reset();\n      this.setState({\n        editFeature: undefined,\n        editSource: undefined,\n        activeStep: 0,\n        activeTool: undefined,\n      });\n    } else {\n      this.setState({ activeStep });\n    }\n  };\n\n  handleNext = () => {\n    const activeStep = this.state.activeStep + 1;\n    this.setState({ activeStep });\n  };\n\n  toggleActiveTool = (toolName) => {\n    let setTool = undefined;\n    if (toolName !== this.state.activeTool) {\n      setTool = toolName;\n    }\n    this.setState({\n      activeTool: setTool,\n    });\n  };\n\n  getStatusMessage = (data) => {\n    if (!data) {\n      return (\n        <Typography>\n          Uppdateringen lyckades men det upptäcktes inte några ändringar.\n        </Typography>\n      );\n    }\n    if (data.ExceptionReport) {\n      return (\n        <Typography>\n          Uppdateringen misslyckades:{\" \"}\n          {data.ExceptionReport.Exception.ExceptionText.toString()}\n        </Typography>\n      );\n    }\n    if (\n      data.TransactionResponse &&\n      data.TransactionResponse.TransactionSummary\n    ) {\n      return (\n        <div>\n          <Typography>Uppdateringen lyckades.</Typography>\n          <Typography>\n            Antal skapade objekt:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalInserted?.toString() ||\n              0}\n          </Typography>\n          <Typography>\n            Antal borttagna objekt:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalDeleted?.toString() ||\n              0}\n          </Typography>\n          <Typography>\n            Antal uppdaterade objekt:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalUpdated?.toString() ||\n              0}\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <Typography>\n          Status för uppdateringen kunde inte avläsas ur svaret från servern.\n        </Typography>\n      );\n    }\n  };\n\n  onSaveClicked = () => {\n    const { model, app } = this.props;\n    model.save((response) => {\n      if (\n        response &&\n        (response.ExceptionReport || !response.TransactionResponse)\n      ) {\n        this.props.observer.publish(\"editFeature\", model.editFeatureBackup);\n        app.globalObserver.publish(\n          \"core.alert\",\n          this.getStatusMessage(response)\n        );\n      } else {\n        model.filty = false;\n        model.refreshEditingLayer();\n        model.editFeatureBackup = undefined;\n        this.handleNext();\n        app.globalObserver.publish(\n          \"core.alert\",\n          this.getStatusMessage(response)\n        );\n        this.toggleActiveTool(undefined);\n        model.deactivateInteraction();\n      }\n    });\n  };\n\n  renderSources() {\n    const { loadingError, editSource } = this.state;\n    return (\n      <FormControl variant=\"standard\" error={loadingError} fullWidth>\n        <InputLabel variant=\"standard\" id=\"select-source-label\">\n          Datakälla\n        </InputLabel>\n        <Select\n          id=\"select-source\"\n          variant=\"standard\"\n          value={editSource?.id || \"\"}\n          onChange={(e) => {\n            this.setLayer(e.target.value);\n          }}\n        >\n          {this.state.sources.map((source, index) => {\n            return (\n              <MenuItem\n                key={index}\n                value={source.id}\n              >{`${source.caption}`}</MenuItem>\n            );\n          })}\n        </Select>\n        {loadingError && (\n          <FormHelperText>\n            Fel vid laddning av data. Kontakta systemadministratören.\n          </FormHelperText>\n        )}\n      </FormControl>\n    );\n  }\n\n  renderToolbar = () => {\n    return (\n      <Toolbar\n        ref=\"toolbar\"\n        editSource={this.state.editSource}\n        model={this.props.model}\n        observer={this.props.observer}\n        app={this.props.app}\n        activeTool={this.state.activeTool}\n        toggleActiveTool={(toolName) => this.toggleActiveTool(toolName)}\n      />\n    );\n  };\n\n  renderAttributeEditor = () => {\n    const { editSource } = this.state;\n    const { model, observer } = this.props;\n    return (\n      <AttributeEditor\n        ref=\"attributeEditor\"\n        editSource={editSource}\n        model={model}\n        observer={observer}\n        panel={this}\n      />\n    );\n  };\n\n  render() {\n    const { activeStep, editSource, editFeature, loading } = this.state;\n    return (\n      <>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          <Step key=\"1\">\n            <StepLabel>Välj datamängd att redigera</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  {loading ? <CircularProgress /> : this.renderSources()}\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n          <Step key=\"2\">\n            <StepLabel>\n              {activeStep === 1\n                ? `Redigerar ${editSource?.caption}`\n                : `Redigera`}\n            </StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  {this.renderAttributeEditor()}\n                  {this.renderToolbar()}\n                </Grid>\n                {!editFeature && (\n                  <>\n                    <Grid item xs={6}>\n                      <Button\n                        fullWidth\n                        onClick={this.handlePrev}\n                        variant=\"contained\"\n                      >\n                        Bakåt\n                      </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        endIcon={<SaveIcon></SaveIcon>}\n                        disabled={!editSource}\n                        color=\"primary\"\n                        onClick={this.onSaveClicked}\n                      >\n                        Spara\n                      </Button>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </StepContent>\n          </Step>\n          <Step key=\"3\">\n            <StepLabel>Klart!</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handlePrev}\n                  >\n                    Fortsätt redigera\n                  </Button>\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n        </Stepper>\n      </>\n    );\n  }\n}\nexport default EditView;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Input from \"@mui/material/Input\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { Button, FormHelperText } from \"@mui/material\";\nimport Chip from \"@mui/material/Chip\";\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n  textAlign: \"center\",\n  padding: theme.spacing(1),\n}));\n\nclass AttributeEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: undefined,\n      feature: undefined,\n    };\n    this.formErrors = {};\n    props.observer.subscribe(\"feature-to-update-view\", (feature) => {\n      this.setState({\n        formValues: this.initFormValues(feature),\n        feature: feature,\n      });\n    });\n    props.editSource?.editableFields?.forEach((field, i) => {\n      field.initialRender = true;\n    });\n\n    props.editSource?.nonEditableFields?.forEach((field, i) => {\n      field.initialRender = true;\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.observer.unsubscribe(\"feature-to-update-view\");\n  }\n\n  initFormValues = (feature) => {\n    const { editSource } = this.props;\n    if (!feature || !editSource) return;\n\n    const featureProps = feature.getProperties();\n    let valueMap = {};\n\n    editSource.editableFields.forEach((field) => {\n      if (featureProps[field.name] !== null) {\n        if (field.textType === \"flerval\" && featureProps[field.name] !== \"\") {\n          valueMap[field.name] = field.values.map((value) => {\n            return {\n              name: value,\n              checked:\n                typeof featureProps[field.name] === \"string\"\n                  ? featureProps[field.name]\n                      .split(\";\")\n                      .find((v) => v === value) !== undefined\n                  : false,\n            };\n          });\n        } else if (field.textType === \"boolean\") {\n          if (field.dataType === \"boolean\") {\n            valueMap[field.name] =\n              featureProps[field.name] || field.defaultValue === \"ja\" || false;\n          } else {\n            valueMap[field.name] =\n              featureProps[field.name] || field.defaultValue === 1 || 0;\n          }\n        } else {\n          //If the feature has field: \"\" it will be changed to the default value.\n          //Not sure if we want this behavior?\n          valueMap[field.name] =\n            featureProps[field.name] || field.defaultValue || \"\";\n        }\n      }\n    });\n    return valueMap;\n  };\n\n  updateFeature() {\n    const featureProps = this.props.model.editFeature.getProperties();\n    Object.keys(this.state.formValues).forEach((key) => {\n      let value = this.state.formValues[key];\n      if (value === \"\") value = null;\n      if (Array.isArray(value)) {\n        value = value\n          .filter((v) => v.checked)\n          .map((v) => v.name)\n          .join(\";\");\n      }\n      featureProps[key] = value;\n    });\n\n    this.props.editSource?.nonEditableFields?.forEach((field) => {\n      let value = field.defaultValue;\n      if (value === \"\") value = null;\n      if (Array.isArray(value)) {\n        value = value\n          .filter((v) => v.checked)\n          .map((v) => v.name)\n          .join(\";\");\n      }\n      let geomName = this.props.model.editFeature.getGeometryName();\n      if (!geomName) {\n        geomName = \"geom\";\n      }\n      if (field.name !== geomName) {\n        // should not overwrite the feature's geom\n        featureProps[field.name] = value;\n      }\n    });\n    this.props.model.editFeature.setProperties(featureProps);\n  }\n\n  checkInteger(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    if (/^\\d+$/.test(value) || value === \"\") {\n      formValues[name] = value;\n    } else {\n      if (!this.state.formValues[name]) {\n        formValues[name] = \"\";\n      }\n    }\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkBoolean(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    if (value === \"ja\") {\n      value = true;\n    } else if (value === \"nej\") {\n      value = false;\n    }\n\n    formValues[name] = value;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkNumber(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    if (/^\\d+([.,](\\d+)?)?$/.test(value) || value === \"\") {\n      value = value.replace(\",\", \".\");\n      formValues[name] = value;\n    } else {\n      if (!this.state.formValues[name]) {\n        formValues[name] = \"\";\n      }\n    }\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkUrl(name, value) {\n    let regex =\n      /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|\\/|\\?)*)?$/i;\n    let valid = regex.test(value);\n    let formValues = Object.assign({}, this.state.formValues);\n    if (valid || value === \"\") {\n      formValues[name] = value;\n      delete this.formErrors[name];\n    } else {\n      formValues[name] = \"\";\n      this.formErrors[name] =\n        \"Ange en giltig url. t.ex. https://www.example.com\";\n    }\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkText(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name] = value;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkSelect(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name] = value;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkMultiple(name, checked, value, index) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name][index].checked = checked;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkDate(name, date) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name] = date;\n    this.updateFeature();\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  setChanged() {\n    if (\n      this.props.model.editFeature.modification !== \"added\" &&\n      this.props.model.editFeature.modification !== \"removed\"\n    ) {\n      this.props.model.editFeature.modification = \"updated\";\n    }\n  }\n\n  getValueMarkup(field, editable) {\n    if (typeof field.alias === \"undefined\" || field.alias === \"\") {\n      field.alias = field.name;\n    }\n\n    // Add a default texttype if none is set\n    if (!field.textType || field.textType === \"\") {\n      if (field.dataType === \"int\" || field.dataType === \"integer\") {\n        field.textType = \"heltal\";\n      }\n\n      if (field.dataType === \"number\" || field.dataType === \"decimal\") {\n        field.textType = \"nummer\";\n      }\n\n      if (field.dataType === \"date\") {\n        field.textType = \"datum\";\n      }\n\n      if (field.dataType === \"date-time\" || field.dataType === \"dateTime\") {\n        field.textType = \"date-time\";\n      }\n\n      if (field.dataType === \"boolean\") {\n        field.textType = \"boolean\";\n      }\n    }\n    let value = this.state.formValues[field.name];\n\n    if (value === undefined || value === null) {\n      value = \"\";\n    }\n\n    if (value === \"\" && field.initialRender) {\n      if (field.defaultValue !== null) {\n        value = field.defaultValue;\n      }\n    }\n\n    switch (field.textType) {\n      case \"heltal\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.alias}\n            fullWidth={true}\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkInteger(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n          />\n        );\n      case \"nummer\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.alias}\n            fullWidth={true}\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkNumber(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n          />\n        );\n      case \"datum\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.alias}\n            fullWidth={true}\n            margin=\"normal\"\n            type=\"date\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkDate(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        );\n      case \"date-time\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.name}\n            fullWidth={true}\n            margin=\"normal\"\n            type=\"datetime-local\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkDate(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        );\n      case \"url\":\n        return (\n          <>\n            <TextField\n              id={field.id}\n              label={field.alias}\n              size=\"small\"\n              fullWidth={true}\n              margin=\"normal\"\n              variant=\"outlined\"\n              disabled={!editable}\n              error={this.formErrors.hasOwnProperty(field.name)}\n              helperText={\n                this.formErrors[field.name]?.length >= 0\n                  ? this.formErrors[field.name]\n                  : field.description\n              }\n              value={value}\n              onChange={(e) => {\n                this.setChanged();\n                this.checkText(field.name, e.target.value);\n                field.initialRender = false;\n              }}\n              onBlur={(e) => {\n                this.setChanged();\n                if (field.textType === \"url\") {\n                  this.checkUrl(field.name, e.target.value);\n                }\n                field.initialRender = false;\n              }}\n            />\n          </>\n        );\n      case \"fritext\":\n        return (\n          <>\n            <TextField\n              id={field.id}\n              label={field.alias}\n              size=\"small\"\n              fullWidth={true}\n              margin=\"normal\"\n              variant=\"outlined\"\n              disabled={!editable}\n              multiline\n              error={this.formErrors.hasOwnProperty(field.name)}\n              helperText={\n                this.formErrors[field.name]?.length >= 0\n                  ? this.formErrors[field.name]\n                  : field.description\n              }\n              value={value}\n              onChange={(e) => {\n                this.setChanged();\n                this.checkText(field.name, e.target.value);\n                field.initialRender = false;\n              }}\n              onBlur={(e) => {\n                this.setChanged();\n                if (field.textType === \"url\") {\n                  this.checkUrl(field.name, e.target.value);\n                }\n                field.initialRender = false;\n              }}\n            />\n          </>\n        );\n      case \"flerval\":\n        let defaultValues = [];\n        if (typeof field.defaultValue === \"string\") {\n          defaultValues = field.defaultValue.split(\",\");\n        }\n        if (field.initialRender) {\n          defaultValues.forEach((defaultValue) => {\n            value.forEach((val) => {\n              if (defaultValue === val.name) {\n                val.checked = true;\n              }\n            });\n          });\n        }\n\n        let checkboxes = field.values.map((val, i) => {\n          let id = field.name + i,\n            item = value.find((item) => item.name === val) || {\n              checked: false,\n            };\n\n          return (\n            <FormControlLabel\n              key={id}\n              control={\n                <Checkbox\n                  checked={item.checked}\n                  disabled={!editable}\n                  color=\"primary\"\n                  onChange={(e) => {\n                    this.setChanged();\n                    this.checkMultiple(field.name, e.target.checked, val, i);\n                    field.initialRender = false;\n                  }}\n                />\n              }\n              label={val}\n            />\n          );\n        });\n        return (\n          <>\n            <FormControl fullWidth margin=\"normal\" component=\"fieldset\">\n              <FormLabel component=\"legend\">{field.alias}</FormLabel>\n              <FormGroup>{checkboxes}</FormGroup>\n              <FormHelperText\n                style={{ marginTop: \"0px\", marginBottom: \"10px\" }}\n              ></FormHelperText>\n            </FormControl>\n            <br />\n          </>\n        );\n      case \"lista\":\n        let options = null;\n        if (Array.isArray(field.values)) {\n          options = field.values.map((val, i) => (\n            <option key={i} value={val}>\n              {val}\n            </option>\n          ));\n        }\n        return (\n          <>\n            <FormControl fullWidth={true} component=\"fieldset\">\n              <FormLabel component=\"legend\">{field.alias}</FormLabel>\n              <NativeSelect\n                value={value}\n                variant=\"outlined\"\n                disabled={!editable}\n                input={<Input name={field.name} id={field.name} />}\n                onChange={(e) => {\n                  this.setChanged();\n                  this.checkSelect(field.name, e.target.value);\n                  field.initialRender = false;\n                }}\n              >\n                <option value=\"\">-Välj värde-</option>\n                {options}\n              </NativeSelect>\n              <FormHelperText>{field.description}</FormHelperText>\n            </FormControl>\n          </>\n        );\n      case \"boolean\":\n        return (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={\n                  (field.dataType === \"boolean\" && field.value === \"ja\") ||\n                  (field.dataType === \"int\" && field.value === 1)\n                }\n                color=\"primary\"\n                disabled={!editable}\n                onChange={(e) => {\n                  this.setChanged();\n                  if (e.target.checked) {\n                    if (field.dataType === \"boolean\") {\n                      field.value = \"ja\";\n                    } else {\n                      field.value = 1;\n                    }\n                  } else {\n                    if (field.dataType === \"boolean\") {\n                      field.value = \"nej\";\n                    } else {\n                      field.value = 0;\n                    }\n                  }\n                  field.initialRender = false;\n                  this.checkBoolean(field.name, field.value);\n                  this.forceUpdate();\n                }}\n              />\n            }\n            label={field.name}\n          />\n        );\n      case null:\n        return <span>{value}</span>;\n      default:\n        return <span>{value}</span>;\n    }\n  }\n\n  render() {\n    const { formValues } = this.state;\n    const { model } = this.props;\n\n    if (!formValues || this.props.editSource === undefined) return null;\n\n    const markup = this.props.editSource?.editableFields?.map((field, i) => {\n      const valueMarkup = this.getValueMarkup(field, true);\n      return (\n        <Grid item xs={12} key={i} ref={field.name}>\n          {valueMarkup}\n        </Grid>\n      );\n    });\n\n    const markupNonEdit = this.props.editSource?.nonEditableFields\n      ?.filter((item) => item.hidden === false)\n      .map((field, i) => {\n        const valueMarkup = this.getValueMarkup(field, false);\n        return (\n          <Grid item xs={12} key={i} ref={field.name}>\n            {valueMarkup}\n          </Grid>\n        );\n      });\n\n    return (\n      <>\n        <StyledGrid item xs={12}>\n          <Chip\n            variant=\"outlined\"\n            color=\"primary\"\n            label=\"Ange objektets attribut:\"\n          />\n        </StyledGrid>\n        <StyledGrid item xs={12}>\n          <p>Editerbara fält:</p>\n          {markup}\n          {markupNonEdit?.length > 2 ? \"Icke-editerbara fält:\" : \"\"}\n          {markupNonEdit}\n        </StyledGrid>\n        <StyledGrid item xs={12}>\n          <Button\n            color=\"primary\"\n            sx={{ width: \"100px\" }}\n            variant=\"contained\"\n            onClick={model.resetEditFeature}\n          >\n            OK\n          </Button>\n        </StyledGrid>\n      </>\n    );\n  }\n}\n\nexport default AttributeEditor;\n","import React, { Component } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ScatterPlotIcon from \"@mui/icons-material/ScatterPlot\";\nimport BorderStyleIcon from \"@mui/icons-material/BorderStyle\";\nimport LinearScaleIcon from \"@mui/icons-material/LinearScale\";\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\nimport FormatShapesIcon from \"@mui/icons-material/FormatShapes\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nconst StyledButton = styled(Button)(({ selected, theme }) => ({\n  borderTop: `${theme.spacing(0.5)} solid transparent`,\n  borderBottom: selected\n    ? `${theme.spacing(0.5)} solid ${theme.palette.secondary.main}`\n    : `${theme.spacing(0.5)} solid transparent`,\n}));\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editFeature: undefined,\n    };\n\n    this.props.observer.subscribe(\"feature-to-update-view\", (feature) => {\n      this.setState({\n        editFeature: feature,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.observer.unsubscribe(\"feature-to-update-view\");\n  }\n\n  changeTool(type, geometryType) {\n    const { model, activeTool } = this.props;\n    if (geometryType && activeTool === geometryType.toLowerCase()) {\n      model.deactivateInteraction();\n      return;\n    }\n    if (activeTool === type) {\n      model.deactivateInteraction();\n      return;\n    }\n    model.deactivateInteraction();\n\n    switch (type) {\n      case \"add\":\n        model.activateInteraction(\"add\", geometryType);\n        break;\n      case \"remove\":\n        model.activateInteraction(\"remove\");\n        break;\n      case \"modify\":\n        model.activateInteraction(\"modify\");\n        break;\n      case \"move\":\n        model.activateInteraction(\"move\");\n        break;\n      default:\n        break;\n    }\n  }\n\n  onAddPointClicked() {\n    this.props.model.layer.dragLocked = true;\n    this.props.toggleActiveTool(\"point\");\n    this.changeTool(\n      \"add\",\n      this.props.editSource.editMultiPoint ? \"MultiPoint\" : \"Point\"\n    );\n  }\n\n  onAddLineClicked() {\n    this.props.model.layer.dragLocked = true;\n    this.props.toggleActiveTool(\"linestring\");\n    this.changeTool(\n      \"add\",\n      this.props.editSource.editMultiLine ? \"MultiLineString\" : \"LineString\"\n    );\n  }\n\n  onAddPolygonClicked() {\n    this.props.model.layer.dragLocked = true;\n    this.props.toggleActiveTool(\"polygon\");\n    this.changeTool(\n      \"add\",\n      this.props.editSource.editMultiPolygon ? \"MultiPolygon\" : \"Polygon\"\n    );\n  }\n\n  onRemoveClicked() {\n    this.props.toggleActiveTool(\"remove\");\n    this.changeTool(\"remove\");\n  }\n\n  onModifyClicked() {\n    this.props.toggleActiveTool(\"modify\");\n    this.changeTool(\"modify\");\n  }\n\n  onMoveClicked() {\n    this.props.model.layer.dragLocked = false;\n    this.props.toggleActiveTool(\"move\");\n    this.changeTool(\"move\");\n  }\n\n  render() {\n    const { editSource } = this.props;\n    const { editFeature } = this.state;\n\n    if (!editSource || editFeature) return null;\n\n    return (\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography>Lägg till</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            disabled={!editSource.editPoint && !editSource.editMultiPoint}\n            onClick={() => {\n              this.onAddPointClicked();\n            }}\n            selected={this.props.activeTool === \"point\"}\n            type=\"button\"\n            title=\"Lägg till punkt\"\n          >\n            Punkt\n            <ScatterPlotIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            disabled={!editSource.editLine && !editSource.editMultiLine}\n            onClick={() => {\n              this.onAddLineClicked();\n            }}\n            type=\"button\"\n            title=\"Lägg till linje\"\n            selected={this.props.activeTool === \"linestring\"}\n          >\n            Linje\n            <LinearScaleIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            disabled={!editSource.editPolygon && !editSource.editMultiPolygon}\n            onClick={() => {\n              this.onAddPolygonClicked();\n            }}\n            type=\"button\"\n            title=\"Lägg till yta\"\n            selected={this.props.activeTool === \"polygon\"}\n          >\n            Yta\n            <BorderStyleIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography>Editera</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              this.onMoveClicked();\n            }}\n            type=\"button\"\n            title=\"Flytta geometri\"\n            selected={this.props.activeTool === \"move\"}\n          >\n            Flytta\n            <ZoomOutMapIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              this.onRemoveClicked();\n            }}\n            type=\"button\"\n            title=\"Ta bort geometri\"\n            selected={this.props.activeTool === \"remove\"}\n          >\n            Radera\n            <DeleteIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              this.onModifyClicked();\n            }}\n            type=\"button\"\n            title=\"Ändra geometri\"\n            selected={this.props.activeTool === \"modify\"}\n          >\n            Ändra\n            <FormatShapesIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Toolbar;\n"],"names":["EditView","props","bindSubscriptions","observer","subscribe","feature","publish","setState","editFeature","editSource","model","undefined","activeStep","activeTool","handleVectorLoadingDone","status","loading","loadingError","handlePrev","state","reset","handleNext","toggleActiveTool","toolName","setTool","getStatusMessage","data","ExceptionReport","Exception","ExceptionText","toString","TransactionResponse","TransactionSummary","totalInserted","totalDeleted","totalUpdated","onSaveClicked","app","save","response","filty","refreshEditingLayer","editFeatureBackup","globalObserver","deactivateInteraction","renderToolbar","ref","renderAttributeEditor","panel","sources","getSources","serviceId","this","setLayer","variant","error","fullWidth","id","value","onChange","e","target","map","source","index","caption","orientation","container","spacing","direction","item","xs","renderSources","onClick","endIcon","disabled","color","React","StyledGrid","styled","Grid","textAlign","padding","theme","AttributeEditor","initFormValues","featureProps","getProperties","valueMap","editableFields","forEach","field","name","textType","values","checked","split","find","v","dataType","defaultValue","formValues","formErrors","i","initialRender","nonEditableFields","unsubscribe","Object","keys","key","Array","isArray","filter","join","geomName","getGeometryName","setProperties","assign","test","updateFeature","replace","valid","date","modification","editable","alias","label","margin","hasOwnProperty","helperText","length","description","setChanged","checkInteger","checkNumber","type","checkDate","InputLabelProps","shrink","size","checkText","onBlur","checkUrl","multiline","defaultValues","val","checkboxes","control","checkMultiple","component","style","marginTop","marginBottom","options","input","checkSelect","checkBoolean","forceUpdate","markup","valueMarkup","getValueMarkup","markupNonEdit","hidden","sx","width","resetEditFeature","StyledButton","Button","selected","borderTop","borderBottom","palette","secondary","main","Toolbar","geometryType","toLowerCase","activateInteraction","layer","dragLocked","changeTool","editMultiPoint","editMultiLine","editMultiPolygon","editPoint","onAddPointClicked","title","marginLeft","editLine","onAddLineClicked","editPolygon","onAddPolygonClicked","onMoveClicked","Z","onRemoveClicked","onModifyClicked","Component"],"sourceRoot":""}