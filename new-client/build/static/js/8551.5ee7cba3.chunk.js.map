{"version":3,"file":"static/js/8551.5ee7cba3.chunk.js","mappings":"oQAUMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAgB,gBAAGE,EAAH,EAAGA,MAAH,eACjCC,aAAcD,EAAME,QAAQ,GAC5BC,MAAO,SACNH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,UAAW,OACXC,aAAc,iBACdC,aAAc,EACdC,OAAQ,EACRN,MAAO,OACPO,eAAgB,QATe,IAa7BC,GAAeb,EAAAA,EAAAA,IAAOc,EAAAA,EAAPd,EAAe,kBAAgB,CAClDe,WADkC,EAAGb,MACnBc,QAAQC,KAAKC,QADG,IAI9BC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACI,OADJA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,MAAM,EACNJ,KAAM,IAFA,EA+BP,OA/BO,8BAiBR,WACE,MAA2CK,KAAKC,MAAxCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,MAEjC,OACE,SAAC5B,EAAD,CAAY2B,QAASA,EAArB,UACE,SAAC,IAAD,WACE,SAAC,IAAD,CACEE,QAAQ,SAACf,EAAD,UAAeY,IACvBE,MAAOA,EACPE,UAAWL,OAKpB,OAhCGL,CAAaW,EAAAA,eAAbX,EAaGY,aAAe,CACpBP,SAAU,qBACVG,MAAO,gBAoBX,W,kNCrDMK,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAUJ,WAAYT,GAAQ,IAAD,mBACjB,cAAMA,IA+ERU,kBAAoB,SAACC,GACnB,EAAKC,WAAW,CACdC,wBAAwB,EACxBC,aAAa,IAEf,EAAKd,MAAMe,IAAIC,eAAeC,QAAQ,8BACvC,EAtFkB,EAwFnBL,WAAa,SAACM,GACZ,IAAML,EAAyBK,EAAKL,yBAA0B,EAC5DC,EAAcI,EAAKJ,cAAe,EAapC,GAVA,EAAKd,MAAMe,IAAII,WAAa,EAAKC,KAGjC,EAAKpB,MAAMe,IAAIC,eAAeC,QAAQ,uBAAwB,CAC5DI,UAAW,cACXC,WAAY,EAAKF,KACjBG,UAAW,EAAKvB,MAAMe,IAAIS,OAAOD,aAIF,IAA7B,EAAK1B,MAAM4B,cACb,OAAO,MAGkB,IAA3BZ,GAAmC,EAAKb,MAAMe,IAAIW,cAAf,WAEnC,EAAKC,SACH,CACEF,eAAe,IAEjB,YAEkB,IAAhBX,GAC4C,oBAAnC,EAAKd,MAAM4B,OAAOC,cACzB,EAAK7B,MAAM4B,OAAOC,cACrB,GAEJ,EAxHkB,EA0HnBC,YAAc,WAGR,EAAKV,OAAS,EAAKpB,MAAMe,IAAII,aAC/B,EAAKnB,MAAMe,IAAII,gBAAaY,GAE9B,EAAKJ,SACH,CACEF,eAAe,IAEjB,WAC4C,oBAAnC,EAAKzB,MAAM4B,OAAOI,cACvB,EAAKhC,MAAM4B,OAAOI,cACrB,GAEJ,EAtIC,EAAKZ,KAAOpB,EAAMoB,KAAKa,oBAAiBF,EAGxC,EAAKG,YAAclC,EAAMmC,QAAQD,aAAelC,EAAM4B,OAAOM,YAG7D,IAAME,GAC2C,IAA9C,EAAKpC,MAAMe,IAAIS,OAAOa,UAAUC,IAAIC,QAClCC,EAAAA,SACGxC,EAAMmC,QAAQM,qBACdzC,EAAMmC,QAAQC,kBACpB,EAKEA,GACF,EAAKpC,MAAMe,IAAIC,eAAeC,QAAQ,uBAAwB,CAC5DI,UAAW,cACXC,WAAY,EAAKF,KACjBG,UAAW,EAAKvB,MAAMe,IAAIS,OAAOD,YAMrC,EAAK1B,MAAQ,CACXO,MAAOJ,EAAMmC,QAAQ/B,OAASJ,EAAM4B,OAAOxB,OAAS,iBACpDsC,MAAO1C,EAAMmC,QAAQO,OAAS1C,EAAM4B,OAAOc,OAAS,KACpDjB,cAAeW,GAMjB,EAAKhC,MAAQJ,EAAMmC,QAAQ/B,OAASJ,EAAM4B,OAAOxB,OAAS,iBAG1D,EAAKtB,MAAQkB,EAAMmC,QAAQrD,OAASkB,EAAM4B,OAAO9C,OAAS,IAC1D,EAAK6D,OAAS3C,EAAMmC,QAAQQ,QAAU3C,EAAM4B,OAAOe,QAAU,OAC7D,EAAKC,SAAW5C,EAAMmC,QAAQS,UAAY5C,EAAM4B,OAAOgB,UAAY,OAGnE5C,EAAMe,IAAI8B,sBAAV,WAIA,IAAMxB,EAAS,UAAM,EAAKD,KAAX,eAGfpB,EAAMe,IAAIC,eAAe8B,UAAUzB,GAAW,SAACH,GAC7C,EAAKN,WAAWM,EACjB,IAGD,IAAM6B,EAAc,UAAM,EAAK3B,KAAX,gBA1DH,OA4DjBpB,EAAMe,IAAIC,eAAe8B,UAAUC,GAAgB,WACjD,EAAKjB,aACN,IA9DgB,CA+DlB,CAmMA,O,0CAhMD,SAAmBkB,GAGjBA,EAAUpB,OAAOxB,QAAUL,KAAKC,MAAM4B,OAAOxB,OAC3CL,KAAK4B,SAAS,CAAEvB,MAAOL,KAAKC,MAAM4B,OAAOxB,QAE3C4C,EAAUpB,OAAOc,QAAU3C,KAAKC,MAAM4B,OAAOc,OAC3C3C,KAAK4B,SAAS,CAAEe,MAAO3C,KAAKC,MAAM4B,OAAOc,OAC5C,+BAED,SAAeO,GACb,MAAO,CAAC,OAAQ,SAASC,SAASD,EACnC,6BAmED,SAAarB,GACX,IAAQqB,EAAWlD,KAAKC,MAAMmC,QAAtBc,OAIR,MAAiC,oBAA1B,OAAOrB,QAAP,IAAOA,OAAP,EAAOA,EAAQuB,QACpBvB,EAAOuB,UAKP,iCACE,SAAC,UAAD,CACEnC,eAAgBjB,KAAKC,MAAMe,IAAIC,eAC/BZ,MAAOL,KAAKF,MAAMO,MAClBsC,MAAO3C,KAAKF,MAAM6C,MAClBU,QAASrD,KAAK+B,YACdhC,KAAMC,KAAKF,MAAM4B,cACjB4B,SAAUtD,KAAKC,MAAM4B,OAAOyB,SAC5BC,WAAYvD,KAAKC,MAAM4B,OAAO0B,WAC9BC,WAAYxD,KAAKC,MAAM4B,OAAO2B,WAC9BC,gBAAiBzD,KAAKC,MAAM4B,OAAO4B,gBACnCC,yBAA0B1D,KAAKC,MAAM4B,OAAO6B,yBAC5CC,gBAAiB3D,KAAKC,MAAM4B,OAAO8B,gBACnCC,WAAY5D,KAAKC,MAAM4B,OAAO+B,WAC9BC,qBAAsB7D,KAAKC,MAAM4B,OAAOgC,qBACxCC,eAAgB9D,KAAKC,MAAM4B,OAAOiC,eAClC/E,MAAOiB,KAAKjB,MACZ6D,OAAQ5C,KAAK4C,OACbC,SAAU7C,KAAK6C,SACfkB,KAAK,SACLC,oBAAqBhE,KAAKC,MAAMe,IAAIS,OAAOa,UAAU2B,MAAMC,MACzD,SAACC,GAAD,MAAkB,kBAAXA,EAAE9C,IAAT,IApBJ,SA2BGb,EAAAA,aAAmBR,KAAKC,MAAMmE,SAAU,CACvC1C,cAAe1B,KAAKF,MAAM4B,mBAIjB,YAAXwB,GAAwBlD,KAAKqE,eAAenB,KAC5ClD,KAAKsE,qBAENtE,KAAKqE,eAAenB,IACnBlD,KAAKuE,mBAAL,UAA2BrB,EAA3B,YAEU,YAAXA,GAAwBlD,KAAKwE,wBAGnC,GASH,gCACE,WACE,OAAOC,EAAAA,EAAAA,eACL,SAAC,IAAD,CAAQC,KAAM1E,KAAKqE,eAAerE,KAAKC,MAAMmC,QAAQc,QAArD,UACE,UAAC,KAAD,CACEyB,QAAM,EACNC,SAAS,EACTC,SAAU7E,KAAKF,MAAM4B,cACrBtB,QAASJ,KAAKW,kBAJhB,WAME,SAAC,IAAD,UAAeX,KAAKC,MAAM4B,OAAO1B,QACjC,SAAC,IAAD,CAAcP,QAASI,KAAKK,aAGhCyE,SAASC,eAAe,kBAE3B,mCAED,SAAmBC,GACjB,OAAOP,EAAAA,EAAAA,eAEL,SAAC,IAAD,CAAQQ,QAAM,EAAd,UACE,SAAC,UAAD,CACE9E,KAAMH,KAAKC,MAAM4B,OAAO1B,KACxBC,QAASJ,KAAKW,kBACdN,MAAOL,KAAKK,MACZH,SAAUF,KAAKmC,gBAGnB2C,SAASC,eAAeC,GAE3B,oCAED,WACE,OAAOP,EAAAA,EAAAA,eACL,SAAC,UAAD,CACEtE,KAAMH,KAAKC,MAAM4B,OAAO1B,KACxBC,QAASJ,KAAKW,kBACdN,MAAOL,KAAKK,MACZH,SAAUF,KAAKmC,cAEjB2C,SAASC,eAAe,0BAE3B,uBAED,WAEE,OACgD,IAA9C/E,KAAKC,MAAMe,IAAIS,OAAOa,UAAUC,IAAIC,OACpCxC,KAAKkF,aAAalF,KAAKC,MAAM4B,OAEhC,OA5QGnB,CAAyBF,EAAAA,eA+Q/B,W,+KC7QM2E,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAOJ,WAAYlF,GAAQ,IAAD,yBACjB,cAAMA,IAYR6B,aAAe,WACb,EAAKsD,cAAclE,QAAQ,mBAC5B,EAfkB,EAiBnBe,aAAe,WACb,EAAKmD,cAAclE,QAAQ,mBAC5B,EAhBC,EAAKkE,cAAgBC,MAErB,EAAKC,YAAc,IAAIC,EAAAA,QAAY,CACjChD,IAAKtC,EAAMsC,IACXvB,IAAKf,EAAMe,IACXoE,cAAe,EAAKA,cACpBhD,QAASnC,EAAMmC,UATA,CAWlB,CA0CA,OA1CA,8BAUD,WACE,OACE,SAAC,WAAD,kBACMpC,KAAKC,OADX,IAEEoB,KAAK,SACLQ,OAAQ,CACN1B,MAAM,SAAC,IAAD,IACNE,MAAO,YACP8B,YAAa,qCACbS,OAAQ,UACR7D,MAAO,IACP+C,aAAc9B,KAAK8B,aACnBG,aAAcjC,KAAKiC,cAVvB,UAwBE,SAAC,UAAD,CACEuD,MAAOxF,KAAKsF,YACZF,cAAepF,KAAKoF,kBAI3B,OA5DGD,CAAe3E,EAAAA,eA+DrB,W,uQCzDIiF,EAAQ,SAAUC,GACpB,MAAI,KAAKC,KAAKD,GAAaA,EAEzB,IACAA,EACGE,MAAM,gBACNC,OAAO,EAAG,GACVtD,KAAI,SAACuD,GACJ,IAAIC,EAAIC,SAASF,EAAG,IAAIG,SAAS,IAIjC,OAHID,SAASF,GAAK,KAChBC,EAAI,IAAMA,GAELA,CACR,IACAG,KAAK,GAEX,EAMKX,EAAAA,WACJ,WAAYY,IAAW,eACrBnG,KAAKuC,IAAM4D,EAAS5D,IACpBvC,KAAKgB,IAAMmF,EAASnF,IACpBhB,KAAKoF,cAAgBe,EAASf,cAC9BpF,KAAKoG,UAAYD,EAAS/D,QAAQgE,UAClCpG,KAAKqG,OAASrG,KAAKsG,eAAeH,EAAS/D,QAAQiE,QACnDrG,KAAKuG,UAAY,uCACjBvG,KAAKwG,WAAY,EACjBxG,KAAKyG,YAAc,GACnBzG,KAAK0G,iBACN,CAggBA,OAhgBA,sCAED,SAAeC,GACb,MAAgB,iBAALA,GAAiB,kBAAkBhB,KAAKgB,GAC1CA,EAAEC,MAAM,KAAKrE,KAAI,SAACoE,GAAD,OAAOE,OAAOF,EAAd,IAEjB,CAAC,IAAK,IAAK,IAAM,KAAM,IAAM,IAAO,KAAO,IAAO,IAAQ,KAEpE,gCAED,WACE3G,KAAK8G,aAAe,IAAIC,EAAAA,EAAO,CAC7BC,OAAQ,IAAIC,EAAAA,EACZC,UAAW,SACXC,OAAQ,IACRC,KAAM,eACNC,QAAS,gBACTC,MAAO,IAAIC,EAAAA,GAAM,CACfC,OAAQ,IAAIC,EAAAA,EAAO,CACjB9E,MAAO,qBACP5D,MAAO,IAET2I,KAAM,IAAIC,EAAAA,EAAK,CACbhF,MAAO,gCAIb3C,KAAKuC,IAAIqF,SAAS5H,KAAK8G,aACxB,8BAED,WACE9G,KAAK6H,oBAAiB7F,EACtBhC,KAAK8G,aAAagB,YAAYC,QAC9B/H,KAAKuC,IAAIyF,kBAAkBhI,KAAKiI,UACjC,kCAED,WACE,OAAOjI,KAAK6H,cACb,iCAED,WACE,IAAIK,EAASlI,KAAKmI,oBAAoBC,cAAcC,YACpD,OAAOC,EAAAA,EAAAA,WAAUJ,EAClB,2BAED,SAAWK,EAAOC,EAAOC,GACvB,IAAIC,EAAM,KAAO,IAGfC,EAAOH,EAAMzJ,MAAQ2J,EAFf,MAE4BH,EAAS,EADtC,EAELK,EAAOJ,EAAM5F,OAAS8F,EAHhB,MAG6BH,EAAS,EAFvC,EAGLM,EAAS,CACP,CACE,CAACJ,EAAO,GAAKE,EAAGF,EAAO,GAAKG,GAC5B,CAACH,EAAO,GAAKE,EAAGF,EAAO,GAAKG,GAC5B,CAACH,EAAO,GAAKE,EAAGF,EAAO,GAAKG,GAC5B,CAACH,EAAO,GAAKE,EAAGF,EAAO,GAAKG,GAC5B,CAACH,EAAO,GAAKE,EAAGF,EAAO,GAAKG,KAGhCE,EAAU,IAAIC,EAAAA,EAAQ,CACpBC,SAAU,IAAIC,EAAAA,GAAQJ,KAG1B7I,KAAKkJ,gBACLlJ,KAAK6H,eAAiBiB,EACtB9I,KAAK8G,aAAagB,YAAYqB,WAAWL,GACzC9I,KAAKiI,UAAY,IAAImB,EAAAA,EAAU,CAC7BC,SAAU,IAAIC,EAAAA,EAAW,CAACR,MAE5B9I,KAAKuC,IAAIgH,eAAevJ,KAAKiI,UAC9B,wBAED,WAAW,IAAD,OAWR,OAAOjI,KAAKuC,IACTiH,YACAC,WACAC,QATgB,SAACC,GAAD,OAChBA,aAAiBC,EAAAA,GAAQD,aAAiBE,EAAAA,KAC1CF,EAAM7B,sBAAuBgC,EAAAA,GAC5BH,EAAM7B,sBAAuBiC,EAAAA,IAC/BJ,EAAMK,YAJW,IAUhBzH,KAAI,SAACoH,EAAO7D,GAEX,IAAMmE,EAC4C,kBAAzCN,EAAM7B,YAAYoC,YAAYC,OACjCR,EAAM7B,YAAYoC,YAAYC,OAAOvD,MAAM,KAC3C+C,EAAM7B,YAAYoC,YAAYC,OACpC,MAAO,CACLC,IAAKT,EAAM7B,YAAYuC,IAAI,OAC3BJ,OAAQA,EACR9C,OAAQrB,EACRwE,gBAAiB,KACjBC,mBAAoB,EAAKhI,IACtBiI,UACAC,gBACAC,UACA9D,MAAM,KAAK,GAEjB,GACJ,2BAED,WACE,SAAS+D,EAAeC,GACtB,IAAIC,EAAMD,EAAE3E,SAAS,IACrB,OAAsB,IAAf4E,EAAIC,OAAe,IAAMD,EAAMA,CACvC,CAED,SAASE,EAASC,GAChB,IAAMC,EAAU,4CAA4CC,KAC1DF,GAEF,GAAgB,OAAZC,EAAkB,CACpB,IAAIE,EAAInF,SAASiF,EAAQ,IACrBG,EAAIpF,SAASiF,EAAQ,IACrBI,EAAIrF,SAASiF,EAAQ,IAEzB,OADQjF,SAASiF,EAAQ,IAErB,KACA,IAAMN,EAAeQ,GAAKR,EAAeS,GAAKT,EAAeU,EAClE,CACC,OAAO,IAEV,CAED,SAASC,EAAShE,GAChB,SAASiE,EAAaC,GACpB,IAAIC,EAAcD,EAAQtF,KAAK,MAE/B,OADU6E,EAAS,QAAD,OAASU,EAAT,KAEnB,CAED,IAAKnE,EAAO,OAAO,KAEfoE,MAAMC,QAAQrE,KACK,IAAjBA,EAAMwD,SACRxD,EAAQA,EAAM,IAEK,IAAjBA,EAAMwD,SACRxD,EAAQA,EAAM,KAIlB,IApKoB5B,EAoKhBkG,EAAY,UACdC,EAAc,GACdC,EAAc,UAEdC,EAAc,EACdC,EAAgB,QAChBC,EAAkB,QAClBC,EAAc,GACdC,EAAiB,UACjBC,EAAW,GAIXC,EAAW,KACXC,EAAY,UACZC,EAAgB,UAuFlB,OApFEjF,EAAMkF,SACNlF,EAAMkF,WACNlF,EAAMkF,UAAUC,SAChBnF,EAAMkF,UAAUC,YAEhBJ,EAAW/E,EAAMkF,UAAUC,UAAU7G,MAAM,OAAO,IAIlD0B,EAAMkF,SACNlF,EAAMkF,WACNlF,EAAMkF,UAAUE,SAChBpF,EAAMkF,UAAUE,YAEoC,kBAAzCpF,EAAMkF,UAAUE,UAAUC,WACnCL,EAAYhF,EAAMkF,UAAUE,UAAUC,WAC7BjB,MAAMC,QAAQrE,EAAMkF,UAAUE,UAAUC,cACjDL,EAAYf,EAAajE,EAAMkF,UAAUE,UAAUC,cAKrDrF,EAAMkF,SACNlF,EAAMkF,WACNlF,EAAMkF,UAAUI,WAChBtF,EAAMkF,UAAUI,cAEoC,kBAAzCtF,EAAMkF,UAAUE,UAAUC,WACnCJ,EAAgBjF,EAAMkF,UAAUI,YAAYD,WACnCjB,MAAMC,QAAQrE,EAAMkF,UAAUI,YAAYD,cACnDJ,EAAgBhB,EAAajE,EAAMkF,UAAUI,YAAYD,cAIzDL,GAAa,OAAO3G,KAAK2G,KAC3BA,EAAYvB,EAASuB,IAGnBC,IAEAA,EADE,SAAS5G,KAAK4G,GACAxB,EAASwB,GAET,MAIhBjF,EAAMoF,SAAWpF,EAAMoF,WAAapF,EAAMoF,UAAUC,aAClDlH,EAAM6B,EAAMoF,UAAUC,aACxBf,EAAYnG,EAAM6B,EAAMoF,UAAUC,YAtOlBjH,EAuOQ4B,EAAMoF,UAAUC,WAAxCd,EAtODgB,WAAWnH,EAAIE,MAAM,gBAAgBC,OAAO,EAAG,GAAG,KAuOxC6F,MAAMC,QAAQrE,EAAMoF,UAAUC,cACvCf,EAAYL,EAAajE,EAAMoF,UAAUC,YACzCd,EAAcvE,EAAMoF,UAAUC,WAC5BrF,EAAMoF,UAAUC,WAAW7B,OAAS,KAKtCxD,EAAMoF,SAAWpF,EAAMsF,cACrBnH,EAAM6B,EAAMsF,YAAYD,YAC1Bb,EAAcrG,EAAM6B,EAAMsF,YAAYD,YAC7BjB,MAAMC,QAAQrE,EAAMsF,YAAYD,cACzCb,EAAcP,EAAajE,EAAMsF,YAAYD,aAG/CZ,EAAczE,EAAMsF,YAAYE,YAAc,EAC9Cd,EAAgB1E,EAAMsF,YAAYG,cAAgB,QAClDd,EAAkB3E,EAAMsF,YAAYI,cACO,KAAvC1F,EAAMsF,YAAYI,cAAc,GAC9B,OACA,MACF,SAGF1F,EAAM2F,UAAY3F,EAAM2F,aACtB3F,EAAM2F,qBAAsBC,EAAAA,IAC9Bd,EAAW9E,EAAM2F,WAAWE,UAE1B7F,EAAM2F,qBAAsBG,EAAAA,IAC9BlB,EAAc5E,EAAM2F,WAAWI,YAC/BlB,EAAiB1G,EAAM6B,EAAM2F,WAAWP,UAAUC,cAI/C,CACLf,UAAWA,EACXC,YAAaA,EACbC,YAAaA,EACbwB,cAvGgB,EAwGhBvB,YAAaA,EACbC,cAAeA,EACfC,gBAAiBA,EACjBC,YAAaA,EACbC,eAAgBA,EAChBC,SAAUA,EACVmB,WAvGa,KAwGbC,kBAvGoB,QAwGpBC,kBAvGoB,EAwGpBpB,SAAUA,EACVC,UAAWA,EACXC,cAAeA,EAElB,CAED,SAASmB,EAAUC,EAAatM,GAC9B,OAAQA,GACN,IAAK,QACH,MAAO,CAACsM,GACV,IAAK,aACH,OAAOA,EACT,IAAK,UACH,OAAOA,EAAY,GACrB,IAAK,eACH,OAAOA,EAAY,GAAG,GACxB,IAAK,SACH,MAAO,CAACA,EAAY,GAAIA,EAAY,IAIzC,CA8ED,IAGEzF,EAASlI,KAAK8G,aACXgB,YACA8F,cAAc,GACdxF,cACAC,YAgBL,OAdSrI,KAAKuC,IAAIiH,YAAYC,WAERC,QACpB,SAACC,GAAD,OACEA,aAAiB5C,EAAAA,GACjB4C,EAAMK,cACgB,iBAAtBL,EAAMU,IAAI,OAHZ,IAOC9H,KAAI,SAACoH,GAAD,OA/FP,SAAyBN,EAAUM,GACjC,SAAS6C,EAAQ1D,GACf,IAAInJ,EAAO,GAEX,OACEmJ,EAAQ+E,iBACyB,SAAjC/E,EAAQ+E,gBAAgBxM,KAGtB1B,EADEmJ,EAAQ+E,gBAAgB1L,YACnB2G,EAAQ+E,gBAAgB1L,YACtB2G,EAAQ+E,gBAAgBzG,KAC1B0B,EAAQ+E,gBAAgBzG,KAExB,IAMT0B,EAAQgF,UACRpC,MAAMC,QAAQ7C,EAAQgF,aACtBhF,EAAQgF,WAAW,IACnBhF,EAAQgF,WAAW,GAAGtB,WACtB1D,EAAQgF,WAAW,GAAGtB,UAAUA,YAEhC7M,EAAOmJ,EAAQgF,WAAW,GAAGtB,UAAUA,WAIvC1D,EAAQgF,UACRhF,EAAQgF,YACRhF,EAAQgF,WAAWtB,SACnB1D,EAAQgF,WAAWtB,YAEnB7M,EAAOmJ,EAAQgF,WAAWtB,UAAUA,WAG/B7M,EACR,CAED,MAAO,CACL0J,SAAUA,EAAS9G,KAAI,SAACuG,GACtB,IAGED,EAHExH,EAAOyH,EAAQV,cAAc2F,UAC/BC,EAAOlF,EAAQV,cACf6F,EAAQ,KAGV,IAAKnF,EAAQgF,YAAcnE,EAAO,CAChC,IAAIuE,EAAavE,EAAMmE,UAANnE,CAAiBb,GAAS,GAC3CA,EAAQqF,SAASD,EAClB,CAaD,OAXArF,EACW,WAATxH,EACIqM,EAAU,CAACM,EAAK1F,YAAa,CAAC0F,EAAKX,YAAa,IAAK,UACrDK,EAAUM,EAAKI,iBAAkB/M,GAE1B,iBAATA,IACF4M,EAAQD,EACLI,iBAAiB,GACjBC,MAAM,EAAGL,EAAKI,iBAAiB,GAAGtD,SAGhC,CACLzJ,KAAMA,EACNiN,WAAY,CACV3O,KAAM6M,EAAQ1D,GACdxB,MAAOgE,EAASxC,EAAQgF,aAE1BH,YAAa9E,EACboF,MAAOA,EAEV,IAEJ,CAsBGM,CAAgB5E,EAAM7B,YAAY0G,oBAAoBtG,GAASyB,EAD5D,IAGJD,QAAO,SAACC,GAAD,OAAWA,EAAMN,SAASyB,OAAS,CAAnC,GAEX,yBAED,WAEE,OADa9K,KAAKuC,IAAIiH,YAAYC,WAE/BC,QACC,SAACC,GAAD,OAAWA,EAAM7B,sBAAuB2G,EAAAA,GAAQ9E,EAAMK,YAAtD,IAEDzH,KAAI,SAACoH,GACJ,IAAIhD,EAAIgD,EAAM7B,YACd,MAAO,CACLsC,IAAKsB,MAAMC,QAAQhF,EAAE+H,WAAa/H,EAAE+H,UAAU,GAAK/H,EAAE0D,IAAI,OACzDsE,SAAU,UAEb,GACJ,2BAED,WAoCE,OAAO3O,KAAKuC,IACTiH,YACAC,WACAC,QAPH,SAA4BC,GAC1B,OAAOA,EAAM7B,sBAAuB8G,EAAAA,GAAkBjF,EAAMK,YAC7D,IAMEzH,KAvCH,SAAgCoH,GAC9B,IAAIS,EAAMT,EAAM7B,YAAYuC,IAAI,OAC9BnC,EAASyB,EAAMU,IAAI,WAAa,GAChCJ,EAAS,GACT4E,EAAalF,EAAMU,IAAI,cAczB,MAZ+D,kBAApDV,EAAM7B,YAAYoC,UAAU,UAA5B,SACTD,EAASN,EACN7B,YACAoC,UAAU,UACVC,OAAO2E,QAAQ,QAAS,IACxBlI,MAAM,MAGe,kBAAfiI,IACTA,EAAaA,EAAWC,QAAQ,QAAS,KAGpC,CACL1E,IAAKA,EACLH,OAAQA,EACR8E,iBAAkBF,EAClB3G,OAAQ,CACN8G,KAAM9G,EAAO,GACb+G,OAAQ/G,EAAO,GACfgH,MAAOhH,EAAO,GACdiH,IAAKjH,EAAO,IAGjB,GAWF,0BAED,SAAU9F,EAASgN,GACjB,IAAIlH,EAASlI,KAAK8G,aACbgB,YACA8F,cAAc,GACdxF,cACAC,YACH2G,EAAO9G,EAAO,GACdgH,EAAQhH,EAAO,GACf+G,EAAS/G,EAAO,GAChBiH,EAAMjH,EAAO,GACbkC,EAAMpK,KAAKoG,UACXiJ,EAAO,CACLC,UAAW,GACXC,aAAc,GACdC,KAAM,KACNC,WAAYrN,EAAQqN,WACpBC,KAAM,MAGVL,EAAKE,aAAevP,KAAK2P,cAAgB,GACzCN,EAAKC,UAAYtP,KAAK4P,WAAa,GACnCP,EAAKQ,WAAa7P,KAAK8P,YAAc,GACrCT,EAAKU,aAAe/P,KAAKgQ,cAAgB,GAEzCX,EAAKG,KAAO,CACVxJ,SAAS5D,EAAQoN,KAAKzQ,MAAQqD,EAAQqN,YACtCzJ,SAAS5D,EAAQoN,KAAK5M,OAASR,EAAQqN,aAGzCJ,EAAKK,KAAO,CAACV,EAAME,EAAOD,EAAQE,GAClCE,EAAKY,YAAc7N,EAAQ6N,YAC3BZ,EAAKa,OAAS9N,EAAQ8N,OACtBb,EAAK9G,MAAQnG,EAAQmG,OAErB4H,EAAAA,EAAAA,QAAO/F,EAAK,CACVgG,OAAQ,OACRC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBpB,KAAMmB,KAAKC,UAAUpB,OAGtBqB,MAAK,SAACC,GACLA,EAAShR,OAAO+Q,MAAK,SAACE,GAChBxB,GACFA,EAASwB,EAEZ,GACF,IACAC,OAAM,SAACC,GACNC,MAAM,uCAAyCD,GAC/CE,QAAQF,MAAMA,EACf,GACJ,kCAED,SAAkBpI,EAAK+G,GAErB,OAAOA,EAAa/G,EADC,KAEtB,uBAED,WACE,OAAO1I,KAAKuC,GACb,OA3gBGgD,GA8gBN,W,mPC1iBM0L,GAAoBvS,EAAAA,EAAAA,IAAOwS,EAAAA,EAAPxS,EAAoB,kBAAgB,CAC5DG,aAD4C,EAAGD,MAC3BE,QAAQ,GADgB,IAIxCqS,GAAczS,EAAAA,EAAAA,IAAO0S,EAAAA,EAAP1S,EAAc,kBAAgB,CAChD2S,QAAS,EACTC,WAAY,qBACZzS,aAHgC,EAAGD,MAGfE,QAAQ,GAHI,IAM5ByS,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAMJ,WAAYtR,GAAQ,IAAD,yBACjB,cAAMA,IA+FRuR,UAAY,SAAC5Q,GACX,EAAKgB,SAAS,CACZ6P,aAAc7Q,EAAEsC,OAAOwO,OAE1B,EApGkB,EAsGnBC,cAAgB,SAAC/Q,GACf,EAAKgB,SAAS,CACZgQ,iBAAkBhR,EAAEsC,OAAOwO,OAE9B,EA1GkB,EA4GnBG,SAAW,SAACjR,GACV,EAAKgB,SAAS,CACZkQ,YAAalR,EAAEsC,OAAOwO,OAEzB,EAhHkB,EAkHnBK,UAAY,SAACC,GACX,EAAKpQ,SAAS,CACZ6G,OAAQuJ,GAEX,EAtHkB,EAwHnBC,eAAiB,SAACrR,GAChB,IAAImF,EAAInF,EAAEsC,OAAOwO,MAAMQ,WAAW,MAC9BtR,EAAEsC,OAAOwO,MAAM9K,MAAM,KAAK,GAC1BhG,EAAEsC,OAAOwO,MACb,EAAK9P,SAAS,CACZuQ,YAAapM,GAEhB,EA/HkB,EAiInBqM,eAAiB,SAACxR,GAChB,EAAKgB,SAAS,CACZyQ,kBAAmBzR,EAAEsC,OAAOwO,OAE/B,EArIkB,EAiMnBY,UAAY,SAAC1R,GACX,EAAKgB,SAAS,CACZwI,KAAK,EACLmI,SAAS,IAEX,IAAInQ,EAAU,CACZoN,KAAM,EAAKgD,mBACXtC,OAAQ,EAAKuC,YACbxC,YAAa,EAAKyC,iBAClBnK,MAAO,EAAKoK,WACZlD,WAAY,EAAKmD,iBAGnB,EAAK3S,MAAMuF,MAAM8M,UAAUlQ,GAAS,SAACyQ,GACnC,IAAIC,EAAW,CACbP,SAAS,GAIyB,SAAhCM,EAAOE,UAAUC,QAAQ,GAC3BF,EAAQ,IAAUD,EAElB,EAAK5S,MAAMgT,gBACT,kHACA,CACEC,QAAS,UAKf,EAAKtR,SAASkR,EACf,GACF,EA/NC,EAAKK,YAAc,CAAC,GAAI,GAAI,IAAK,IAAK,KACtC,EAAKC,aAAe,CAAC,KAAM,KAAM,MACjC,EAAKtT,MAAQ,CACX2R,aAAc,KACdY,kBAAmB,IACnBP,YACE7R,EAAMuF,MAAMa,OAAOgN,KAAKC,MAAMrT,EAAMuF,MAAMa,OAAOyE,OAAS,IAC5DqH,YAAa,QACbP,iBAAkB,KAClBnJ,OAAQxI,EAAMuF,MAAM2C,oBAChBlI,EAAMuF,MAAM+N,mBACZtT,EAAMuF,MAAMjD,IAAIiI,UAAUlC,YAC9BiK,SAAS,EACTiB,qBAAqB,GAGvBvT,EAAMmF,cAAcrC,UAAU,oBAAoB,WAChD,EAAKnB,SAAS,CAAE4R,qBAAqB,IACrC,EAAKC,WAAWxT,EAAMuF,MAAMjD,IAC7B,IAEDtC,EAAMmF,cAAcrC,UAAU,oBAAoB,WAChD,EAAKnB,SAAS,CAAE4R,qBAAqB,IACrC,EAAKtK,eACN,IA1BgB,CA2BlB,CA2WA,OA3WA,wCAED,WAAoB,IAAD,OACbwK,EAAW,SAACxD,GACd,OAAQA,GACN,IAAK,KACH,MAAO,CACLnR,MAAiC,MAA1B,EAAK2T,iBAA2B,IAAM,IAC7C9P,OAAkC,MAA1B,EAAK8P,iBAA2B,IAAM,KAElD,IAAK,KACH,MAAO,CACL3T,MAAiC,MAA1B,EAAK2T,iBAA2B,IAAM,IAC7C9P,OAAkC,MAA1B,EAAK8P,iBAA2B,IAAM,KAElD,IAAK,KACH,MAAO,CACL3T,MAAiC,MAA1B,EAAK2T,iBAA2B,IAAM,IAC7C9P,OAAkC,MAA1B,EAAK8P,iBAA2B,IAAM,KAElD,QACE,MAAO,CACL3T,MAAO,EACP6D,OAAQ,GAIf,EAKD,MAAO,CACL7D,MAJU2U,EAAS1T,KAAKyS,aAAa1T,MAItB,KACf6D,OAJS8Q,EAAS1T,KAAKyS,aAAa7P,OAInB,KAEpB,wCAED,WACE,IAAI4M,EAAOxP,KAAKwS,mBAGd9J,EAFmB,KACY,IAEjC,MAAO,CACL3J,MAAOyQ,EAAKzQ,MAAQ2J,EACpB9F,OAAQ4M,EAAK5M,OAAS8F,EAEzB,yBAED,WACE,MAAkC,UAA3B1I,KAAKF,MAAMgS,YACbjL,OAAO8M,MAAM9M,OAAO7G,KAAKF,MAAMqS,cAE9B,EADAnS,KAAKF,MAAMqS,YAEbnS,KAAKF,MAAMgS,WAChB,8BAED,WACE,OAAO9R,KAAKF,MAAM8R,gBACnB,+BAED,WACE,OAAO5R,KAAKF,MAAMuS,iBACnB,0BAED,WACE,OAAOrS,KAAKF,MAAM2R,YACnB,8BAyCD,WACEzR,KAAKC,MAAMuF,MAAM0D,eAClB,2BAED,SAAW3G,GACT,IAAIgG,EAAQvI,KAAK2S,WACfnK,EAAQxI,KAAK4T,0BACbnL,EAASzI,KAAKC,MAAMuF,MAAM2C,qBACtBG,EAAAA,EAAAA,WACEtI,KAAKC,MAAMuF,MAAM2C,oBAAoBC,cAAcC,aAErD9F,EAAIiI,UAAUlC,YAEpBtI,KAAKC,MAAMuF,MAAMiO,WAAWlL,EAAOC,EAAOC,GAE1C,IAAIoL,OAAW7R,EAEf,OAAQuG,GACN,IAAK,MAGL,IAAK,MACHsL,EAAW,EACX,MACF,IAAK,OACHA,EAAW,EACX,MACF,IAAK,OACHA,EAAW,EACX,MACF,IAAK,OACHA,EAAW,EACX,MACF,IAAK,QACHA,EAAW,EACX,MACF,IAAK,QAGL,IAAK,QACHA,EAAW,EACX,MACF,IAAK,SAGL,IAAK,SACHA,EAAW,EACX,MACF,QACEA,EAAWtR,EAAIiI,UAAUsJ,UAIzB9T,KAAKC,MAAMuF,MAAMgB,WAAaqN,EAAWtR,EAAIiI,UAAUsJ,WACzDvR,EAAIiI,UAAUuJ,QAAQF,EAEzB,uBAoCD,WAAU,IAAD,OAGDG,EAFOhU,KAAKC,MAAMuF,MAAMa,OAED9D,KAAI,SAACoE,EAAGb,GAAJ,OAC/B,oBAAgB4L,MAAO/K,EAAvB,eAEGA,IAFUb,EADkB,IAO3BmO,EAAoBjU,KAAKmT,YAAY5Q,KAAI,SAACoE,EAAGb,GACjD,MAAgC,OAA5B,EAAKhG,MAAM2R,aACA,MAAN9K,GACL,mBAAgB+K,MAAO/K,EAAvB,SACGA,GADUb,IAIb,mBAAgB4L,MAAO/K,EAAGuN,UAAQ,EAAlC,SACGvN,GADUb,IAMb,mBAAgB4L,MAAO/K,EAAvB,SACGA,GADUb,EAKlB,IAEKqO,EAAqBnU,KAAKoT,aAAa7Q,KAAI,SAACoE,EAAGb,GACnD,MAAoC,QAAhC,EAAKhG,MAAM8R,iBACA,OAANjL,GACL,mBAAgB+K,MAAO/K,EAAvB,SACGA,GADUb,IAIb,mBAAgB4L,MAAO/K,EAAGuN,UAAQ,EAAlC,SACGvN,GADUb,IAMb,mBAAgB4L,MAAO/K,EAAvB,SACGA,GADUb,EAKlB,IAQD,OANuC,IAAnC9F,KAAKF,MAAM0T,oBACbxT,KAAKyT,WAAWzT,KAAKC,MAAMuF,MAAMjD,KAEjCvC,KAAKkJ,iBAIL,UAAC,KAAD,CAAMkL,WAAS,EAAf,UACGpU,KAAKF,MAAMyS,UACV,SAAC,KAAD,CAAM8B,MAAI,EAACC,GAAI,GAAf,UACE,SAACnD,EAAD,WACE,SAAC,IAAD,SAIN,SAAC,KAAD,CAAMkD,MAAI,EAACC,GAAI,GAAf,UACE,UAACrD,EAAD,CAAmBsD,WAAS,EAA5B,WACE,SAAC,IAAD,CAAYrB,QAAQ,WAAWsB,QAAQ,2BAAvC,6BAGA,SAAC,IAAD,CACEC,SAAUzU,KAAKwR,UACfE,MAAO1R,KAAKF,MAAM2R,aAClBiD,OAAO,SAAC,IAAD,CAAOtN,KAAK,SAASpC,GAAG,6BAHjC,SAKGmP,UAIP,SAAC,KAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,UAACrD,EAAD,CAAmBsD,WAAS,EAA5B,WACE,SAAC,IAAD,CAAYrB,QAAQ,WAAWsB,QAAQ,4BAAvC,0BAGA,UAAC,IAAD,CACEC,SAAUzU,KAAKoS,eACfV,MAAO1R,KAAKF,MAAMuS,kBAClBqC,OACE,SAAC,IAAD,CAAOtN,KAAK,cAAcpC,GAAG,8BAJjC,WAOE,mBAAQ0M,MAAM,IAAd,yBACA,mBAAQA,MAAM,IAAd,+BAIN,SAAC,KAAD,CAAM2C,MAAI,EAACC,GAAI,GAAf,UACE,UAACrD,EAAD,CAAmBsD,WAAS,EAA5B,WACE,SAAC,IAAD,CAAYrB,QAAQ,WAAWsB,QAAQ,sBAAvC,oBAGA,UAAC,IAAD,CACEC,SAAUzU,KAAK6R,SACfH,MAAO1R,KAAKF,MAAMgS,YAClB4C,OAAO,SAAC,IAAD,CAAOtN,KAAK,QAAQpC,GAAG,wBAHhC,UAKGgP,GACD,mBAAsBtC,MAAO,QAA7B,wBAAa,iBAMS,UAA3B1R,KAAKF,MAAMgS,cACV,SAAC,KAAD,CAAMuC,MAAI,EAACC,GAAI,GAAf,UACE,SAACrD,EAAD,CAAmBsD,WAAS,EAA5B,UACE,SAAC,IAAD,CACElT,KAAK,OACLoT,SAAUzU,KAAKiS,eACfP,MAAO1R,KAAKF,MAAMqS,mBAK1B,SAAC,KAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,UACE,UAACrD,EAAD,CAAmBsD,WAAS,EAA5B,WACE,SAAC,IAAD,CAAYrB,QAAQ,WAAWsB,QAAQ,2BAAvC,4BAGA,SAAC,IAAD,CACE9C,MAAO1R,KAAKF,MAAM8R,iBAClB6C,SAAUzU,KAAK2R,cACf+C,OAAO,SAAC,IAAD,CAAOtN,KAAK,aAAapC,GAAG,6BAHrC,SAKGiP,UAKP,SAAChD,EAAD,CAAmBsD,WAAS,EAA5B,UACE,UAAC,IAAD,CACErB,QAAQ,YACRvQ,MAAM,UACN4R,WAAW,EACXnU,QAASJ,KAAKsS,UAJhB,WAME,SAAC,IAAD,CAAcqC,GAAI,CAAEC,YAAa,KANnC,kBASD5U,KAAKF,MAAMsK,MACV,SAAC6G,EAAD,CAAmBsD,WAAS,EAA5B,UACE,UAAC,IAAD,CACErB,QAAQ,YACRqB,WAAW,EACXrR,OAAO,SACP2R,KAAM7U,KAAKF,MAAMsK,IAJnB,WAME,SAAC,IAAD,CAAeuK,GAAI,CAAEC,YAAa,KANpC,oBAYT,OA5YGrD,CAA0B/Q,EAAAA,eA+YhC,WAAesU,EAAAA,EAAAA,IAAavD,E","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Export/Export.js","plugins/Export/ExportModel.js","plugins/Export/components/ExportPdfSettings.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Drawer buttons and Widget buttons should render a Drawer button. */}\n        {(target === \"toolbar\" || this.pluginIsWidget(target)) &&\n          this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden mdUp={this.pluginIsWidget(this.props.options.target)}>\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      <PluginControlButton\n        icon={this.props.custom.icon}\n        onClick={this.handleButtonClick}\n        title={this.title}\n        abstract={this.description}\n      />,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\n\nimport PrintIcon from \"@mui/icons-material/Print\";\n\nimport ExportPdfSettings from \"./components/ExportPdfSettings.js\";\nimport ExportModel from \"./ExportModel\";\nimport Observer from \"react-event-observer\";\n\nclass Export extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.localObserver = Observer();\n\n    this.exportModel = new ExportModel({\n      map: props.map,\n      app: props.app,\n      localObserver: this.localObserver,\n      options: props.options,\n    });\n  }\n\n  onWindowShow = () => {\n    this.localObserver.publish(\"showPreviewLayer\");\n  };\n\n  onWindowHide = () => {\n    this.localObserver.publish(\"hidePreviewLayer\");\n  };\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Export\"\n        custom={{\n          icon: <PrintIcon />,\n          title: \"Exportera\",\n          description: \"Exportera kartan till andra format\",\n          height: \"dynamic\",\n          width: 315,\n          onWindowShow: this.onWindowShow,\n          onWindowHide: this.onWindowHide,\n        }}\n      >\n        {/**\n          * In the future, when we develop export for other formats,\n          * such as TIFF, we can use ExportView here. ExportView \n          * will have tab buttons that will select between the different\n          * export modes. But for now, we can as well just render the\n          * PDF exporter here.\n        \n        <ExportView\n          model={this.exportModel}\n          localObserver={this.localObserver}\n        /> */}\n        <ExportPdfSettings\n          model={this.exportModel}\n          localObserver={this.localObserver}\n        />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Export;\n","import Vector from \"ol/layer/Vector.js\";\nimport VectorSource from \"ol/source/Vector.js\";\nimport { Style, Stroke, Fill, Icon, Circle } from \"ol/style.js\";\nimport { getCenter } from \"ol/extent.js\";\nimport Polygon from \"ol/geom/Polygon\";\nimport Feature from \"ol/Feature.js\";\nimport Tile from \"ol/layer/Tile\";\nimport Image from \"ol/layer/Image\";\nimport TileWMS from \"ol/source/TileWMS\";\nimport ImageWMS from \"ol/source/ImageWMS\";\n//import ImageVector from \"ol/source/ImageVector\";\nimport { Translate } from \"ol/interaction.js\";\nimport WMTS from \"ol/source/WMTS\";\nimport TileArcGISRest from \"ol/source/TileArcGISRest\";\nimport Collection from \"ol/Collection\";\nimport { hfetch } from \"utils/FetchWrapper\";\n\nvar toHex = function (str) {\n  if (/^#/.test(str)) return str;\n  var hex =\n    \"#\" +\n    str\n      .match(/\\d+(\\.\\d+)?/g)\n      .splice(0, 3)\n      .map((i) => {\n        var v = parseInt(i, 10).toString(16);\n        if (parseInt(i) < 16) {\n          v = \"0\" + v;\n        }\n        return v;\n      })\n      .join(\"\");\n  return hex;\n};\n\nvar toOpacity = function (str) {\n  return parseFloat(str.match(/\\d+(\\.\\d+)?/g).splice(3, 1)[0]);\n};\n\nclass ExportModel {\n  constructor(settings) {\n    this.map = settings.map;\n    this.app = settings.app;\n    this.localObserver = settings.localObserver;\n    this.exportUrl = settings.options.exportUrl;\n    this.scales = this.validateScales(settings.options.scales);\n    this.copyright = \"© Lantmäteriverket i2009/00858\";\n    this.autoScale = false;\n    this.instruction = \"\";\n    this.addPreviewLayer();\n  }\n\n  validateScales(s) {\n    if (typeof s == \"string\" && /(\\d+)(,\\s*\\d+)*/.test(s)) {\n      return s.split(\",\").map((s) => Number(s));\n    } else {\n      return [250, 500, 1000, 2500, 5000, 10000, 25000, 50000, 100000, 250000];\n    }\n  }\n\n  addPreviewLayer() {\n    this.previewLayer = new Vector({\n      source: new VectorSource(),\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginExport\",\n      caption: \"Export plugin\",\n      style: new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.7)\",\n          width: 2,\n        }),\n        fill: new Fill({\n          color: \"rgba(255, 145, 20, 0.4)\",\n        }),\n      }),\n    });\n    this.map.addLayer(this.previewLayer);\n  }\n\n  removePreview() {\n    this.previewFeature = undefined;\n    this.previewLayer.getSource().clear();\n    this.map.removeInteraction(this.translate);\n  }\n\n  getPreviewFeature() {\n    return this.previewFeature;\n  }\n\n  getPreviewCenter() {\n    var extent = this.getPreviewFeature().getGeometry().getExtent();\n    return getCenter(extent);\n  }\n\n  addPreview(scale, paper, center) {\n    var dpi = 25.4 / 0.28,\n      ipu = 39.37,\n      sf = 1,\n      w = (((paper.width / dpi / ipu) * scale) / 2) * sf,\n      y = (((paper.height / dpi / ipu) * scale) / 2) * sf,\n      coords = [\n        [\n          [center[0] - w, center[1] - y],\n          [center[0] - w, center[1] + y],\n          [center[0] + w, center[1] + y],\n          [center[0] + w, center[1] - y],\n          [center[0] - w, center[1] - y],\n        ],\n      ],\n      feature = new Feature({\n        geometry: new Polygon(coords),\n      });\n\n    this.removePreview();\n    this.previewFeature = feature;\n    this.previewLayer.getSource().addFeature(feature);\n    this.translate = new Translate({\n      features: new Collection([feature]),\n    });\n    this.map.addInteraction(this.translate);\n  }\n\n  findWMS() {\n    /**\n     * @summary Only allow export of layers according to some specific conditions.\n     * @param {object} layer\n     */\n    const exportable = (layer) =>\n      (layer instanceof Tile || layer instanceof Image) &&\n      (layer.getSource() instanceof TileWMS ||\n        layer.getSource() instanceof ImageWMS) &&\n      layer.getVisible();\n\n    return this.map\n      .getLayers()\n      .getArray()\n      .filter(exportable)\n      .map((layer, i) => {\n        // Depending on type of LAYERS, either split the String or use Array directly.\n        const layers =\n          typeof layer.getSource().getParams().LAYERS === \"string\"\n            ? layer.getSource().getParams().LAYERS.split(\",\")\n            : layer.getSource().getParams().LAYERS;\n        return {\n          url: layer.getSource().get(\"url\"),\n          layers: layers,\n          zIndex: i,\n          workspacePrefix: null,\n          coordinateSystemId: this.map\n            .getView()\n            .getProjection()\n            .getCode()\n            .split(\":\")[1],\n        };\n      });\n  }\n\n  findVector() {\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    }\n\n    function rgbToHex(rgbString) {\n      const matches = /rgb(a)?\\((\\d+), (\\d+), (\\d+)(, [\\d.]+)?\\)/.exec(\n        rgbString\n      );\n      if (matches !== null) {\n        let r = parseInt(matches[2]);\n        let g = parseInt(matches[3]);\n        let b = parseInt(matches[4]);\n        let a = parseInt(matches[5]);\n        return a\n          ? null\n          : \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n      } else {\n        return null;\n      }\n    }\n\n    function asObject(style) {\n      function olColorToHex(olColor) {\n        var colorString = olColor.join(\", \");\n        var hex = rgbToHex(`rgba(${colorString})`);\n        return hex;\n      }\n\n      if (!style) return null;\n\n      if (Array.isArray(style)) {\n        if (style.length === 2) {\n          style = style[1];\n        }\n        if (style.length === 1) {\n          style = style[0];\n        }\n      }\n\n      var fillColor = \"#FC345C\",\n        fillOpacity = 0.5,\n        strokeColor = \"#FC345C\",\n        strokeOpacity = 1,\n        strokeWidth = 3,\n        strokeLinecap = \"round\",\n        strokeDashstyle = \"solid\",\n        pointRadius = 10,\n        pointFillColor = \"#FC345C\",\n        pointSrc = \"\",\n        labelAlign = \"cm\",\n        labelOutlineColor = \"white\",\n        labelOutlineWidth = 3,\n        fontSize = \"16\",\n        fontColor = \"#FFFFFF\",\n        fontBackColor = \"#000000\";\n\n      if (\n        style.getText &&\n        style.getText() &&\n        style.getText().getFont &&\n        style.getText().getFont()\n      ) {\n        fontSize = style.getText().getFont().match(/\\d+/)[0];\n      }\n\n      if (\n        style.getText &&\n        style.getText() &&\n        style.getText().getFill &&\n        style.getText().getFill()\n      ) {\n        if (typeof style.getText().getFill().getColor() === \"string\") {\n          fontColor = style.getText().getFill().getColor();\n        } else if (Array.isArray(style.getText().getFill().getColor())) {\n          fontColor = olColorToHex(style.getText().getFill().getColor());\n        }\n      }\n\n      if (\n        style.getText &&\n        style.getText() &&\n        style.getText().getStroke &&\n        style.getText().getStroke()\n      ) {\n        if (typeof style.getText().getFill().getColor() === \"string\") {\n          fontBackColor = style.getText().getStroke().getColor();\n        } else if (Array.isArray(style.getText().getStroke().getColor())) {\n          fontBackColor = olColorToHex(style.getText().getStroke().getColor());\n        }\n      }\n\n      if (fontColor && /^rgb/.test(fontColor)) {\n        fontColor = rgbToHex(fontColor);\n      }\n\n      if (fontBackColor) {\n        if (/^rgb\\(/.test(fontBackColor)) {\n          fontBackColor = rgbToHex(fontBackColor);\n        } else {\n          fontBackColor = null;\n        }\n      }\n\n      if (style.getFill && style.getFill() && style.getFill().getColor()) {\n        if (toHex(style.getFill().getColor())) {\n          fillColor = toHex(style.getFill().getColor());\n          fillOpacity = toOpacity(style.getFill().getColor());\n        } else if (Array.isArray(style.getFill().getColor())) {\n          fillColor = olColorToHex(style.getFill().getColor());\n          fillOpacity = style.getFill().getColor()[\n            style.getFill().getColor().length - 1\n          ];\n        }\n      }\n\n      if (style.getFill && style.getStroke()) {\n        if (toHex(style.getStroke().getColor())) {\n          strokeColor = toHex(style.getStroke().getColor());\n        } else if (Array.isArray(style.getStroke().getColor())) {\n          strokeColor = olColorToHex(style.getStroke().getColor());\n        }\n\n        strokeWidth = style.getStroke().getWidth() || 3;\n        strokeLinecap = style.getStroke().getLineCap() || \"round\";\n        strokeDashstyle = style.getStroke().getLineDash()\n          ? style.getStroke().getLineDash()[0] === 12\n            ? \"dash\"\n            : \"dot\"\n          : \"solid\";\n      }\n\n      if (style.getImage && style.getImage()) {\n        if (style.getImage() instanceof Icon) {\n          pointSrc = style.getImage().getSrc();\n        }\n        if (style.getImage() instanceof Circle) {\n          pointRadius = style.getImage().getRadius();\n          pointFillColor = toHex(style.getImage().getFill().getColor());\n        }\n      }\n\n      return {\n        fillColor: fillColor,\n        fillOpacity: fillOpacity,\n        strokeColor: strokeColor,\n        strokeOpacity: strokeOpacity,\n        strokeWidth: strokeWidth,\n        strokeLinecap: strokeLinecap,\n        strokeDashstyle: strokeDashstyle,\n        pointRadius: pointRadius,\n        pointFillColor: pointFillColor,\n        pointSrc: pointSrc,\n        labelAlign: labelAlign,\n        labelOutlineColor: labelOutlineColor,\n        labelOutlineWidth: labelOutlineWidth,\n        fontSize: fontSize,\n        fontColor: fontColor,\n        fontBackColor: fontBackColor,\n      };\n    }\n\n    function as2DPairs(coordinates, type) {\n      switch (type) {\n        case \"Point\":\n          return [coordinates];\n        case \"LineString\":\n          return coordinates;\n        case \"Polygon\":\n          return coordinates[0];\n        case \"MultiPolygon\":\n          return coordinates[0][0];\n        case \"Circle\":\n          return [coordinates[0], coordinates[1]];\n        default:\n          break;\n      }\n    }\n\n    function translateVector(features, layer) {\n      function getText(feature) {\n        var text = \"\";\n\n        if (\n          feature.getProperties() &&\n          feature.getProperties().type === \"Text\"\n        ) {\n          if (feature.getProperties().description) {\n            text = feature.getProperties().description;\n          } else if (feature.getProperties().name) {\n            text = feature.getProperties().name;\n          } else {\n            text = \"\";\n          }\n          return text;\n        }\n\n        if (\n          feature.getStyle &&\n          Array.isArray(feature.getStyle()) &&\n          feature.getStyle()[1] &&\n          feature.getStyle()[1].getText() &&\n          feature.getStyle()[1].getText().getText()\n        ) {\n          text = feature.getStyle()[1].getText().getText();\n        }\n\n        if (\n          feature.getStyle &&\n          feature.getStyle() &&\n          feature.getStyle().getText &&\n          feature.getStyle().getText()\n        ) {\n          text = feature.getStyle().getText().getText();\n        }\n\n        return text;\n      }\n\n      return {\n        features: features.map((feature) => {\n          var type = feature.getGeometry().getType(),\n            geom = feature.getGeometry(),\n            holes = null,\n            coords;\n\n          if (!feature.getStyle() && layer) {\n            let layerStyle = layer.getStyle()(feature)[0];\n            feature.setStyle(layerStyle);\n          }\n\n          coords =\n            type === \"Circle\"\n              ? as2DPairs([geom.getCenter(), [geom.getRadius(), 0]], \"Circle\")\n              : as2DPairs(geom.getCoordinates(), type);\n\n          if (type === \"MultiPolygon\") {\n            holes = geom\n              .getCoordinates()[0]\n              .slice(1, geom.getCoordinates()[0].length);\n          }\n\n          return {\n            type: type,\n            attributes: {\n              text: getText(feature),\n              style: asObject(feature.getStyle()),\n            },\n            coordinates: coords,\n            holes: holes,\n          };\n        }),\n      };\n    }\n\n    var layers,\n      vectorLayers,\n      //imageVectorLayers,\n      extent = this.previewLayer\n        .getSource()\n        .getFeatures()[0]\n        .getGeometry()\n        .getExtent();\n\n    layers = this.map.getLayers().getArray();\n\n    vectorLayers = layers.filter(\n      (layer) =>\n        layer instanceof Vector &&\n        layer.getVisible() &&\n        layer.get(\"name\") !== \"pluginExport\"\n    );\n\n    vectorLayers = vectorLayers\n      .map((layer) =>\n        translateVector(layer.getSource().getFeaturesInExtent(extent), layer)\n      )\n      .filter((layer) => layer.features.length > 0);\n    return vectorLayers;\n  }\n\n  findWMTS() {\n    var layers = this.map.getLayers().getArray();\n    return layers\n      .filter(\n        (layer) => layer.getSource() instanceof WMTS && layer.getVisible()\n      )\n      .map((layer) => {\n        var s = layer.getSource();\n        return {\n          url: Array.isArray(s.getUrls()) ? s.getUrls()[0] : s.get(\"url\"),\n          axisMode: \"natural\",\n        };\n      });\n  }\n\n  findArcGIS() {\n    function getArcGISLayerContract(layer) {\n      var url = layer.getSource().get(\"url\"),\n        extent = layer.get(\"extent\") || [],\n        layers = [],\n        projection = layer.get(\"projection\");\n\n      if (typeof layer.getSource().getParams(\"params\")[\"LAYERS\"] === \"string\") {\n        layers = layer\n          .getSource()\n          .getParams(\"params\")\n          .LAYERS.replace(\"show:\", \"\")\n          .split(\",\");\n      }\n\n      if (typeof projection === \"string\") {\n        projection = projection.replace(\"EPSG:\", \"\");\n      }\n\n      return {\n        url: url,\n        layers: layers,\n        spatialReference: projection,\n        extent: {\n          left: extent[0],\n          bottom: extent[1],\n          right: extent[2],\n          top: extent[3],\n        },\n      };\n    }\n\n    function visibleArcGISLayer(layer) {\n      return layer.getSource() instanceof TileArcGISRest && layer.getVisible();\n    }\n\n    return this.map\n      .getLayers()\n      .getArray()\n      .filter(visibleArcGISLayer)\n      .map(getArcGISLayerContract);\n  }\n\n  exportPDF(options, callback) {\n    var extent = this.previewLayer\n        .getSource()\n        .getFeatures()[0]\n        .getGeometry()\n        .getExtent(),\n      left = extent[0],\n      right = extent[2],\n      bottom = extent[1],\n      top = extent[3],\n      url = this.exportUrl,\n      data = {\n        wmsLayers: [],\n        vectorLayers: [],\n        size: null,\n        resolution: options.resolution,\n        bbox: null,\n      };\n\n    data.vectorLayers = this.findVector() || [];\n    data.wmsLayers = this.findWMS() || [];\n    data.wmtsLayers = this.findWMTS() || [];\n    data.arcgisLayers = this.findArcGIS() || [];\n\n    data.size = [\n      parseInt(options.size.width * options.resolution),\n      parseInt(options.size.height * options.resolution),\n    ];\n\n    data.bbox = [left, right, bottom, top];\n    data.orientation = options.orientation;\n    data.format = options.format;\n    data.scale = options.scale;\n\n    hfetch(url, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        data: JSON.stringify(data),\n      }),\n    })\n      .then((response) => {\n        response.text().then((fileUrl) => {\n          if (callback) {\n            callback(fileUrl);\n          }\n        });\n      })\n      .catch((error) => {\n        alert(\"Det gick inte att exportera kartan. \" + error);\n        console.error(error);\n      });\n  }\n\n  resolutionToScale(dpi, resolution) {\n    var inchesPerMeter = 39.37;\n    return resolution * dpi * inchesPerMeter;\n  }\n\n  getMap() {\n    return this.map;\n  }\n}\n\nexport default ExportModel;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport { Paper, FormControl, Button, Input } from \"@mui/material\";\nimport { Grid, InputLabel, NativeSelect, LinearProgress } from \"@mui/material\";\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\nimport PictureAsPdf from \"@mui/icons-material/PictureAsPdf\";\n\nimport { getCenter } from \"ol/extent.js\";\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n}));\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  opacity: 1,\n  transition: \"opacity 2s ease-in\",\n  marginBottom: theme.spacing(2),\n}));\n\nclass ExportPdfSettings extends React.PureComponent {\n  static propTypes = {\n    localObserver: propTypes.object.isRequired,\n    model: propTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.resolutions = [72, 96, 150, 200, 300];\n    this.paperFormats = [\"A2\", \"A3\", \"A4\"];\n    this.state = {\n      selectFormat: \"A4\",\n      selectOrientation: \"S\",\n      selectScale:\n        props.model.scales[Math.floor(props.model.scales.length / 2)], // Start with the scale in the middle of array\n      manualScale: \"10000\",\n      selectResolution: \"72\",\n      center: props.model.getPreviewFeature()\n        ? props.model.getPreviewCenter()\n        : props.model.map.getView().getCenter(),\n      loading: false,\n      previewLayerVisible: false,\n    };\n\n    props.localObserver.subscribe(\"showPreviewLayer\", () => {\n      this.setState({ previewLayerVisible: true });\n      this.addPreview(props.model.map);\n    });\n\n    props.localObserver.subscribe(\"hidePreviewLayer\", () => {\n      this.setState({ previewLayerVisible: false });\n      this.removePreview();\n    });\n  }\n\n  getPaperMeasures() {\n    var pageSize = (format) => {\n      switch (format) {\n        case \"A4\":\n          return {\n            width: this.getOrientation() === \"L\" ? 297 : 210,\n            height: this.getOrientation() === \"L\" ? 210 : 297,\n          };\n        case \"A3\":\n          return {\n            width: this.getOrientation() === \"L\" ? 420 : 297,\n            height: this.getOrientation() === \"L\" ? 297 : 420,\n          };\n        case \"A2\":\n          return {\n            width: this.getOrientation() === \"L\" ? 594 : 420,\n            height: this.getOrientation() === \"L\" ? 420 : 594,\n          };\n        default: {\n          return {\n            width: 0,\n            height: 0,\n          };\n        }\n      }\n    };\n\n    var width = pageSize(this.getFormat()).width,\n      height = pageSize(this.getFormat()).height;\n\n    return {\n      width: width / 25.4,\n      height: height / 25.4,\n    };\n  }\n\n  getPreviewPaperMeasures() {\n    var size = this.getPaperMeasures(),\n      inchInMillimeter = 25.4,\n      defaultPixelSizeInMillimeter = 0.28,\n      dpi = inchInMillimeter / defaultPixelSizeInMillimeter; // ~90\n    return {\n      width: size.width * dpi,\n      height: size.height * dpi,\n    };\n  }\n\n  getScale() {\n    return this.state.selectScale === \"other\"\n      ? !Number.isNaN(Number(this.state.manualScale))\n        ? this.state.manualScale\n        : 0\n      : this.state.selectScale;\n  }\n\n  getResolution() {\n    return this.state.selectResolution;\n  }\n\n  getOrientation() {\n    return this.state.selectOrientation;\n  }\n\n  getFormat() {\n    return this.state.selectFormat;\n  }\n\n  setFormat = (e) => {\n    this.setState({\n      selectFormat: e.target.value,\n    });\n  };\n\n  setResolution = (e) => {\n    this.setState({\n      selectResolution: e.target.value,\n    });\n  };\n\n  setScale = (e) => {\n    this.setState({\n      selectScale: e.target.value,\n    });\n  };\n\n  setCenter = (val) => {\n    this.setState({\n      center: val,\n    });\n  };\n\n  setManualScale = (e) => {\n    var v = e.target.value.startsWith(\"1:\")\n      ? e.target.value.split(\":\")[1]\n      : e.target.value;\n    this.setState({\n      manualScale: v,\n    });\n  };\n\n  setOrientation = (e) => {\n    this.setState({\n      selectOrientation: e.target.value,\n    });\n  };\n\n  removePreview() {\n    this.props.model.removePreview();\n  }\n\n  addPreview(map) {\n    var scale = this.getScale(),\n      paper = this.getPreviewPaperMeasures(),\n      center = this.props.model.getPreviewFeature()\n        ? getCenter(\n            this.props.model.getPreviewFeature().getGeometry().getExtent()\n          )\n        : map.getView().getCenter();\n\n    this.props.model.addPreview(scale, paper, center);\n\n    var preScale = undefined;\n\n    switch (scale) {\n      case \"250\":\n        preScale = 6;\n        break;\n      case \"500\":\n        preScale = 6;\n        break;\n      case \"1000\":\n        preScale = 5;\n        break;\n      case \"2500\":\n        preScale = 4;\n        break;\n      case \"5000\":\n        preScale = 3;\n        break;\n      case \"10000\":\n        preScale = 2;\n        break;\n      case \"25000\":\n        preScale = 1;\n        break;\n      case \"50000\":\n        preScale = 1;\n        break;\n      case \"100000\":\n        preScale = 0;\n        break;\n      case \"250000\":\n        preScale = 0;\n        break;\n      default:\n        preScale = map.getView().getZoom();\n        break;\n    }\n\n    if (this.props.model.autoScale && preScale < map.getView().getZoom()) {\n      map.getView().setZoom(preScale);\n    }\n  }\n\n  exportPDF = (e) => {\n    this.setState({\n      url: false,\n      loading: true,\n    });\n    var options = {\n      size: this.getPaperMeasures(),\n      format: this.getFormat(),\n      orientation: this.getOrientation(),\n      scale: this.getScale(),\n      resolution: this.getResolution(),\n    };\n\n    this.props.model.exportPDF(options, (pdfUrl) => {\n      let newState = {\n        loading: false,\n      };\n\n      // Set URL in state only if respons ends with \".pdf\"\n      if (pdfUrl.trimEnd().substr(-4) === \".pdf\") {\n        newState[\"url\"] = pdfUrl;\n      } else {\n        this.props.enqueueSnackbar(\n          \"Utskriften kunde inte skapas. Prova med lägre upplösning, mindre område eller färre lager i kartan.\",\n          {\n            variant: \"error\",\n          }\n        );\n      }\n\n      this.setState(newState);\n    });\n  };\n\n  render() {\n    var scales = this.props.model.scales;\n\n    const scalesOptions = scales.map((s, i) => (\n      <option key={i} value={s}>\n        1:\n        {s}\n      </option>\n    ));\n\n    const resolutionOptions = this.resolutions.map((s, i) => {\n      if (this.state.selectFormat === \"A2\") {\n        return s !== 300 ? (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        ) : (\n          <option key={i} value={s} disabled>\n            {s}\n          </option>\n        );\n      } else {\n        return (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        );\n      }\n    });\n\n    const paperFormatOptions = this.paperFormats.map((s, i) => {\n      if (this.state.selectResolution === \"300\") {\n        return s !== \"A2\" ? (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        ) : (\n          <option key={i} value={s} disabled>\n            {s}\n          </option>\n        );\n      } else {\n        return (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        );\n      }\n    });\n\n    if (this.state.previewLayerVisible === true) {\n      this.addPreview(this.props.model.map);\n    } else {\n      this.removePreview();\n    }\n\n    return (\n      <Grid container>\n        {this.state.loading && (\n          <Grid item xs={12}>\n            <StyledPaper>\n              <LinearProgress />\n            </StyledPaper>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"paper-size-native-helper\">\n              Pappersstorlek\n            </InputLabel>\n            <NativeSelect\n              onChange={this.setFormat}\n              value={this.state.selectFormat}\n              input={<Input name=\"format\" id=\"paper-size-native-helper\" />}\n            >\n              {paperFormatOptions}\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"orientation-native-helper\">\n              Orientering\n            </InputLabel>\n            <NativeSelect\n              onChange={this.setOrientation}\n              value={this.state.selectOrientation}\n              input={\n                <Input name=\"orientation\" id=\"orientation-native-helper\" />\n              }\n            >\n              <option value=\"P\">stående</option>\n              <option value=\"L\">liggande</option>\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"scale-native-helper\">\n              Skala\n            </InputLabel>\n            <NativeSelect\n              onChange={this.setScale}\n              value={this.state.selectScale}\n              input={<Input name=\"scale\" id=\"scale-native-helper\" />}\n            >\n              {scalesOptions}\n              <option key={\"other\"} value={\"other\"}>\n                Annan skala\n              </option>\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n        {this.state.selectScale === \"other\" && (\n          <Grid item xs={12}>\n            <StyledFormControl fullWidth>\n              <Input\n                type=\"text\"\n                onChange={this.setManualScale}\n                value={this.state.manualScale}\n              />\n            </StyledFormControl>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"resolution-native-helper\">\n              Upplösning\n            </InputLabel>\n            <NativeSelect\n              value={this.state.selectResolution}\n              onChange={this.setResolution}\n              input={<Input name=\"resolution\" id=\"resolution-native-helper\" />}\n            >\n              {resolutionOptions}\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n\n        <StyledFormControl fullWidth>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth={true}\n            onClick={this.exportPDF}\n          >\n            <PictureAsPdf sx={{ marginRight: 1 }} /> Skapa PDF\n          </Button>\n        </StyledFormControl>\n        {this.state.url && (\n          <StyledFormControl fullWidth>\n            <Button\n              variant=\"contained\"\n              fullWidth={true}\n              target=\"_blank\"\n              href={this.state.url}\n            >\n              <ArrowDownward sx={{ marginRight: 1 }} /> Ladda ner\n            </Button>\n          </StyledFormControl>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default withSnackbar(ExportPdfSettings);\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","state","open","this","props","abstract","icon","onClick","title","avatar","subheader","React","defaultProps","BaseWindowPlugin","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","windowVisible","onWindowOpen","setState","custom","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","description","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","prevProps","target","includes","render","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","pluginIsWidget","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","renderWindow","Export","localObserver","Observer","exportModel","ExportModel","model","toHex","str","test","match","splice","i","v","parseInt","toString","join","settings","exportUrl","scales","validateScales","copyright","autoScale","instruction","addPreviewLayer","s","split","Number","previewLayer","Vector","source","VectorSource","layerType","zIndex","name","caption","style","Style","stroke","Stroke","fill","Fill","addLayer","previewFeature","getSource","clear","removeInteraction","translate","extent","getPreviewFeature","getGeometry","getExtent","getCenter","scale","paper","center","dpi","w","y","coords","feature","Feature","geometry","Polygon","removePreview","addFeature","Translate","features","Collection","addInteraction","getLayers","getArray","filter","layer","Tile","Image","TileWMS","ImageWMS","getVisible","layers","getParams","LAYERS","url","get","workspacePrefix","coordinateSystemId","getView","getProjection","getCode","componentToHex","c","hex","length","rgbToHex","rgbString","matches","exec","r","g","b","asObject","olColorToHex","olColor","colorString","Array","isArray","fillColor","fillOpacity","strokeColor","strokeWidth","strokeLinecap","strokeDashstyle","pointRadius","pointFillColor","pointSrc","fontSize","fontColor","fontBackColor","getText","getFont","getFill","getColor","getStroke","parseFloat","getWidth","getLineCap","getLineDash","getImage","Icon","getSrc","Circle","getRadius","strokeOpacity","labelAlign","labelOutlineColor","labelOutlineWidth","as2DPairs","coordinates","getFeatures","getProperties","getStyle","getType","geom","holes","layerStyle","setStyle","getCoordinates","slice","attributes","translateVector","getFeaturesInExtent","WMTS","getUrls","axisMode","TileArcGISRest","projection","replace","spatialReference","left","bottom","right","top","callback","data","wmsLayers","vectorLayers","size","resolution","bbox","findVector","findWMS","wmtsLayers","findWMTS","arcgisLayers","findArcGIS","orientation","format","hfetch","method","credentials","headers","body","JSON","stringify","then","response","fileUrl","catch","error","alert","console","StyledFormControl","FormControl","StyledPaper","Paper","opacity","transition","ExportPdfSettings","setFormat","selectFormat","value","setResolution","selectResolution","setScale","selectScale","setCenter","val","setManualScale","startsWith","manualScale","setOrientation","selectOrientation","exportPDF","loading","getPaperMeasures","getFormat","getOrientation","getScale","getResolution","pdfUrl","newState","trimEnd","substr","enqueueSnackbar","variant","resolutions","paperFormats","Math","floor","getPreviewCenter","previewLayerVisible","addPreview","pageSize","isNaN","getPreviewPaperMeasures","preScale","getZoom","setZoom","scalesOptions","resolutionOptions","disabled","paperFormatOptions","container","item","xs","fullWidth","htmlFor","onChange","input","sx","marginRight","href","withSnackbar"],"sourceRoot":""}