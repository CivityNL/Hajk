{"version":3,"file":"static/js/3675.11c22a73.chunk.js","mappings":"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","sources":["plugins/Coordinates/CoordinatesModel.js"],"sourcesContent":["import { transform } from \"ol/proj\";\nimport Feature from \"ol/Feature\";\nimport Vector from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport Point from \"ol/geom/Point.js\";\nimport Draw from \"ol/interaction/Draw.js\";\nimport { Circle as CircleStyle, Fill, Stroke, Style, Icon } from \"ol/style\";\n\nclass CoordinatesModel {\n  constructor(settings) {\n    this.app = settings.app;\n    this.map = settings.map;\n    this.localObserver = settings.localObserver;\n    this.thousandSeparator = settings.options.thousandSeparator ?? false;\n    this.showFieldsOnStart = settings.options.showFieldsOnStart ?? false;\n\n    this.coordinates = undefined;\n    this.transformations = settings.options.transformations;\n    if (!this.transformations || this.transformations.length === 0) {\n      this.transformations = [\n        {\n          code: \"EPSG:4326\",\n          precision: 3,\n          default: false,\n          hint: \"\",\n          title: \"WGS84\",\n          xtitle: \"Lng\",\n          ytitle: \"Lat\",\n          inverseAxis: true,\n        },\n      ];\n    } else {\n      // Give default values in case none is set\n      this.transformations.forEach((t) => {\n        t.code = t.code ?? \"\";\n        t.precision = t.precision ?? 3;\n        t.default = t.default ?? false;\n        t.title = t.title ?? \"\";\n        t.xtitle = t.xtitle ?? \"\";\n        t.ytitle = t.ytitle ?? \"\";\n        t.inverseAxis = t.inverseAxis ?? \"\";\n        t.coordinates = t.coordinates ?? \"\";\n      });\n    }\n\n    this.source = new VectorSource();\n    this.vector = new Vector({\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginCoordinate\",\n      caption: \"Coordinate layer\",\n      source: this.source,\n    });\n    this.map.addLayer(this.vector);\n    this.localObserver.subscribe(\"newCoordinates\", (incomingCoords) => {\n      let transformedCoords = incomingCoords[\"coordinates\"];\n      if (\n        incomingCoords[\"proj\"] !== this.map.getView().getProjection().getCode()\n      ) {\n        transformedCoords = transform(\n          incomingCoords[\"coordinates\"],\n          incomingCoords[\"proj\"],\n          this.map.getView().getProjection().getCode()\n        );\n      }\n      this.addMarker(transformedCoords);\n    });\n  }\n\n  activate() {\n    this.addInteraction();\n    this.localObserver.publish(\"showSnackbar\");\n    if (this.showFieldsOnStart) {\n      this.localObserver.publish(\"newCoordinates\", {\n        coordinates: this.map.getView().getCenter(),\n        proj: this.map.getView().getProjection().getCode(),\n        force: true,\n      });\n    }\n  }\n\n  deactivate() {\n    this.removeInteraction();\n    this.vector.getSource().clear();\n\n    this.localObserver.publish(\"hideSnackbar\");\n  }\n\n  /**\n   * @summary Removes any previous markers and adds a new one to the given coordinates.\n   * @memberof CoordinatesModel\n   */\n  addMarker = (coordinates) => {\n    // Prepare the feature\n    const feature = new Feature({\n      geometry: new Point(coordinates),\n    });\n\n    // Style it with a nice icon\n    const styleMarker = new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        scale: 0.15,\n        src: \"marker.png\",\n      }),\n    });\n    feature.setStyle(styleMarker);\n\n    // Remove any previous markers\n    this.vector.getSource().clear();\n\n    // Add the new marker\n    this.source.addFeature(feature);\n  };\n\n  /**\n   * @summary Pans so the marker is at the center of the view\n   */\n  centerOnMarker = () => {\n    if (this.vector.getSource().getFeatures().length > 0) {\n      this.map\n        .getView()\n        .setCenter(\n          this.vector\n            .getSource()\n            .getFeatures()[0]\n            .getGeometry()\n            .getCoordinates()\n        );\n    }\n  };\n\n  /**\n   * @summary Zooms in on and centers on the marker\n   */\n  zoomOnMarker = () => {\n    if (this.vector.getSource().getFeatures().length > 0) {\n      this.map\n        .getView()\n        .fit(this.vector.getSource().getFeatures()[0].getGeometry());\n    }\n  };\n\n  /**\n   * @summary Gets the user's position and puts the marker there\n   */\n  goToUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (pos) => {\n          const point = new Point([pos.coords.longitude, pos.coords.latitude]);\n          point.transform(\n            \"EPSG:4326\",\n            this.map.getView().getProjection().getCode()\n          );\n          this.coordinates = point.getCoordinates();\n          this.localObserver.publish(\"newCoordinates\", {\n            coordinates: this.coordinates,\n            proj: this.map.getView().getProjection().getCode(),\n            force: true,\n          });\n          this.map.getView().setCenter(point.getCoordinates());\n        },\n        (error) => {\n          // If error code is 1 (User denied Geolocation), show Snackbar with instructions to enable it again\n          if (error.code === 1) {\n            this.localObserver.publish(\"location-permissions-denied\");\n          }\n        }\n      );\n    }\n  };\n\n  /**\n   * @summary Executed when the reset button is pressed and sends a request\n   * to all transformations to reset their values to empty strings.\n   * Also removes the marker\n   */\n  resetCoords = () => {\n    this.vector.getSource().clear();\n    this.localObserver.publish(\"resetCoordinates\");\n    this.coordinates = undefined;\n  };\n\n  /**\n   * @summary When draw has ended, get the coordinates for the point\n   * drawn and add a marker to those coordinates.\n   *\n   * @memberof CoordinatesModel\n   */\n  handleDrawEnd = (e) => {\n    // Grab coordinates from the Point that has been drawn\n    this.coordinates = e.feature.getGeometry().getCoordinates();\n    this.addMarker(this.coordinates);\n\n    this.localObserver.publish(\"newCoordinates\", {\n      coordinates: this.coordinates,\n      proj: this.map.getView().getProjection(),\n      force: true,\n    });\n  };\n\n  addInteraction() {\n    this.draw = new Draw({\n      source: this.source,\n      type: \"Point\",\n      style: new Style({\n        image: new CircleStyle({\n          radius: 5,\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new Fill({\n            color: \"rgba(255, 255, 255, 0.2)\",\n          }),\n        }),\n      }),\n    });\n    this.draw.on(\"drawend\", this.handleDrawEnd);\n    this.map.addInteraction(this.draw);\n    this.map.clickLock.add(\"coordinates\");\n\n    // Add snap interactions AFTER measure source has been added\n    // this will allow us to snap to the newly added source too\n    this.map.snapHelper.add(\"coordinates\");\n  }\n\n  removeInteraction() {\n    this.map.snapHelper.delete(\"coordinates\");\n    this.map.removeInteraction(this.draw);\n    this.map.clickLock.delete(\"coordinates\");\n  }\n}\n\nexport default CoordinatesModel;\n"],"names":["CoordinatesModel","settings","addMarker","coordinates","feature","Feature","geometry","Point","styleMarker","Style","image","Icon","anchor","scale","src","setStyle","vector","getSource","clear","source","addFeature","centerOnMarker","getFeatures","length","map","getView","setCenter","getGeometry","getCoordinates","zoomOnMarker","fit","goToUserLocation","navigator","geolocation","getCurrentPosition","pos","point","coords","longitude","latitude","transform","getProjection","getCode","localObserver","publish","proj","force","error","code","resetCoords","undefined","handleDrawEnd","e","this","app","thousandSeparator","options","showFieldsOnStart","transformations","forEach","t","precision","default","title","xtitle","ytitle","inverseAxis","hint","VectorSource","Vector","layerType","zIndex","name","caption","addLayer","subscribe","incomingCoords","transformedCoords","addInteraction","getCenter","removeInteraction","draw","Draw","type","style","CircleStyle","radius","stroke","Stroke","color","fill","Fill","on","clickLock","add","snapHelper","delete"],"sourceRoot":""}