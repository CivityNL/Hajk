{"version":3,"file":"static/js/841.08dd1169.chunk.js","mappings":"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","sources":["plugins/Print/AdvancedOptions.js","plugins/Print/GeneralOptions.js","plugins/Print/PrintDialog.js","plugins/Print/PrintView.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  Badge,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Popover,\n  Tooltip,\n  IconButton,\n  InputAdornment,\n} from \"@mui/material\";\nimport PaletteIcon from \"@mui/icons-material/Palette\";\nimport { TwitterPicker as ColorPicker } from \"react-color\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst FormControlContainer = styled(Grid)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n  display: \"flex\",\n}));\n\nclass AdvancedOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  toggleColorPicker = (e) => {\n    this.setState({ anchorEl: e.currentTarget });\n  };\n\n  hideColorPicker = (e) => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleMapTextColorChangeComplete = (color) => {\n    this.hideColorPicker();\n    this.props.setMapTextColor(color);\n  };\n\n  allowBottomRightPlacement = () => {\n    if (\n      (this.props.options.copyright ?? \"\").length > 0 ||\n      (this.props.options.disclaimer ?? \"\").length > 0\n    ) {\n      // no! This placement is now reserved for copyright and/or disclaimer.\n      return false;\n    }\n    return true;\n  };\n\n  renderPlacementSelect = (value, name, changeHandler, disabled) => {\n    return (\n      <Select\n        variant=\"standard\"\n        value={value}\n        onChange={changeHandler}\n        disabled={disabled}\n        inputProps={{\n          name: name,\n          id: name,\n        }}\n      >\n        <MenuItem value={\"topLeft\"}>Uppe till vänster</MenuItem>\n        <MenuItem value={\"topRight\"}>Uppe till höger</MenuItem>\n        {this.allowBottomRightPlacement() && (\n          <MenuItem value={\"bottomRight\"}>Nere till höger</MenuItem>\n        )}\n        <MenuItem value={\"bottomLeft\"}>Nere till vänster</MenuItem>\n      </Select>\n    );\n  };\n\n  renderIncludeSelect = (value, name, changeHandler) => {\n    return (\n      <Select\n        variant=\"standard\"\n        value={value}\n        onChange={changeHandler}\n        inputProps={{\n          name: name,\n          id: name,\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nej</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    const {\n      resolution,\n      handleChange,\n      mapTextColor,\n      mapTitle,\n      printComment,\n      includeNorthArrow,\n      northArrowPlacement,\n      includeScaleBar,\n      scaleBarPlacement,\n      includeLogo,\n      logoPlacement,\n      printOptionsOk,\n    } = this.props;\n    return (\n      <>\n        <Root>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField\n                value={mapTitle}\n                fullWidth={true}\n                onChange={handleChange}\n                label=\"Valfri titel\"\n                placeholder=\"Kan lämnas tomt\"\n                variant=\"standard\"\n                InputProps={{\n                  id: \"mapTitle\",\n                  name: \"mapTitle\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Badge\n                        sx={{\n                          \"& .MuiBadge-dot\": {\n                            backgroundColor: this.props.mapTextColor,\n                          },\n                        }}\n                        badgeContent=\" \"\n                        variant=\"dot\"\n                      >\n                        <Tooltip\n                          disableInteractive\n                          title=\"Titelfärg påverkar inte kartans etiketter utan styr endast färgen för kringliggande texter, så som titel, copyrighttext, etc.\"\n                        >\n                          <IconButton\n                            id=\"mapTextColor\"\n                            onClick={this.toggleColorPicker}\n                            sx={{ marginRight: 0.5 }}\n                            edge=\"start\"\n                            size=\"small\"\n                          >\n                            <PaletteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </Badge>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField\n                value={printComment}\n                fullWidth={true}\n                onChange={handleChange}\n                label=\"Valfri kommentar\"\n                placeholder=\"Kan lämnas tomt\"\n                variant=\"standard\"\n                InputProps={{\n                  id: \"printComment\",\n                  name: \"printComment\",\n                }}\n              />\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true} error={!printOptionsOk}>\n              <InputLabel variant=\"standard\" htmlFor=\"resolution\">\n                Upplösning (DPI)\n              </InputLabel>\n              <Select\n                variant=\"standard\"\n                value={resolution}\n                onChange={handleChange}\n                inputProps={{\n                  name: \"resolution\",\n                  id: \"resolution\",\n                }}\n              >\n                {this.props.options.dpis.map((value, index) => {\n                  return (\n                    <MenuItem key={\"dpis_\" + index} value={value}>\n                      {value}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              {!printOptionsOk && (\n                <FormHelperText>\n                  Bilden kommer inte kunna skrivas ut korrekt. Testa med en\n                  lägre upplösning eller mindre skala.\n                </FormHelperText>\n              )}\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeNorthArrow\">\n                  Inkludera norrpil\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeNorthArrow,\n                  \"includeNorthArrow\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"northArrowPlacement\">\n                  Placering\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  northArrowPlacement,\n                  \"northArrowPlacement\",\n                  handleChange,\n                  !includeNorthArrow\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeScaleBar\">\n                  Inkludera skalstock\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeScaleBar,\n                  \"includeScaleBar\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"scaleBarPlacement\">\n                  Placering\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  scaleBarPlacement,\n                  \"scaleBarPlacement\",\n                  handleChange,\n                  !includeScaleBar\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeLogo\">\n                  Inkludera logotyp\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeLogo,\n                  \"includeLogo\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"logoPlacement\">\n                  Placering\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  logoPlacement,\n                  \"logoPlacement\",\n                  handleChange,\n                  !includeLogo\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <Popover\n            id=\"color-picker-menu\"\n            anchorEl={this.state.anchorEl}\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.hideColorPicker}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <ColorPicker\n              inputProps={{\n                id: \"mapTextColor\",\n                name: \"mapTextColor\",\n              }}\n              color={mapTextColor}\n              colors={this.mapTextAvailableColors}\n              onChangeComplete={this.handleMapTextColorChangeComplete}\n            />\n          </Popover>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(AdvancedOptions);\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Input,\n  Tooltip,\n} from \"@mui/material\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n}));\n\nclass GeneralOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n    useCustomScale: false,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  // Handles interaction with the scale-selector. We cannot let the\n  // parent handler (handleChange) take care of this on its own since\n  // we have an extra vale (\"CUSTOM_SCALE\") that should not affect the selected\n  // scale, but instead update the state so that a scale-input is shown.\n  handleScaleSelectChange = (e) => {\n    const { handleChange } = this.props;\n    const { value } = e.target;\n    // If we're not dealing with a custom scale, just update the scale, otherwise\n    // update the local state so that the user can set a custom scale.\n    value !== \"CUSTOM_SCALE\"\n      ? handleChange(e)\n      : this.setState({ useCustomScale: true });\n  };\n\n  // Handles when the custom scale input is to be hidden, and the scale-selector\n  // is to be shown. We have to make sure to update the scale to the option closest\n  // to the current value.\n  handleDisableCustomScaleInput = () => {\n    const { handleChange, scales, scale } = this.props;\n    // First we'll have to grab the closest scale option\n    const closestScaleOption = scales.reduce((prev, curr) =>\n      Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev\n    );\n    // Then we'll update the scale to that value\n    handleChange({ target: { name: \"scale\", value: closestScaleOption } });\n    // And then we'll toggle the scale-input.\n    this.setState({ useCustomScale: false });\n  };\n\n  renderPaperSizeSelector = () => {\n    const { format, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={format}\n        onChange={handleChange}\n        inputProps={{\n          name: \"format\",\n          id: \"format\",\n        }}\n      >\n        {this.props.options.paperFormats.map((value, index) => {\n          return (\n            <MenuItem key={\"paperFormat_\" + index} value={value}>\n              {value.toUpperCase()}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderUseMarginSelector = () => {\n    const { useMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useMargin}\n        onChange={handleChange}\n        inputProps={{\n          name: \"useMargin\",\n          id: \"useMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nej</MenuItem>\n      </Select>\n    );\n  };\n\n  renderTextIconInMarginsSelector = () => {\n    const { useMargin, useTextIconsInMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useTextIconsInMargin}\n        onChange={handleChange}\n        disabled={!useMargin}\n        inputProps={{\n          name: \"useTextIconsInMargin\",\n          id: \"useTextIconsInMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nej</MenuItem>\n      </Select>\n    );\n  };\n\n  renderOrientationSelector = () => {\n    const { orientation, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={orientation}\n        onChange={handleChange}\n        inputProps={{\n          name: \"orientation\",\n          id: \"orientation\",\n        }}\n      >\n        <MenuItem value={\"landscape\"}>Liggande</MenuItem>\n        <MenuItem value={\"portrait\"}>Stående</MenuItem>\n      </Select>\n    );\n  };\n\n  renderScaleSelector = () => {\n    const { model, scales, scale } = this.props;\n    // We're gonna have to create a new array with an object for each scale-value.\n    // The objects contain the actual scale-value, along with a user-friendly label.\n    // For example, scale: 1000, label: 1:1 000\n    // We also add the extra option (\"CUSTOM_SCALE\"), allowing the user to select a\n    // a custom scale value.\n    const scaleSelectorOptions = [\n      ...scales.map((s) => {\n        return { value: s, label: model.getUserFriendlyScale(s) };\n      }),\n      { value: \"CUSTOM_SCALE\", label: \"Ange annan skala\" },\n    ];\n    return (\n      <Select\n        variant=\"standard\"\n        value={scale}\n        onChange={this.handleScaleSelectChange}\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n      >\n        {scaleSelectorOptions.map((scale, i) => {\n          // Note: it is crucial to keep the scale value (in state) divided by 1000 from what is shown to user!\n          return (\n            <MenuItem key={i} value={scale.value}>\n              {scale.label}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderScaleInput = () => {\n    return (\n      <Input\n        value={this.props.scale}\n        type=\"number\"\n        startAdornment={<InputAdornment position=\"start\">1:</InputAdornment>}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <Tooltip title=\"Visa fördefinerade val\">\n              <IconButton\n                aria-label=\"toggle custom scale selector\"\n                onClick={this.handleDisableCustomScaleInput}\n              >\n                <FormatListNumberedIcon />\n              </IconButton>\n            </Tooltip>\n          </InputAdornment>\n        }\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n        onChange={this.props.handleChange}\n      />\n    );\n  };\n\n  renderSaveAsTypeSelector = () => {\n    const { saveAsType, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={saveAsType}\n        onChange={handleChange}\n        inputProps={{\n          name: \"saveAsType\",\n          id: \"saveAsType\",\n        }}\n      >\n        <MenuItem value={\"PDF\"}>PDF</MenuItem>\n        <MenuItem value={\"PNG\"}>PNG</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    const { printOptionsOk } = this.props;\n    return (\n      <>\n        <Root>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"format\">\n              Format\n            </InputLabel>\n            {this.renderPaperSizeSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Marginaler runt kartbilden\n            </InputLabel>\n            {this.renderUseMarginSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Text och ikoner utanför kartan\n            </InputLabel>\n            {this.renderTextIconInMarginsSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"orientation\">\n              Orientering\n            </InputLabel>\n            {this.renderOrientationSelector()}\n          </StyledFormControl>\n          <StyledFormControl error={!printOptionsOk}>\n            <InputLabel variant=\"standard\" htmlFor=\"scale\">\n              Skala\n            </InputLabel>\n            {this.state.useCustomScale\n              ? this.renderScaleInput()\n              : this.renderScaleSelector()}\n            {!printOptionsOk && (\n              <FormHelperText>\n                Bilden kommer inte kunna skrivas ut korrekt. Testa med en lägre\n                upplösning eller mindre skala.\n              </FormHelperText>\n            )}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"saveAsType\">\n              Spara som\n            </InputLabel>\n            {this.renderSaveAsTypeSelector()}\n          </StyledFormControl>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(GeneralOptions);\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { withSnackbar } from \"notistack\";\n\nimport {\n  Button,\n  LinearProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from \"@mui/material\";\n\nclass PrintDialog extends React.PureComponent {\n  render() {\n    const { cancelPrint, open, saveAsType } = this.props;\n    return createPortal(\n      <Dialog disableEscapeKeyDown={true} open={open}>\n        <LinearProgress />\n        <DialogTitle>Din {`${saveAsType}`} skapas</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Det här kan ta en stund, speciellt om du har valt ett stort format\n            (A2-A3) och hög upplösning (>72 dpi). Men när allt är klart kommer{\" \"}\n            {`${saveAsType}`}-filen att laddas ner till din dator.\n            <br />\n            <br />\n            Om du inte vill vänta längre kan du avbryta utskriften genom att\n            trycka på knappen nedan.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={cancelPrint}>\n            Avbryt\n          </Button>\n        </DialogActions>\n      </Dialog>,\n      document.getElementById(\"root\")\n    );\n  }\n}\n\nexport default withSnackbar(PrintDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport PrintDialog from \"./PrintDialog\";\nimport { AppBar, Tab, Tabs } from \"@mui/material\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { Tooltip, Button } from \"@mui/material\";\n\nimport GeneralOptions from \"./GeneralOptions\";\nimport AdvancedOptions from \"./AdvancedOptions\";\n\nconst Root = styled(\"div\")(() => ({\n  margin: -10,\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\",\n}));\n\nconst StyledAppBar = styled(AppBar)(() => ({\n  top: -10,\n}));\n\nconst TabContent = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  padding: theme.spacing(1),\n  width: \"100%\",\n  height: \"100%\",\n}));\n\nconst PrintButtonContainer = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(1),\n}));\n\nclass PrintView extends React.PureComponent {\n  static propTypes = {\n    model: PropTypes.object.isRequired,\n    localObserver: PropTypes.object.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n    closeSnackbar: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {};\n\n  state = {\n    format: \"a4\", // a0-a5\n    useMargin: this.props.options.useMargin ?? false, // User can choose to have a margin around the map-image\n    useTextIconsInMargin: this.props.options.useTextIconsInMargin ?? false,\n    orientation: \"landscape\",\n    resolution: 150, // 72, 150, 300,\n    scale: this.props.scales[Math.round((this.props.scales.length - 1) / 2)], // 10000 means scale of 1:10000\n    mapTitle: \"\", // User can set a title that will get printed on the map\n    printComment: \"\", // User can set a comment that will get printed on the map\n    mapTextColor: this.props.options.mapTextColor ?? \"#FFFFFF\", // Default color of text printed on the map\n    printInProgress: false,\n    previewLayerVisible: false,\n    activeTab: 0,\n    includeNorthArrow: this.props.options.includeNorthArrow ?? false,\n    northArrowPlacement: this.props.options.northArrowPlacement || \"topLeft\",\n    includeScaleBar: this.props.options.includeScaleBar ?? true,\n    scaleBarPlacement: this.props.options.scaleBarPlacement || \"bottomLeft\",\n    includeLogo: this.props.options.includeLogo ?? true,\n    logoPlacement: this.props.options.logoPlacement || \"topRight\",\n    saveAsType: \"PDF\",\n    printOptionsOk: false,\n  };\n\n  snackbarKey = null;\n\n  // Used to store some values that will be needed for resetting the map\n  valuesToRestoreFrom = {};\n\n  constructor(props) {\n    super(props);\n    this.model = this.props.model;\n    this.localObserver = this.props.localObserver;\n    this.dims = this.props.dims;\n\n    // Add the preview layer to map (it doesn't contain any features yet!)\n    this.model.addPreviewLayer();\n\n    // If plugin is visible at start, ensure we show the preview feature too\n    if (props.visibleAtStart === true) this.state.previewLayerVisible = true;\n\n    props.localObserver.subscribe(\"print-completed\", () => {\n      this.props.closeSnackbar(this.snackbarKey);\n      this.props.enqueueSnackbar(\"Din utskrift är klar!\", {\n        variant: \"success\",\n      });\n      this.setState({ printInProgress: false });\n    });\n\n    props.localObserver.subscribe(\"print-failed-to-save\", () => {\n      this.props.closeSnackbar(this.snackbarKey);\n      this.props.enqueueSnackbar(\n        \"Utskriften gick inte att spara, kontakta systemadministratören.\",\n        {\n          variant: \"error\",\n        }\n      );\n      this.setState({ printInProgress: false });\n    });\n\n    this.localObserver.subscribe(\"error-loading-logo-image\", () => {\n      this.props.enqueueSnackbar(\"Logotypbilden kunde inte laddas in.\", {\n        variant: \"warning\",\n      });\n    });\n\n    this.localObserver.subscribe(\"error-loading-arrow-image\", () => {\n      this.props.enqueueSnackbar(\"Norrpilen kunde inte laddas in.\", {\n        variant: \"warning\",\n      });\n    });\n\n    props.localObserver.subscribe(\"showPrintPreview\", () => {\n      const scale = this.model.getFittingScale();\n      this.setState({ previewLayerVisible: true, scale: scale }, () => {\n        this.handlePotentialPrintOptionError();\n      });\n    });\n\n    props.localObserver.subscribe(\"hidePrintPreview\", () => {\n      this.setState({ previewLayerVisible: false });\n    });\n  }\n\n  initiatePrint = (e) => {\n    // Print can be initiated by submitting the <form>. In that case, we must prevent default behavior.\n    e.preventDefault();\n    // Print starts, tell the user\n    this.setState({ printInProgress: true });\n    this.snackbarKey = this.props.enqueueSnackbar(\n      \"Utskrift pågår – var god vänta…\",\n      {\n        variant: \"info\",\n        persist: true,\n      }\n    );\n\n    this.valuesToRestoreFrom = {\n      snackbarKey: this.snackbarKey,\n    };\n\n    const printOptions = this.getPrintOptions();\n    this.model.print(printOptions);\n  };\n\n  getPrintOptions = () => {\n    return {\n      useMargin: this.state.useMargin,\n      useTextIconsInMargin: this.state.useTextIconsInMargin,\n      format: this.state.format,\n      orientation: this.state.orientation,\n      resolution: this.state.resolution,\n      scale: this.state.scale,\n      mapTitle: this.state.mapTitle,\n      printComment: this.state.printComment,\n      mapTextColor: this.state.mapTextColor,\n      includeLogo: this.state.includeLogo,\n      logoPlacement: this.state.logoPlacement,\n      includeScaleBar: this.state.includeScaleBar,\n      scaleBarPlacement: this.state.scaleBarPlacement,\n      includeNorthArrow: this.state.includeNorthArrow,\n      northArrowPlacement: this.state.northArrowPlacement,\n      saveAsType: this.state.saveAsType,\n    };\n  };\n\n  /**\n   * @summary Make it possible to cancel a printout by clicking a button.\n   *\n   */\n  cancelPrint = () => {\n    this.model.cancelPrint();\n\n    // Print done, hide messages\n    this.props.closeSnackbar(this.valuesToRestoreFrom.snackbarKey);\n    this.props.enqueueSnackbar(\n      \"Du avbröt utskriften – ingen data har sparats\",\n      {\n        variant: \"warning\",\n      }\n    );\n    this.setState({ printInProgress: false });\n  };\n\n  handleChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        this.handlePotentialPrintOptionError();\n      }\n    );\n  };\n\n  handlePotentialPrintOptionError = () => {\n    const printOptions = this.getPrintOptions();\n    const printOptionsOk = this.model.desiredPrintOptionsOk(printOptions);\n    this.setState({ printOptionsOk: printOptionsOk });\n  };\n\n  setMapTextColor = (color) => {\n    this.setState({ mapTextColor: color.hex });\n  };\n\n  handleChangeTabs = (event, activeTab) => {\n    this.setState({ activeTab });\n  };\n\n  handleTabsMounted = (ref) => {\n    setTimeout(() => {\n      ref !== null && ref.updateIndicator();\n    }, 1);\n  };\n\n  renderGeneralOptions = () => {\n    const { scales } = this.props;\n    const {\n      scale,\n      useMargin,\n      useTextIconsInMargin,\n      format,\n      orientation,\n      resolution,\n      saveAsType,\n      printOptionsOk,\n    } = this.state;\n\n    return (\n      <GeneralOptions\n        scales={scales}\n        useMargin={useMargin}\n        useTextIconsInMargin={useTextIconsInMargin}\n        scale={scale}\n        format={format}\n        resolution={resolution}\n        orientation={orientation}\n        handleChange={(event) => {\n          this.handleChange(event);\n        }}\n        model={this.model}\n        saveAsType={saveAsType}\n        printOptionsOk={printOptionsOk}\n        options={this.props.options}\n      ></GeneralOptions>\n    );\n  };\n\n  renderAdvancedOptions = () => {\n    const {\n      resolution,\n      mapTitle,\n      printComment,\n      mapTextColor,\n      includeNorthArrow,\n      northArrowPlacement,\n      includeScaleBar,\n      scaleBarPlacement,\n      includeLogo,\n      logoPlacement,\n      printOptionsOk,\n    } = this.state;\n\n    return (\n      <AdvancedOptions\n        resolution={resolution}\n        mapTitle={mapTitle}\n        printComment={printComment}\n        mapTextColor={mapTextColor}\n        handleChange={(event) => {\n          this.handleChange(event);\n        }}\n        setMapTextColor={this.setMapTextColor}\n        includeNorthArrow={includeNorthArrow}\n        northArrowPlacement={northArrowPlacement}\n        includeScaleBar={includeScaleBar}\n        scaleBarPlacement={scaleBarPlacement}\n        includeLogo={includeLogo}\n        logoPlacement={logoPlacement}\n        printOptionsOk={printOptionsOk}\n        options={this.props.options}\n      ></AdvancedOptions>\n    );\n  };\n\n  a11yProps(index) {\n    return {\n      id: `print-tab-${index}`,\n      \"aria-controls\": `print-tab-${index}`,\n    };\n  }\n\n  render() {\n    const { windowVisible } = this.props;\n    const {\n      previewLayerVisible,\n      scale,\n      useMargin,\n      useTextIconsInMargin,\n      format,\n      orientation,\n      printInProgress,\n      saveAsType,\n      activeTab,\n      printOptionsOk,\n    } = this.state;\n\n    this.model.renderPreviewFeature(previewLayerVisible, {\n      scale: scale,\n      format: format,\n      orientation: orientation,\n      useMargin: useMargin,\n      useTextIconsInMargin: useTextIconsInMargin,\n    });\n\n    return (\n      <>\n        <Root>\n          <StyledAppBar position=\"sticky\" color=\"default\">\n            <Tabs\n              action={this.handleTabsMounted}\n              onChange={this.handleChangeTabs}\n              value={windowVisible ? activeTab : false} // If the window is not visible,\n              // we cannot send a proper value to the tabs-component. If we do, mui will throw an error.\n              // false is OK though, apparently.\n              variant=\"fullWidth\"\n              textColor=\"inherit\"\n            >\n              <Tooltip disableInteractive title=\"Generella inställningar\">\n                <Tab icon={<PrintIcon />} {...this.a11yProps(0)} />\n              </Tooltip>\n              <Tooltip disableInteractive title=\"Avancerade inställningar\">\n                <Tab icon={<SettingsIcon />} {...this.a11yProps(1)} />\n              </Tooltip>\n            </Tabs>\n          </StyledAppBar>\n          <TabContent>\n            {activeTab === 0 && this.renderGeneralOptions()}\n            {activeTab === 1 && this.renderAdvancedOptions()}\n            <PrintButtonContainer>\n              <Button\n                variant=\"contained\"\n                fullWidth={true}\n                color=\"primary\"\n                onClick={this.initiatePrint}\n                disabled={printInProgress || !printOptionsOk}\n              >\n                Skriv ut\n              </Button>\n            </PrintButtonContainer>\n          </TabContent>\n        </Root>\n        <PrintDialog\n          open={printInProgress}\n          saveAsType={saveAsType}\n          cancelPrint={this.cancelPrint}\n        />\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(PrintView);\n"],"names":["Root","styled","Grid","display","flexWrap","FormControlContainer","margin","theme","spacing","width","AdvancedOptions","state","anchorEl","mapTextAvailableColors","toggleColorPicker","e","setState","currentTarget","hideColorPicker","handleMapTextColorChangeComplete","color","props","setMapTextColor","allowBottomRightPlacement","options","copyright","length","disclaimer","renderPlacementSelect","value","name","changeHandler","disabled","variant","onChange","inputProps","id","renderIncludeSelect","this","resolution","handleChange","mapTextColor","mapTitle","printComment","includeNorthArrow","northArrowPlacement","includeScaleBar","scaleBarPlacement","includeLogo","logoPlacement","printOptionsOk","item","xs","fullWidth","label","placeholder","InputProps","endAdornment","position","sx","backgroundColor","badgeContent","disableInteractive","title","onClick","marginRight","edge","size","error","htmlFor","dpis","map","index","container","paddingRight","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","colors","onChangeComplete","React","withSnackbar","StyledFormControl","FormControl","GeneralOptions","useCustomScale","handleScaleSelectChange","target","handleDisableCustomScaleInput","scales","scale","reduce","prev","curr","Math","abs","renderPaperSizeSelector","format","paperFormats","toUpperCase","renderUseMarginSelector","useMargin","renderTextIconInMarginsSelector","useTextIconsInMargin","renderOrientationSelector","orientation","renderScaleSelector","model","scaleSelectorOptions","s","getUserFriendlyScale","i","renderScaleInput","type","startAdornment","renderSaveAsTypeSelector","saveAsType","PrintDialog","cancelPrint","createPortal","disableEscapeKeyDown","document","getElementById","flexDirection","height","StyledAppBar","AppBar","top","TabContent","justifyContent","padding","PrintButtonContainer","PrintView","round","printInProgress","previewLayerVisible","activeTab","snackbarKey","valuesToRestoreFrom","initiatePrint","preventDefault","enqueueSnackbar","persist","printOptions","getPrintOptions","print","closeSnackbar","event","handlePotentialPrintOptionError","desiredPrintOptionsOk","hex","handleChangeTabs","handleTabsMounted","ref","setTimeout","updateIndicator","renderGeneralOptions","renderAdvancedOptions","localObserver","dims","addPreviewLayer","visibleAtStart","subscribe","getFittingScale","windowVisible","renderPreviewFeature","action","textColor","icon","a11yProps","defaultProps"],"sourceRoot":""}