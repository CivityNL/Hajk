{"version":3,"file":"static/js/1447.f60d27c6.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/printMenu/PrintList.js","plugins/DocumentHandler/printMenu/PrintListItem.js","plugins/DocumentHandler/printMenu/PrintWindow.js","plugins/DocumentHandler/printMenu/TableOfContents.js","plugins/DocumentHandler/utils/helpers.js","plugins/DocumentHandler/utils/stateConverter.js"],"sourcesContent":["import React from \"react\";\nimport List from \"@mui/material/List\";\nimport PrintListItem from \"./PrintListItem\";\n\nclass PrintList extends React.Component {\n  getMenuItemType = (item, type) => {\n    return (\n      <PrintListItem\n        {...this.props}\n        type={type}\n        menu={item.menu}\n        icon={item.icon}\n        id={item.id}\n        level={item.level}\n        color={item.color}\n        title={item.title}\n        itemRef={item.itemRef}\n        subMenuItems={this.getSubMenuItems(item)}\n        expanded={item.expandedSubMenu}\n        colored={item.colored}\n        selected={item.selected}\n        chosenForPrint={item.chosenForPrint}\n        handleTogglePrint={this.props.handleTogglePrint}\n      ></PrintListItem>\n    );\n  };\n\n  getSubMenuItems = (item) => {\n    return item.menuItemIds.reduce((subMenuItems, subItemId) => {\n      const subItem = Object.values(this.props.documentMenu).find((i) => {\n        return i.id === subItemId;\n      });\n      if (subItem.menuItemIds.length > 0) {\n        subMenuItems = [...subMenuItems, ...this.getSubMenuItems(subItem)];\n      }\n      return [...subMenuItems, subItem];\n    }, []);\n  };\n\n  renderMenuItem = (item, id) => {\n    if (item.menuItemIds && item.menuItemIds.length > 0) {\n      return this.getMenuItemType(item, \"submenu\");\n    } else if (item.document) {\n      return this.getMenuItemType(item, \"document\");\n    } else if (item.link) {\n      return this.getMenuItemType(item, \"link\");\n    } else if (item.maplink) {\n      return this.getMenuItemType(item, \"maplink\");\n    }\n  };\n\n  render() {\n    const { documentMenu, level } = this.props;\n    return (\n      <List sx={{ width: \"100%\" }} disablePadding>\n        {Object.values(documentMenu)\n          .filter((item) => {\n            return item.level === level;\n          })\n          .map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                {this.renderMenuItem(item, item.id)}\n              </React.Fragment>\n            );\n          })}\n      </List>\n    );\n  }\n}\n\nexport default PrintList;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nimport { withTheme } from \"@emotion/react\";\nimport {\n  Checkbox,\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport PrintList from \"./PrintList\";\n\nconst StyledListItemIcon = styled(ListItemIcon)(({ theme }) => ({\n  minWidth: theme.spacing(3),\n}));\n\nconst StyledCollapseIcon = styled(ListItemIcon)(({ theme }) => ({\n  \".MuiListItemIcon-root\": {\n    minWidth: theme.spacing(4),\n  },\n}));\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  overflowWrap: \"break-word\",\n  \".MuiListItem-root\": {\n    borderLeft: `${theme.spacing(1)} solid ${theme.palette.background.paper}`,\n    \"&.Mui-selected\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&.Mui-selected:hover\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&:hover\": {\n      borderColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nclass PrintListItem extends React.PureComponent {\n  #getListTitle = () => {\n    const { title } = this.props;\n    return <ListItemText>{title}</ListItemText>;\n  };\n\n  #getCollapseIcon = () => {\n    const { title, expanded } = this.props;\n\n    return expanded ? (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Minimera submeny</span>}\n        <ExpandLess />\n      </StyledCollapseIcon>\n    ) : (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Maximera submeny</span>}\n        <ExpandMore />\n      </StyledCollapseIcon>\n    );\n  };\n\n  #hasSubMenu = () => {\n    const { subMenuItems } = this.props;\n    return subMenuItems && subMenuItems.length > 0;\n  };\n\n  #handleMenuButtonClick = (type, id) => {\n    const { localObserver } = this.props;\n    localObserver.publish(`print-${type}-clicked`, id);\n  };\n\n  #getMenuItemStyle = () => {\n    const { theme, level, color, colored } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return colored\n      ? {\n          paddingLeft: theme.spacing(1 + level * 3),\n          borderLeft: `${theme.spacing(0.5)} solid ${color}`,\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        }\n      : {\n          paddingLeft: theme.spacing(1 + level * 3),\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        };\n  };\n\n  render() {\n    const {\n      type,\n      selected,\n      subMenuItems,\n      expanded,\n      level,\n      title,\n      id,\n      chosenForPrint,\n    } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return (\n      <>\n        <StyledListItem\n          divider\n          selected={selected}\n          button\n          ref={this.props.itemRef}\n          size=\"small\"\n          disableGutters\n          aria-controls={hasSubMenu ? `submenu_${id}` : null}\n          aria-expanded={expanded}\n          onClick={() => {\n            this.#handleMenuButtonClick(type, id);\n          }}\n          sx={this.#getMenuItemStyle()}\n        >\n          <StyledListItemIcon>\n            <Checkbox\n              color=\"primary\"\n              checked={chosenForPrint}\n              onChange={(e) => {\n                this.props.handleTogglePrint(this.props.id);\n              }}\n              onClick={(e) => e.stopPropagation()}\n              edge=\"start\"\n              tabIndex={-1}\n              disableRipple\n            />\n          </StyledListItemIcon>\n          {title && this.#getListTitle()}\n          {hasSubMenu && this.#getCollapseIcon()}\n        </StyledListItem>\n        {hasSubMenu && (\n          <Collapse id={`submenu_${id}`} in={expanded} timeout={200}>\n            <PrintList\n              {...this.props}\n              level={level + 1}\n              documentMenu={subMenuItems}\n              handleTogglePrint={this.props.handleTogglePrint}\n            ></PrintList>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTheme(PrintListItem);\n","import React, { useEffect } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { createPortal } from \"react-dom\";\nimport { withSnackbar } from \"notistack\";\n\nimport {\n  styled,\n  StyledEngineProvider,\n  ThemeProvider,\n} from \"@mui/material/styles\";\n\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  FormControlLabel,\n  Grid,\n  LinearProgress,\n  Typography,\n} from \"@mui/material\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\n\nimport { deepMerge } from \"utils/DeepMerge\";\n\nimport PrintList from \"./PrintList\";\nimport TableOfContents from \"./TableOfContents\";\nimport { getNormalizedMenuState } from \"../utils/stateConverter\";\nimport { hasSubMenu } from \"../utils/helpers\";\n\nconst GridGridContainer = styled(Grid)(({ theme }) => ({\n  padding: theme.spacing(4),\n  height: \"100%\",\n}));\n\nconst GridMiddleContainer = styled(Grid)(({ theme }) => ({\n  overflowX: \"auto\",\n  flexBasis: \"100%\",\n  marginTop: theme.spacing(2),\n}));\n\nconst GridHeaderContainer = styled(Grid)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n}));\n\nconst GridSettingsContainer = styled(Grid)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n}));\n\nconst GridFooterContainer = styled(Grid)(({ theme }) => ({\n  flexBasis: \"10%\",\n}));\n\nconst maxHeight = 950;\nconst imageResizeRatio = 0.7;\n\nfunction ComponentWithRenderCallback({ callback, children }) {\n  useEffect(() => callback());\n\n  return <div>{children}</div>;\n}\n\nclass PrintWindow extends React.PureComponent {\n  state = {\n    printLinks: true,\n    printText: true,\n    printImages: true,\n    printMaps: false,\n    allDocumentsToggled: false,\n    tocPrintMode: this.props.options?.tableOfContents?.printMode ?? \"none\",\n    menuInformation: this.createMenu(),\n    printContent: undefined,\n    pdfLoading: false,\n    isAnyDocumentSelected: false,\n  };\n\n  internalId = 0;\n\n  #handleSubMenuClicked = (id) => {\n    this.#setItemStateProperties(id);\n  };\n\n  #setItemStateProperties = (idClicked) => {\n    return new Promise((resolve) => {\n      const currentState = { ...this.state.menuInformation };\n      const clickedItem = currentState[idClicked];\n      const newState = Object.values(currentState).reduce((items, item) => {\n        const isClickedItem = item.id === idClicked;\n        if (isClickedItem) {\n          return {\n            ...items,\n            [item.id]: this.#setClickedItemProperties(item),\n          };\n        } else {\n          return {\n            ...items,\n            [item.id]: this.#setNonClickedItemProperties(\n              item,\n              currentState,\n              clickedItem\n            ),\n          };\n        }\n      }, {});\n\n      this.setState({ menuInformation: newState }, resolve);\n    });\n  };\n\n  #setClickedItemProperties = (clickedItem) => {\n    let newItem = { ...clickedItem };\n    return {\n      ...clickedItem,\n      selected: !newItem.hasSubMenu,\n      expandedSubMenu: newItem.hasSubMenu\n        ? !newItem.expandedSubMenu\n        : newItem.expandedSubMenu,\n    };\n  };\n\n  #setNonClickedItemProperties = (item, currentState, clickedItem) => {\n    return {\n      ...item,\n      expandedSubMenu:\n        clickedItem.allParents.indexOf(item.id) !== -1\n          ? true\n          : item.expandedSubMenu,\n      selected: clickedItem.hasSubMenu ? item.selected : false,\n    };\n  };\n\n  componentDidMount = () => {\n    this.props.localObserver.subscribe(\n      \"chapter-components-appended\",\n      (renderedChapters) => {\n        this.setState(\n          {\n            printContent: renderedChapters,\n          },\n          () => {\n            this.printContents();\n          }\n        );\n      }\n    );\n\n    this.props.localObserver.subscribe(\"print-submenu-clicked\", (id) => {\n      this.#handleSubMenuClicked(id);\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.props.localObserver.unsubscribe(\"chapter-components-appended\");\n  };\n\n  resizeImage = (img) => {\n    img.height = img.getBoundingClientRect().height * imageResizeRatio;\n    img.width = img.clientWidth * imageResizeRatio;\n  };\n\n  imageFitsOnePage = (img) => {\n    return img.getBoundingClientRect().height < maxHeight * 0.9;\n  };\n\n  loadImage = (img) => {\n    return new Promise((resolve, reject) => {\n      img.onload = () => {\n        if (this.imageFitsOnePage(img)) {\n          resolve(img);\n        } else {\n          this.resizeImage(img);\n          resolve(img);\n        }\n      };\n      img.onerror = () => reject(img);\n    });\n  };\n\n  customRender = (element, container) => {\n    // Since the ThemeProvider seems to cache the theme in some way, we have to make sure to\n    // create a new theme-reference to make sure that the correct theme is used when rendering.\n    // If we don't create a new reference, the custom-theme will be overridden by the standard MUI-theme\n    // since the standard MUI-theme is refreshed (and thereby has the highest css-specificity) sometimes.\n    // This is quite messy, but get's the job done. See issue #999 for more info.\n    const theme = deepMerge(this.props.customTheme || this.props.theme, {});\n    // Make sure to render the components using the custom theme if it exists:\n    return new Promise((resolve) => {\n      const rootElement = createRoot(container);\n      rootElement.render(\n        <StyledEngineProvider>\n          <ThemeProvider theme={theme}>\n            <ComponentWithRenderCallback\n              callback={() => {\n                resolve();\n              }}\n            >\n              {element}\n            </ComponentWithRenderCallback>\n          </ThemeProvider>\n        </StyledEngineProvider>\n      );\n    });\n  };\n\n  createPrintElement = (id) => {\n    let div = document.createElement(\"div\");\n    div.id = id;\n    return div;\n  };\n\n  renderToc = () => {\n    this.toc = this.createPrintElement(\"toc\");\n    return this.customRender(\n      <TableOfContents\n        documentMenuState={this.state.menuInformation}\n        allDocuments={this.props.model.allDocuments}\n        mode={this.state.tocPrintMode}\n      />,\n      this.toc\n    );\n  };\n\n  renderContent = () => {\n    this.content = this.createPrintElement(\"content\");\n    return this.customRender(this.state.printContent, this.content);\n  };\n\n  areAllImagesLoaded = () => {\n    return Promise.allSettled(\n      [...this.content.getElementsByTagName(\"img\")].map((img) => {\n        return this.loadImage(img);\n      })\n    );\n  };\n\n  handleNewWindowBlocked = () => {\n    window.alert(\n      \"Please allow opening of popup windows in order to print this document.\"\n    );\n\n    this.setState({\n      pdfLoading: false,\n      printContent: undefined,\n      printMaps: false,\n    });\n\n    return null;\n  };\n\n  createPrintWindow = () => {\n    const printWindow = window.open(\"\", \"PRINT\");\n\n    if (printWindow === null) {\n      return this.handleNewWindowBlocked();\n    }\n\n    printWindow.document.head.insertAdjacentHTML(\n      \"beforeend\",\n      ` <title>${document.title}</title>\n        <style>\n          @page {\n            size: A4;\n            margin: 25mm 25mm 25mm 25mm;\n          }\n          @media print {\n            html,\n            body {\n              height: 297mm;\n              width: 210mm;\n            }\n            h1,\n            h2,\n            h3,\n            h4,\n            h5,\n            h6 {\n              page-break-after: avoid;\n            }\n            .MuiTypography-body1 {\n              page-break-before: avoid;\n            }\n            .MuiBox-root {\n              page-break-inside: avoid;\n            }\n          }        \n        </style>`\n    );\n\n    return printWindow;\n  };\n\n  clearPrintContainers = () => {\n    this.toc = null;\n    this.content = null;\n  };\n\n  handlePrintCompleted = () => {\n    // Since we've altered the theme while printing, we must refresh to make sure\n    // the original theme has the highest specificity when the printing is done.\n    // Otherwise the entire application will follow the theming used in the print-contents.\n    // FIXME: This might not be needed after the upgrade to React 18. Let's ensure that's the\n    // case and remove if so.\n    // this.props.app.refreshMUITheme();\n\n    // Then we'll update the view\n    this.toggleAllDocuments(false);\n    this.setState({\n      pdfLoading: false,\n      printContent: undefined,\n      menuInformation: this.createMenu(),\n    });\n  };\n\n  addPageBreaksBeforeHeadings = (printContent) => {\n    const headings = printContent.querySelectorAll([\"h1\", \"h2\"]);\n\n    // We don't want page breaks before a H2 if there is a H1 immediately before.\n    // In this case the H1 is the group parent heading.\n    let isAfterH1 = false;\n    let isConsecutiveH1 = false;\n\n    for (let i = 0; i < headings.length; i++) {\n      if (headings[i].nodeName === \"H1\" && isAfterH1) {\n        isConsecutiveH1 = true;\n      }\n      if (headings[i].nodeName === \"H1\") {\n        isAfterH1 = true;\n      }\n\n      //H1s are group headings and should start on a new page.\n      if (\n        headings[i].nodeName === \"H1\" &&\n        this.state.tocPrintMode !== \"none\" &&\n        !isConsecutiveH1\n      ) {\n        headings[i].style.pageBreakBefore = \"always\";\n        headings[i].style.breakBefore = \"none\";\n      }\n\n      if (i !== 0 && headings[i].nodeName === \"H2\" && !isAfterH1) {\n        headings[i].style.pageBreakBefore = \"always\";\n        headings[i].style.breakBefore = \"none\";\n      }\n\n      if (headings[i].nodeName !== \"H1\") {\n        isAfterH1 = false;\n      }\n    }\n  };\n\n  // Creates a new window, appends all elements that should be printed, and invokes\n  // window.print(), allowing the user to save the document as a PDF (or print it straight away).\n  printContents = () => {\n    // We're gonna want to make sure everything is rendered...\n    Promise.all([\n      this.state.tocPrintMode !== \"none\" && this.renderToc(),\n      this.renderContent(),\n    ]).then(() => {\n      // We're also gonna want to make sure all images has been loaded\n      this.areAllImagesLoaded().then(() => {\n        // Then we can create an element that will hold our TOC and print-content...\n        const printContent = document.createElement(\"div\");\n        // ...append the TOC to the element (only if applicable)...\n        this.toc && printContent.appendChild(this.toc);\n        // ...and append the actual content.\n        printContent.appendChild(this.content);\n        // Then we'll make sure to create page-breaks before headings to\n        // create a more appealing document.\n        this.addPageBreaksBeforeHeadings(printContent);\n        // Then we'll create and open a new window in the browser\n        const newWindow = this.createPrintWindow();\n\n        // We're gonna need to get all the styles into the new window...\n        // The styling is applied differently if we're in dev- or prod-mode.\n        // (Both are handled with this solution). Let's loop every emotion-style-tag\n        for (const style of document.querySelectorAll(\"[data-emotion]\")) {\n          // Create a new style-tag\n          const s = document.createElement(\"style\");\n          // Append an empty text-node (TODO: Why? :) )\n          s.appendChild(document.createTextNode(\"\"));\n          // There's gonna be information in either the style-sheet or in the textContent\n          // depending on if we're in dev- or prod-mode.\n          const { textContent, sheet } = style;\n          // In development we'll have pure text styling the components...\n          if (textContent) {\n            // In that case we can just append a text-node with that text\n            s.appendChild(document.createTextNode(textContent));\n            newWindow.document.head.appendChild(s);\n            // While in prod, we'll have a stylesheet\n          } else {\n            // We have to append the new style to the document, otherwise the sheet will be null.\n            newWindow.document.head.appendChild(s);\n            for (const rule of sheet.cssRules) {\n              try {\n                s.sheet.insertRule(rule.cssText);\n              } catch (error) {\n                console.warn(`Could not insert rule: ${rule?.cssText}`);\n              }\n            }\n          }\n        }\n\n        // Add our recently-created DIV to the new window's document\n        newWindow.document.body.appendChild(printContent);\n\n        // Invoke browser's print dialog - this will block the thread\n        // until user does something with it.\n        newWindow.print();\n\n        // Once the print dialog has disappeared, let's close the new window\n        newWindow.close();\n\n        // When the user closes the print-window we have to do some cleanup...\n        this.handlePrintCompleted();\n      });\n    });\n  };\n\n  handleCheckboxChange = (chapter) => {\n    const { model } = this.props;\n    let newChapterInformation = [...this.state.chapterInformation];\n\n    let toggledChapter = model.getChapterById(\n      newChapterInformation,\n      chapter.id\n    );\n    toggledChapter.chosenForPrint = !toggledChapter.chosenForPrint;\n    this.toggleSubChapters(toggledChapter, toggledChapter.chosenForPrint);\n\n    this.setState({\n      chapterInformation: newChapterInformation,\n      allDocumentsToggled: false,\n    });\n  };\n\n  setInitialMenuItemProperties(menuItem) {\n    if (hasSubMenu(menuItem)) {\n      menuItem.hasSubMenu = true;\n      menuItem.menu.forEach((subMenuItem) => {\n        this.setInitialMenuItemProperties(subMenuItem, menuItem);\n      });\n    }\n  }\n\n  removeNonPrintableDocuments(documents) {\n    /*\n     * Remove menu items that should not appear in the print menu.\n     * Items that should be removed are: items without a document that are not a group parent. (maplinks, links)\n     */\n    let removedIds = [];\n\n    Object.keys(documents).forEach((key) => {\n      if (documents[key].maplink.trim() || documents[key].link.trim()) {\n        removedIds.push(parseInt(key));\n        delete documents[key];\n      }\n    });\n\n    Object.keys(documents).forEach((key) => {\n      let item = documents[key];\n\n      //if a document has been removed from the printMenu, also remove its id from the children array of other documents.\n      let newChildren = item.allChildren.filter(\n        (child) => !removedIds.includes(child)\n      );\n      item.allChildren = newChildren;\n      //also remove its id from the menuItemIds of other documents.\n      let newMenuItemIds = item.menuItemIds.filter(\n        (id) => !removedIds.includes(id)\n      );\n      item.menuItemIds = newMenuItemIds;\n    });\n  }\n\n  createMenu() {\n    /* \n    Create a normalized menu structure for the print menu, similar to that of the panel menu, but only for printable documents. \n    */\n    const { options } = this.props;\n\n    const modelDocuments = this.props.model.allDocuments;\n    const newOptions = { ...options };\n    const menuConfig = { ...newOptions }.menuConfig;\n    const menuConfigClone = JSON.parse(JSON.stringify(menuConfig));\n    const menuStructure = getNormalizedMenuState(menuConfigClone.menu);\n    let chapterInformation = this.props.model.getAllChapterInfo();\n\n    const keys = Object.keys(menuStructure);\n    const idOffset = keys.length + 1; //used to give new ids, so printMenu items do not get the same id as panelMenu items\n\n    keys.forEach((key) => {\n      let document = menuStructure[key];\n      const offsetChildren = document.allChildren.map((id) => (id += idOffset));\n      const offsetParents = document.allParents.map((id) => (id += idOffset));\n      const offsetMenuItemIds = document.menuItemIds.map(\n        (id) => (id += idOffset)\n      );\n\n      document.id += idOffset;\n      document.parentId = document.parentId\n        ? (document.parentId += idOffset)\n        : null;\n      document.allChildren = offsetChildren;\n      document.allParents = offsetParents;\n      document.menuItemIds = offsetMenuItemIds;\n\n      document.chosenForPrint = false;\n      document.colored = true;\n\n      //add the table of contents settings from the document json.\n      if (document.document) {\n        let modelDoc = modelDocuments.find(\n          (modelDoc) => modelDoc.documentFileName === document.document\n        );\n        document.tocChapterLevels =\n          modelDoc?.tableOfContents?.chapterLevelsToShow || 100;\n      }\n      if (document.document) {\n        document.chapters = [];\n        let documentChapters = chapterInformation.filter(\n          (chapter) => chapter.documentFileName === document.document\n        );\n        documentChapters.forEach((chapter) => document.chapters.push(chapter));\n      }\n    });\n\n    let menuWithOffset = {};\n    keys.forEach((key) => {\n      let keyOffset = parseInt(key) + idOffset;\n      menuWithOffset[keyOffset] = menuStructure[key];\n    });\n\n    this.removeNonPrintableDocuments(menuWithOffset);\n    return menuWithOffset;\n  }\n\n  toggleSubDocuments(documentId, checked, menuState) {\n    const subDocuments = menuState[documentId].allChildren;\n    subDocuments.forEach((subDocId) => {\n      const updateDoc = {\n        ...menuState[subDocId],\n        chosenForPrint: checked,\n      };\n      menuState[subDocId] = updateDoc;\n      this.toggleSubDocuments(subDocId, checked, menuState);\n    });\n\n    return menuState;\n  }\n\n  toggleParentChecked(documentId, menuState) {\n    const parentId = menuState[documentId].parentId;\n    const updatedParent = { ...menuState[parentId], chosenForPrint: true };\n    menuState[parentId] = updatedParent;\n\n    if (menuState[parentId].parentId) {\n      menuState = this.toggleParentChecked(parentId, menuState);\n    }\n\n    return menuState;\n  }\n\n  toggleParentUnchecked(documentId, menuState) {\n    const parentId = menuState[documentId].parentId;\n\n    //if the parent has other children that are checked, do not toggle the parent.\n    const hasOtherCheckedChildren =\n      menuState[parentId].allChildren.filter((child) => {\n        if (child.id !== documentId && menuState[child].chosenForPrint) {\n          return true;\n        } else return false;\n      }).length > 0;\n\n    if (hasOtherCheckedChildren) {\n      return menuState;\n    }\n\n    const updatedParent = { ...menuState[parentId], chosenForPrint: false };\n    menuState[parentId] = updatedParent;\n\n    if (menuState[parentId].parentId) {\n      menuState = this.toggleParentUnchecked(parentId, menuState);\n    }\n    return menuState;\n  }\n\n  toggleChosenForPrint = (documentId) => {\n    const current = { ...this.state.menuInformation };\n    const shouldPrint = !current[documentId].chosenForPrint;\n\n    const updateDoc = {\n      ...current[documentId],\n      chosenForPrint: !current[documentId].chosenForPrint,\n    };\n    current[documentId] = updateDoc;\n\n    /*\n    update child documents (toggle subDocuments does not set state itself, but returns an object\n    that we can use to update the state along with out parent document, so we only make one state update.) \n    */\n    let updatedMenuState = this.toggleSubDocuments(\n      documentId,\n      shouldPrint,\n      current\n    );\n\n    if (current[documentId].parentId && shouldPrint) {\n      updatedMenuState = this.toggleParentChecked(documentId, updatedMenuState);\n    }\n\n    if (current[documentId].parentId && !shouldPrint) {\n      updatedMenuState = this.toggleParentUnchecked(\n        documentId,\n        updatedMenuState\n      );\n    }\n\n    this.setState({ menuInformation: updatedMenuState }, () => {\n      this.setIsAnyDocumentSelected();\n    });\n  };\n\n  toggleAllDocuments = (toggled) => {\n    const menuState = { ...this.state.menuInformation };\n\n    Object.keys(menuState).forEach((key) => {\n      const updateDoc = {\n        ...menuState[key],\n        chosenForPrint: toggled,\n      };\n      menuState[key] = updateDoc;\n    });\n\n    this.setState({\n      allDocumentsToggled: toggled,\n      menuInformation: menuState,\n      isAnyDocumentSelected: toggled,\n    });\n  };\n\n  removeTagsNotSelectedForPrint = (chapter) => {\n    const { printImages, printText, printLinks } = this.state;\n\n    let elementsToRemove = [];\n    const div = document.createElement(\"div\");\n    div.innerHTML = chapter.html;\n\n    if (!printLinks) {\n      Array.from(div.getElementsByTagName(\"a\")).forEach((element) => {\n        elementsToRemove.push(element);\n      });\n    }\n    if (!printImages) {\n      Array.from(div.getElementsByTagName(\"figure\")).forEach((element) => {\n        elementsToRemove.push(element);\n      });\n    }\n    if (!printText) {\n      Array.from(div.querySelectorAll(\"p, h1, h2, h3, h4, h5, h6\")).forEach(\n        (element) => {\n          elementsToRemove.push(element);\n        }\n      );\n      chapter.header = \"\";\n    }\n\n    //ensure links to internal documents are no longer clickable.\n    let documentLinks = div.querySelectorAll(\"[data-document]\");\n    for (let i = 0; i < documentLinks.length; i++) {\n      documentLinks[i].setAttribute(\"printMode\", \"true\");\n      documentLinks[i].href = \"#\";\n    }\n\n    for (let i = 0; i < elementsToRemove.length; i++) {\n      elementsToRemove[i].parentNode.removeChild(elementsToRemove[i]);\n    }\n\n    chapter.html = div.innerHTML;\n    return chapter;\n  };\n\n  prepareChapterForPrint = (chapter) => {\n    if (chapter.chapters && chapter.chapters.length > 0) {\n      chapter.chapters.forEach((subChapter) => {\n        if (subChapter.chapters && subChapter.chapters.length > 0) {\n          return this.prepareChapterForPrint(subChapter);\n        } else {\n          subChapter = this.removeTagsNotSelectedForPrint(subChapter);\n        }\n      });\n    }\n    chapter = this.removeTagsNotSelectedForPrint(chapter);\n    return chapter;\n  };\n\n  setIsAnyDocumentSelected = () => {\n    const keys = Object.keys(this.state.menuInformation);\n    let isAnyDocumentSelected = false;\n\n    for (let i = 0; i < keys.length; i++) {\n      if (this.state.menuInformation[keys[i]].chosenForPrint) {\n        isAnyDocumentSelected = true;\n      }\n    }\n    this.setState({ isAnyDocumentSelected: isAnyDocumentSelected });\n  };\n\n  createHeaderItems = (menuItem) => {\n    return { isGroupHeader: true, title: menuItem.title, id: menuItem.id };\n  };\n\n  getDocumentsToPrint = () => {\n    const { menuInformation } = this.state;\n\n    const documentIdsForPrint = Object.keys(menuInformation).filter(\n      (key) => menuInformation[key].chosenForPrint\n    );\n\n    //create those without documents (header items) as a header item object.\n    const documentNamesForPrint = documentIdsForPrint.map(\n      (id) => menuInformation[id].document\n    );\n\n    //TODO - now that we get the document chapters earlier, do we need to get the document here?\n    const originalDocs = this.props.model.getDocuments(documentNamesForPrint);\n\n    let docs = originalDocs.map((doc) => {\n      if (doc) {\n        let menuDocKey = Object.keys(menuInformation).find(\n          (key) => menuInformation[key].document === doc.documentFileName\n        );\n        return {\n          documentFileName: doc.documentFileName,\n          tableOfContents: doc.tableOfContents,\n          chapters: menuInformation[menuDocKey].chapters,\n        };\n      } else {\n        return undefined;\n      }\n    });\n\n    /*\n    where getDocuments returns an empty string. This is a menuItem without a corresponding document, which\n    is a menu parent.\n    */\n    const docsIncludingGroupParent = docs.map((doc, index) => {\n      if (doc === undefined) {\n        return this.createHeaderItems(\n          menuInformation[documentIdsForPrint[index]]\n        );\n      }\n      return doc;\n    });\n\n    let newDocs = [];\n\n    docsIncludingGroupParent.forEach((document) => {\n      if (document?.chapters?.length) {\n        let preparedChapters = [];\n        document?.chapters.forEach((chapter) => {\n          preparedChapters.push(this.prepareChapterForPrint(chapter));\n        });\n        document.chapters = preparedChapters;\n      }\n      newDocs.push(document);\n    });\n\n    return newDocs;\n  };\n\n  createPDF = () => {\n    this.setState({ pdfLoading: true });\n    const documentsToPrint = this.getDocumentsToPrint();\n    this.props.localObserver.publish(\n      \"append-document-components\",\n      documentsToPrint\n    );\n  };\n\n  renderCreatePDFButton() {\n    return (\n      <GridFooterContainer\n        item\n        container\n        alignContent=\"center\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={this.state.pdfLoading || !this.state.isAnyDocumentSelected}\n          startIcon={<OpenInNewIcon />}\n          onClick={this.createPDF}\n        >\n          <Typography\n            style={{ marginRight: \"20px\", marginLeft: \"20px\" }}\n            justify=\"center\"\n          >\n            Skriv ut\n          </Typography>\n        </Button>\n      </GridFooterContainer>\n    );\n  }\n\n  renderLoadingDialog = () => {\n    return (\n      <>\n        {createPortal(\n          <Dialog disableEscapeKeyDown={true} open={this.state.pdfLoading}>\n            <LinearProgress />\n            <DialogTitle>Din PDF skapas</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Det här kan ta en stund, speciellt om du har valt att skriva ut\n                många dokument.\n                <br />\n                <br />\n              </DialogContentText>\n            </DialogContent>\n          </Dialog>,\n          document.getElementById(\"root\")\n        )}\n      </>\n    );\n  };\n\n  render() {\n    const { togglePrintWindow, localObserver, documentWindowMaximized } =\n      this.props;\n    const { menuInformation } = this.state;\n    return (\n      <GridGridContainer container wrap=\"nowrap\" direction=\"column\">\n        <GridHeaderContainer alignItems=\"center\" item container>\n          <Grid item xs={4}>\n            <Button\n              color=\"primary\"\n              style={{ paddingLeft: 0 }}\n              startIcon={<ArrowBackIcon />}\n              onClick={togglePrintWindow}\n            >\n              <Typography justify=\"center\">Tillbaka</Typography>\n            </Button>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography align=\"center\" variant=\"h6\">\n              Skapa PDF\n            </Typography>\n          </Grid>\n        </GridHeaderContainer>\n\n        <GridSettingsContainer container item>\n          <Typography variant=\"h6\">Inställningar</Typography>\n\n          <Grid xs={12} item>\n            <FormControlLabel\n              value=\"Välj alla dokument\"\n              control={\n                <Checkbox\n                  color=\"primary\"\n                  checked={this.state.allDocumentsToggled}\n                  onChange={() =>\n                    this.toggleAllDocuments(!this.state.allDocumentsToggled)\n                  }\n                />\n              }\n              label=\"Välj alla dokument\"\n              labelPlacement=\"end\"\n            />\n          </Grid>\n        </GridSettingsContainer>\n\n        <Typography variant=\"h6\">Valt innehåll</Typography>\n\n        <GridMiddleContainer item container>\n          <PrintList\n            localObserver={localObserver}\n            documentMenu={menuInformation}\n            level={0}\n            handleTogglePrint={this.toggleChosenForPrint}\n          />\n        </GridMiddleContainer>\n\n        {documentWindowMaximized && this.renderCreatePDFButton()}\n        {this.renderLoadingDialog()}\n      </GridGridContainer>\n    );\n  }\n}\n\nexport default withSnackbar(PrintWindow);\n","import React from \"react\";\nimport { withTheme } from \"@emotion/react\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport List from \"@mui/material/List\";\nimport { Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nclass TableOfContents extends React.PureComponent {\n  state = {\n    titlesAndLevels: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.titlesAndLevels = [];\n    this.previousGroupHeader = false;\n  }\n\n  componentDidMount = () => {\n    const { documentMenuState, allDocuments, mode } = this.props;\n\n    const tocStructure = this.createTocStructure(\n      documentMenuState,\n      allDocuments,\n      mode\n    );\n    Object.keys(tocStructure).forEach((key) => {\n      this.setTitlesAndLevels(tocStructure[key], mode);\n    });\n\n    this.setState({ titlesAndLevels: this.titlesAndLevels });\n  };\n\n  createTocStructure(documentMenuState, allDocuments) {\n    let menu = { ...documentMenuState };\n    //add the chapters from all documents onto the documentMenuState\n    Object.keys(menu).forEach((key) => {\n      let menuDoc = menu[key];\n      if (menuDoc.document) {\n        //get the corresponding chapters from allDocuments.\n        let jsonDoc = allDocuments.find(\n          (doc) => doc.documentFileName === menuDoc.document\n        );\n        //add the chapters to our doc in the menuState.\n        menu[key].chapters = jsonDoc.chapters;\n      }\n    });\n    return menu;\n  }\n\n  setTitlesAndLevels = (document, mode) => {\n    //If the chosen config for table of contents is to only include printed documents in the toc. skip the document if it's not chosen for print.\n    if (mode === \"partial\") {\n      if (document.chosenForPrint !== true) {\n        return;\n      }\n    }\n\n    let levelsToShow = document?.tocChapterLevels || 100;\n    let indentationLevel = 0;\n    let level = 0;\n\n    /*If a document is under a menu parent, push the level up, as the levelsToShow property\n    in the document configuration is specific to that document, and does not take into account. that having\n    a parent document may change it's level*/\n    if (document.allParents.length) {\n      level++;\n      levelsToShow++;\n      indentationLevel += document.allParents.length;\n    }\n\n    //Add the menu document title if it is a menu parent that just holds other documents;\n    if (!document.document) {\n      this.titlesAndLevels.push({\n        title: document.title,\n        level: indentationLevel,\n        chosenForPrint: document.chosenForPrint,\n      });\n    }\n\n    //add the documents chapters to the table of contents.\n    if (document.chapters) {\n      level++;\n      if (level <= levelsToShow) {\n        document.chapters.forEach((chapter) => {\n          this.titlesAndLevels.push({\n            title: chapter.header,\n            level: indentationLevel,\n          });\n          this.setChapterTitlesAndLevels(\n            chapter,\n            levelsToShow,\n            level + 1,\n            indentationLevel + 1\n          );\n        });\n      }\n    }\n  };\n\n  setChapterTitlesAndLevels = (\n    chapter,\n    levelsToShow,\n    level,\n    indentationLevel\n  ) => {\n    if (chapter.chapters && level <= levelsToShow) {\n      chapter.chapters.forEach((subChapter) => {\n        this.titlesAndLevels.push({\n          title: subChapter.header,\n          level: indentationLevel,\n        });\n        this.setChapterTitlesAndLevels(\n          subChapter,\n          levelsToShow,\n          level + 1,\n          indentationLevel + 1\n        );\n      });\n    }\n  };\n\n  render() {\n    const { titlesAndLevels } = this.state;\n    return (\n      <Grid container sx={{ pageBreakAfter: \"always\" }}>\n        <Typography variant=\"h4\" gutterBottom={true}>\n          Innehållsförteckning\n        </Typography>\n        <List style={{ width: \"100%\" }} disablePadding>\n          {titlesAndLevels.map((document, index) => {\n            return document.chosenForPrint ? (\n              <ListItem\n                key={index}\n                dense={true}\n                sx={{\n                  paddingLeft: 1 + document.level * 3,\n                }}\n              >\n                <ListItemText>{document.title}</ListItemText>\n              </ListItem>\n            ) : (\n              <ListItem\n                dense={true}\n                key={index}\n                sx={{\n                  paddingLeft: 1 + document.level * 3,\n                }}\n              >\n                <ListItemText>{document.title}</ListItemText>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Grid>\n    );\n  }\n}\n\nexport default withTheme(TableOfContents);\n","export const splitAndTrimOnCommas = (searchString) => {\n  return searchString.split(\",\").map((string) => {\n    return string.trim();\n  });\n};\n\nexport const getStringArray = (searchString) => {\n  let tempStringArray = splitAndTrimOnCommas(searchString);\n  return tempStringArray.join(\" \").split(\" \");\n};\n\nexport const hasSubMenu = (item) => {\n  return item.menu && item.menu.length > 0;\n};\n\nexport const flattenChaptersTree = (chapters) => {\n  return chapters.reduce((acc, chapter) => {\n    if (chapter.header) {\n      let chapterStrippedFromSubChapters = { ...chapter };\n      chapterStrippedFromSubChapters.chapters = [];\n      acc = [...acc, chapterStrippedFromSubChapters];\n    }\n    if (chapter.chapters && chapter.chapters.length > 0) {\n      return [...acc, ...flattenChaptersTree(chapter.chapters)];\n    }\n    return acc;\n  }, []);\n};\n","import React from \"react\";\nimport { hasSubMenu } from \"../utils/helpers\";\n\nconst getAllChildrenIds = (menu) => {\n  return menu.reduce((allChildren, item) => {\n    if (hasSubMenu(item)) {\n      allChildren = [...allChildren, ...getAllChildrenIds(item.menu)];\n    }\n    return [...allChildren, item.id];\n  }, []);\n};\n/**\n * Function takes the hierarchial menu and flattens it into a normalized state where\n * the objects key is the id of the menu-item. The structure is now flat and every\n * object has references to parents, children etc.\n * While we are normalizing, we are also setting internal properties we later use\n * to make items selected, colored etc.\n */\nexport const getNormalizedMenuState = (\n  menu,\n  parentId = null,\n  level = 0,\n  parentIds = []\n) => {\n  let normalizedItemList = menu.reduce((items, menuItem) => {\n    menuItem = {\n      ...menuItem,\n      ...{\n        parentId,\n        level,\n        menuItemIds: [],\n        allChildren: [],\n        allParents: parentIds,\n        itemRef: React.createRef(),\n      },\n    };\n\n    if (menuItem.menu && menuItem.menu.length > 0) {\n      menuItem.allChildren = [\n        ...menuItem.allChildren,\n        ...getAllChildrenIds(menuItem.menu),\n      ];\n      menuItem.menuItemIds = [\n        ...menuItem.menuItemIds,\n        ...menuItem.menu.map((menuItem) => {\n          return menuItem.id;\n        }),\n      ];\n\n      items = {\n        ...items,\n        ...getNormalizedMenuState(menuItem.menu, menuItem.id, level + 1, [\n          ...parentIds,\n          menuItem.id,\n        ]),\n      };\n    }\n    return { ...items, ...{ [menuItem.id]: menuItem } };\n  }, {});\n  Object.values(normalizedItemList).forEach((n) => {\n    delete n.menu;\n  });\n  return normalizedItemList;\n};\n"],"names":["PrintList","getMenuItemType","item","type","props","menu","icon","id","level","color","title","itemRef","subMenuItems","getSubMenuItems","expanded","expandedSubMenu","colored","selected","chosenForPrint","handleTogglePrint","menuItemIds","reduce","subItemId","subItem","Object","values","documentMenu","find","i","length","renderMenuItem","document","link","maplink","this","sx","width","disablePadding","filter","map","React","StyledListItemIcon","styled","ListItemIcon","minWidth","theme","spacing","StyledCollapseIcon","StyledListItem","ListItem","overflowWrap","borderLeft","palette","background","paper","borderLeftColor","action","borderColor","hover","PrintListItem","style","visuallyHidden","localObserver","publish","hasSubMenu","paddingLeft","paddingRight","divider","button","ref","size","disableGutters","onClick","checked","onChange","e","stopPropagation","edge","tabIndex","disableRipple","in","timeout","withTheme","GridGridContainer","Grid","padding","height","GridMiddleContainer","overflowX","flexBasis","marginTop","GridHeaderContainer","marginBottom","GridSettingsContainer","GridFooterContainer","imageResizeRatio","ComponentWithRenderCallback","callback","children","useEffect","PrintWindow","state","printLinks","printText","printImages","printMaps","allDocumentsToggled","tocPrintMode","options","tableOfContents","printMode","menuInformation","createMenu","printContent","undefined","pdfLoading","isAnyDocumentSelected","internalId","idClicked","Promise","resolve","currentState","clickedItem","newState","items","setState","newItem","allParents","indexOf","componentDidMount","subscribe","renderedChapters","printContents","componentWillUnmount","unsubscribe","resizeImage","img","getBoundingClientRect","clientWidth","imageFitsOnePage","maxHeight","loadImage","reject","onload","onerror","customRender","element","container","deepMerge","customTheme","createRoot","render","createPrintElement","div","createElement","renderToc","toc","documentMenuState","allDocuments","model","mode","renderContent","content","areAllImagesLoaded","allSettled","getElementsByTagName","handleNewWindowBlocked","window","alert","createPrintWindow","printWindow","open","head","insertAdjacentHTML","clearPrintContainers","handlePrintCompleted","toggleAllDocuments","addPageBreaksBeforeHeadings","headings","querySelectorAll","isAfterH1","isConsecutiveH1","nodeName","pageBreakBefore","breakBefore","all","then","appendChild","newWindow","s","createTextNode","textContent","sheet","cssRules","rule","insertRule","cssText","error","console","warn","body","print","close","handleCheckboxChange","chapter","newChapterInformation","chapterInformation","toggledChapter","getChapterById","toggleSubChapters","toggleChosenForPrint","documentId","current","shouldPrint","updateDoc","updatedMenuState","toggleSubDocuments","parentId","toggleParentChecked","toggleParentUnchecked","setIsAnyDocumentSelected","toggled","menuState","keys","forEach","key","removeTagsNotSelectedForPrint","elementsToRemove","innerHTML","html","Array","from","push","header","documentLinks","setAttribute","href","parentNode","removeChild","prepareChapterForPrint","chapters","subChapter","createHeaderItems","menuItem","isGroupHeader","getDocumentsToPrint","documentIdsForPrint","documentNamesForPrint","docsIncludingGroupParent","getDocuments","doc","menuDocKey","documentFileName","index","newDocs","preparedChapters","createPDF","documentsToPrint","renderLoadingDialog","createPortal","disableEscapeKeyDown","getElementById","subMenuItem","setInitialMenuItemProperties","documents","removedIds","trim","parseInt","newChildren","allChildren","child","includes","newMenuItemIds","modelDocuments","newOptions","menuConfig","menuConfigClone","JSON","parse","stringify","menuStructure","getNormalizedMenuState","getAllChapterInfo","idOffset","offsetChildren","offsetParents","offsetMenuItemIds","modelDoc","tocChapterLevels","chapterLevelsToShow","menuWithOffset","keyOffset","removeNonPrintableDocuments","subDocId","updatedParent","alignContent","alignItems","justifyContent","variant","disabled","startIcon","marginRight","marginLeft","justify","togglePrintWindow","documentWindowMaximized","wrap","direction","xs","align","value","control","label","labelPlacement","renderCreatePDFButton","withSnackbar","TableOfContents","titlesAndLevels","tocStructure","createTocStructure","setTitlesAndLevels","levelsToShow","indentationLevel","setChapterTitlesAndLevels","previousGroupHeader","menuDoc","jsonDoc","pageBreakAfter","gutterBottom","dense","splitAndTrimOnCommas","searchString","split","string","getStringArray","join","flattenChaptersTree","acc","chapterStrippedFromSubChapters","getAllChildrenIds","parentIds","normalizedItemList","n"],"sourceRoot":""}