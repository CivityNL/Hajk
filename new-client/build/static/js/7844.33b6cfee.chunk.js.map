{"version":3,"file":"static/js/7844.33b6cfee.chunk.js","mappings":"6LAEMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,aAAe,IAAD,wBAGZ,eACAC,EAAAA,EAAAA,MAAA,UAAmB,CACjBC,gBAAiB,EAAKA,gBACtBC,gBAAiB,EAAKA,gBACtBC,gBAAiB,EAAKA,gBACtBC,cAAe,EAAKA,gBAGtB,EAAKC,YAAc,KAEnB,EAAKC,QAAU,UAEf,EAAKC,SAAW,KAEhB,EAAKC,OAAS,KAEd,EAAKC,qBAAkBC,EAEvB,EAAKC,eAAiB,CACpBC,aAAa,EACbC,cAAc,GAvBJ,CAyBb,CA6FA,OA7FA,6BAED,WACEC,KAAKC,QAAS,CACf,uBAED,WACED,KAAKC,QAAS,CACf,iCAED,SAAiBC,GACfF,KAAKH,eAAeK,GAAaA,CAClC,oCAED,SAAoBA,UACXF,KAAKH,eAAeK,EAC5B,4BAED,SAAYC,GACV,OAAOA,IACHH,KAAKH,eAAeO,eAAeD,EAAME,gBAAgBC,QAClC,IAArBH,EAAMI,WAEb,gCAED,SAAgBC,GAAM,IAElBC,EAFiB,OACfC,EAAMF,EAAIE,IAqBd,OAlBAV,KAAKN,YAASE,GAEda,EAAUC,EAAIC,sBAAsBH,EAAII,OAAO,SAACH,EAASN,GAEvD,OADA,EAAKT,OAASS,EACPM,CACR,MAEcT,KAAKa,YAAYb,KAAKN,SACnCM,KAAKT,YAAciB,EAAIM,WACvBd,KAAKP,SAAWgB,IAEZT,KAAKN,SACPM,KAAKN,OAAOa,YAAa,GAE3BE,GAAU,EACVT,KAAKP,UAAW,KAGTgB,CACV,gCAED,SAAgBD,GACd,IAAIO,EACFC,EAEEhB,KAAKC,SAITc,EAASP,EAAIM,WAAW,GAAKd,KAAKT,YAAY,GAC9CyB,EAASR,EAAIM,WAAW,GAAKd,KAAKT,YAAY,GAE9CS,KAAKT,YAAY,GAAKiB,EAAIM,WAAW,GACrCd,KAAKT,YAAY,GAAKiB,EAAIM,WAAW,GAEjCd,KAAKN,QAA+C,kBAArCM,KAAKN,OAAOW,gBAAgBC,MAC7CN,KAAKP,SAASwB,cAAcC,UAAUH,EAAQC,GAEjD,gCAED,SAAgBR,GACd,GAAIR,KAAKR,QAAS,CAChB,IACEiB,EADQD,EAAIE,IACEC,sBAAsBH,EAAII,OAAO,SAACH,EAASN,GACvD,OAAOM,CACR,IACDU,EAAUX,EAAIE,IAAIU,mBAEhBX,IAA4C,IAAjCA,EAAQJ,gBAAgBgB,KACjCF,EAAQG,MAAMC,SAAWvB,KAAKR,UAChCQ,KAAKL,gBAAkBwB,EAAQG,MAAMC,OACrCJ,EAAQG,MAAMC,OAASvB,KAAKR,cAEII,IAAzBI,KAAKL,kBACdwB,EAAQG,MAAMC,OAASvB,KAAKL,gBAC5BK,KAAKL,qBAAkBC,EAE1B,CACF,8BAED,SAAcY,GAGZ,OAFAR,KAAKT,YAAc,KACnBS,KAAKP,SAAW,MACT,CACR,OAvHGR,CAAaC,EAAAA,GA0HnB,W","sources":["models/Drag.js"],"sourcesContent":["import { Pointer } from \"ol/interaction\";\n\nclass Drag extends Pointer {\n  constructor() {\n    // FIXME: This code looks obsolete, I can't find any imports.\n    // Candidate for removal?\n    super();\n    Pointer.call(this, {\n      handleDownEvent: this.handleDownEvent,\n      handleDragEvent: this.handleDragEvent,\n      handleMoveEvent: this.handleMoveEvent,\n      handleUpEvent: this.handleUpEvent,\n    });\n\n    this.coordinate_ = null;\n\n    this.cursor_ = \"pointer\";\n\n    this.feature_ = null;\n\n    this.layer_ = null;\n\n    this.previousCursor_ = undefined;\n\n    this.acceptedLayers = {\n      pluginPrint: true,\n      pluginExport: true,\n    };\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  resume() {\n    this.paused = false;\n  }\n\n  addAcceptedLayer(layerName) {\n    this.acceptedLayers[layerName] = layerName;\n  }\n\n  removeAcceptedLayer(layerName) {\n    delete this.acceptedLayers[layerName];\n  }\n\n  isDraggable(layer) {\n    return layer\n      ? this.acceptedLayers.hasOwnProperty(layer.getProperties().name) ||\n          layer.dragLocked === false\n      : true;\n  }\n\n  handleDownEvent(evt) {\n    var map = evt.map,\n      feature;\n\n    this.layer_ = undefined;\n\n    feature = map.forEachFeatureAtPixel(evt.pixel, (feature, layer) => {\n      this.layer_ = layer;\n      return feature;\n    });\n\n    if (feature && this.isDraggable(this.layer_)) {\n      this.coordinate_ = evt.coordinate;\n      this.feature_ = feature;\n    } else {\n      if (this.layer_) {\n        this.layer_.dragLocked = true;\n      }\n      feature = false;\n      this.feature_ = false;\n    }\n\n    return !!feature;\n  }\n\n  handleDragEvent(evt) {\n    var deltaX = 0,\n      deltaY = 0;\n\n    if (this.paused) {\n      return;\n    }\n\n    deltaX = evt.coordinate[0] - this.coordinate_[0];\n    deltaY = evt.coordinate[1] - this.coordinate_[1];\n\n    this.coordinate_[0] = evt.coordinate[0];\n    this.coordinate_[1] = evt.coordinate[1];\n\n    if (this.layer_ && this.layer_.getProperties().name !== \"highlight-wms\") {\n      this.feature_.getGeometry().translate(deltaX, deltaY);\n    }\n  }\n\n  handleMoveEvent(evt) {\n    if (this.cursor_) {\n      var map = evt.map,\n        feature = map.forEachFeatureAtPixel(evt.pixel, (feature, layer) => {\n          return feature;\n        }),\n        element = evt.map.getTargetElement();\n\n      if (feature && feature.getProperties().user === true) {\n        if (element.style.cursor !== this.cursor_) {\n          this.previousCursor_ = element.style.cursor;\n          element.style.cursor = this.cursor_;\n        }\n      } else if (this.previousCursor_ !== undefined) {\n        element.style.cursor = this.previousCursor_;\n        this.previousCursor_ = undefined;\n      }\n    }\n  }\n\n  handleUpEvent(evt) {\n    this.coordinate_ = null;\n    this.feature_ = null;\n    return false;\n  }\n}\n\nexport default Drag;\n"],"names":["Drag","Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","coordinate_","cursor_","feature_","layer_","previousCursor_","undefined","acceptedLayers","pluginPrint","pluginExport","this","paused","layerName","layer","hasOwnProperty","getProperties","name","dragLocked","evt","feature","map","forEachFeatureAtPixel","pixel","isDraggable","coordinate","deltaX","deltaY","getGeometry","translate","element","getTargetElement","user","style","cursor"],"sourceRoot":""}