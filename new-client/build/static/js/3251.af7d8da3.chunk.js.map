{"version":3,"file":"static/js/3251.af7d8da3.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/panelMenu/PanelList.js","plugins/DocumentHandler/panelMenu/PanelMenuListItem.js"],"sourcesContent":["import React from \"react\";\nimport List from \"@mui/material/List\";\nimport PanelMenuListItem from \"./PanelMenuListItem\";\n\nclass PanelList extends React.PureComponent {\n  getMenuItemType = (item, type) => {\n    return (\n      <PanelMenuListItem\n        {...this.props}\n        type={type}\n        menu={item.menu}\n        icon={item.icon}\n        id={item.id}\n        level={item.level}\n        color={item.color}\n        title={item.title}\n        itemRef={item.itemRef}\n        subMenuItems={this.#getSubMenuItems(item)}\n        expanded={item.expandedSubMenu}\n        colored={item.colored}\n        selected={item.selected}\n      ></PanelMenuListItem>\n    );\n  };\n\n  #getSubMenuItems = (item) => {\n    return item.menuItemIds.reduce((subMenuItems, subItemId) => {\n      const subItem = Object.values(this.props.items).find((i) => {\n        return i.id === subItemId;\n      });\n      if (subItem.menuItemIds.length > 0) {\n        subMenuItems = [...subMenuItems, ...this.#getSubMenuItems(subItem)];\n      }\n      return [...subMenuItems, subItem];\n    }, []);\n  };\n\n  #renderMenuItem = (item) => {\n    if (item.menuItemIds && item.menuItemIds.length > 0) {\n      return this.getMenuItemType(item, \"submenu\");\n    } else if (item.document) {\n      return this.getMenuItemType(item, \"document\");\n    } else if (item.link) {\n      return this.getMenuItemType(item, \"link\");\n    } else if (item.maplink) {\n      return this.getMenuItemType(item, \"maplink\");\n    }\n  };\n\n  render() {\n    const { items, level } = this.props;\n    return (\n      <List\n        style={{ position: \"static\" }}\n        disablePadding\n        id={`panellist_${level}`}\n        role=\"navigation\"\n        component=\"nav\"\n      >\n        {Object.values(items)\n          .filter((item) => {\n            return item.level === level;\n          })\n          .map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                {this.#renderMenuItem(item, item.id)}\n              </React.Fragment>\n            );\n          })}\n      </List>\n    );\n  }\n}\n\nexport default PanelList;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { withTheme } from \"@emotion/react\";\nimport Icon from \"@mui/material/Icon\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport PanelList from \"./PanelList\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst StyledListItemIcon = styled(ListItemIcon)(({ theme }) => ({\n  minWidth: theme.spacing(3),\n}));\n\nconst StyledCollapseIcon = styled(ListItemIcon)(({ theme }) => ({\n  \".MuiListItemIcon-root\": {\n    minWidth: theme.spacing(4),\n  },\n}));\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  overflowWrap: \"break-word\",\n  \".MuiListItem-root\": {\n    borderLeft: `${theme.spacing(1)} solid ${theme.palette.background.paper}`,\n    \"&.Mui-selected\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&.Mui-selected:hover\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&:hover\": {\n      borderColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nclass PanelMenuListItem extends React.PureComponent {\n  #getListTitle = () => {\n    const { title } = this.props;\n    return <ListItemText>{title}</ListItemText>;\n  };\n\n  #getCollapseIcon = () => {\n    const { title, expanded } = this.props;\n\n    return expanded ? (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Minimera submeny</span>}\n        <ExpandLess />\n      </StyledCollapseIcon>\n    ) : (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Maximera submeny</span>}\n        <ExpandMore />\n      </StyledCollapseIcon>\n    );\n  };\n\n  #getListIcon = () => {\n    const { title, icon } = this.props;\n    return (\n      <StyledListItemIcon>\n        {!title && <span style={visuallyHidden}>{icon.descriptiveText}</span>}\n        <Icon style={{ fontSize: icon.fontSize }}>\n          {icon.materialUiIconName}\n        </Icon>\n      </StyledListItemIcon>\n    );\n  };\n\n  #hasSubMenu = () => {\n    const { subMenuItems } = this.props;\n    return subMenuItems && subMenuItems.length > 0;\n  };\n\n  #handleMenuButtonClick = (type, id) => {\n    const { localObserver } = this.props;\n    localObserver.publish(`${type}-clicked`, id);\n  };\n\n  #getMenuItemStyle = () => {\n    const { theme, level, color, colored } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return colored\n      ? {\n          paddingLeft: theme.spacing(1 + level * 3),\n          borderLeft: `${theme.spacing(1)} solid ${color}`,\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        }\n      : {\n          paddingLeft: theme.spacing(1 + level * 3),\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        };\n  };\n\n  render() {\n    const { type, selected, subMenuItems, expanded, icon, level, title, id } =\n      this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return (\n      <>\n        <StyledListItem\n          divider\n          selected={selected}\n          button\n          ref={this.props.itemRef}\n          size=\"small\"\n          disableGutters\n          aria-controls={hasSubMenu ? `submenu_${id}` : null}\n          aria-expanded={expanded}\n          onClick={() => {\n            this.#handleMenuButtonClick(type, id);\n          }}\n          sx={this.#getMenuItemStyle()}\n        >\n          {icon ? this.#getListIcon() : null}\n          {title && this.#getListTitle()}\n          {hasSubMenu && this.#getCollapseIcon()}\n        </StyledListItem>\n        {hasSubMenu && (\n          <Collapse id={`submenu_${id}`} in={expanded} timeout={200}>\n            <PanelList\n              {...this.props}\n              level={level + 1}\n              items={subMenuItems}\n            ></PanelList>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTheme(PanelMenuListItem);\n"],"names":["PanelList","getMenuItemType","item","type","props","menu","icon","id","level","color","title","itemRef","subMenuItems","expanded","expandedSubMenu","colored","selected","menuItemIds","reduce","subItemId","subItem","Object","values","items","find","i","length","document","link","maplink","this","style","position","disablePadding","role","component","filter","map","React","StyledListItemIcon","styled","ListItemIcon","minWidth","theme","spacing","StyledCollapseIcon","StyledListItem","ListItem","overflowWrap","borderLeft","palette","background","paper","borderLeftColor","action","borderColor","hover","PanelMenuListItem","visuallyHidden","descriptiveText","fontSize","materialUiIconName","localObserver","publish","hasSubMenu","paddingLeft","paddingRight","divider","button","ref","size","disableGutters","onClick","sx","in","timeout","withTheme"],"sourceRoot":""}