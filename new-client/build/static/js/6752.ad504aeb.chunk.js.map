{"version":3,"file":"static/js/6752.ad504aeb.chunk.js","mappings":"mNAIMA,GAAcC,EAAAA,EAAAA,IAAO,QAAPA,EAAgB,iBAAO,CACzCC,eAAgB,WAChBC,YAAa,QACbC,OAAQ,OACR,OAAQ,CACNC,UAAW,QAEb,OAAQ,CACNC,OAAQ,kBAEV,UAAW,CACTC,aAAc,aAXkB,IAe9BC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACI,OADJA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,MAAM,GADA,EA0EP,OA1EO,yCAMR,WACE,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QACVC,EAAMJ,KAAKK,MAAMH,EAAQC,EAAQG,iBACvCN,KAAKO,KAAKH,EACX,sBAED,SAAMI,EAAKC,GAoBT,OAnBID,GAAsB,kBAARA,IACfA,EAAIE,MAAM,aAAe,IAAIC,SAAQ,SAACC,GAerCJ,EAAMA,EAAIK,QAAQD,EAdlB,SAAgBE,EAAGC,GAEjB,QADAA,EAAIA,EAAEF,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIG,MAAM,MACpCC,QACR,KAAK,EACH,OAAOH,EAAEC,EAAE,KAAO,GACpB,KAAK,EACH,OAAOD,EAAEC,EAAE,IAAIA,EAAE,KAAO,GAC1B,KAAK,EACH,OAAOD,EAAEC,EAAE,IAAIA,EAAE,IAAIA,EAAE,KAAO,GAChC,QACE,MAAO,GAEZ,CAE2BG,CAAOT,EAAYG,GAChD,IAEIJ,CACR,qBAED,SAAKJ,GAAM,IAAD,QACRe,EAAAA,EAAAA,QAAOf,GAAKgB,MAAK,SAACC,GAChBA,EAASC,OAAOF,MAAK,SAACG,GACpB,IAAMxB,EAAOwB,EAAIC,SAASC,KAAI,SAACtB,GAC7B,MAAO,CACLuB,KAAMvB,EAAQM,WAAWkB,SAASX,MAAM,KAAK,GAC7CY,MAAOzB,EAAQM,WAAWmB,MAE7B,IACD,EAAKC,SAAS,CACZ9B,KAAMA,GAET,GACF,GACF,uBAED,WACE,OAAIC,KAAKF,MAAMC,MAEX,UAACV,EAAD,YACE,4BACE,2BACE,mCACA,iDAGJ,2BACGW,KAAKF,MAAMC,KAAK0B,KAAI,SAACK,EAAUC,GAAX,OACnB,2BACE,wBAAKD,EAASJ,QACd,wBAAKI,EAASF,UAFPG,EADU,UAUpB,mCAEV,OA3EGlC,CAAkBmC,EAAAA,eA8ExB,W","sources":["components/Table.js"],"sourcesContent":["import React from \"react\";\nimport { hfetch } from \"utils/FetchWrapper\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledTable = styled(\"table\")(() => ({\n  borderCollapse: \"collapse\",\n  borderColor: \"black\",\n  margin: \"10px\",\n  \"& th\": {\n    textAlign: \"left\",\n  },\n  \"& td\": {\n    border: \"1px solid #999\",\n  },\n  \"& thead\": {\n    borderBottom: \"2px solid\",\n  },\n}));\n\nclass TableView extends React.PureComponent {\n  state = {\n    data: false,\n  };\n\n  // TODO: Add propTypes\n\n  componentDidMount() {\n    const { source, feature } = this.props;\n    const url = this.parse(source, feature.getProperties());\n    this.load(url);\n  }\n\n  parse(str, properties) {\n    if (str && typeof str === \"string\") {\n      (str.match(/{(.*?)}/g) || []).forEach((property) => {\n        function lookup(o, s) {\n          s = s.replace(\"{\", \"\").replace(\"}\", \"\").split(\".\");\n          switch (s.length) {\n            case 1:\n              return o[s[0]] || \"\";\n            case 2:\n              return o[s[0]][s[1]] || \"\";\n            case 3:\n              return o[s[0]][s[1]][s[2]] || \"\";\n            default:\n              return \"\";\n          }\n        }\n\n        str = str.replace(property, lookup(properties, property));\n      });\n    }\n    return str;\n  }\n\n  load(url) {\n    hfetch(url).then((response) => {\n      response.json().then((rsp) => {\n        const data = rsp.features.map((feature) => {\n          return {\n            date: feature.properties.datetime.split(\"T\")[0],\n            value: feature.properties.value,\n          };\n        });\n        this.setState({\n          data: data,\n        });\n      });\n    });\n  }\n\n  render() {\n    if (this.state.data) {\n      return (\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Datum</th>\n              <th>Mätvärde</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((dataPair, i) => (\n              <tr key={i}>\n                <td>{dataPair.date}</td>\n                <td>{dataPair.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        </StyledTable>\n      );\n    } else {\n      return <div>Laddar</div>;\n    }\n  }\n}\n\nexport default TableView;\n"],"names":["StyledTable","styled","borderCollapse","borderColor","margin","textAlign","border","borderBottom","TableView","state","data","this","props","source","feature","url","parse","getProperties","load","str","properties","match","forEach","property","replace","o","s","split","length","lookup","hfetch","then","response","json","rsp","features","map","date","datetime","value","setState","dataPair","i","React"],"sourceRoot":""}