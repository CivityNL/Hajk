{"version":3,"file":"static/js/1410.1c7b1db1.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/panelMenu/PanelList.js","plugins/DocumentHandler/panelMenu/PanelMenuContainerView.js","plugins/DocumentHandler/panelMenu/PanelMenuListItem.js","plugins/DocumentHandler/panelMenu/panelMenuUtils.js"],"sourcesContent":["import React from \"react\";\nimport List from \"@mui/material/List\";\nimport PanelMenuListItem from \"./PanelMenuListItem\";\n\nclass PanelList extends React.PureComponent {\n  getMenuItemType = (item, type) => {\n    return (\n      <PanelMenuListItem\n        {...this.props}\n        type={type}\n        menu={item.menu}\n        icon={item.icon}\n        id={item.id}\n        level={item.level}\n        color={item.color}\n        title={item.title}\n        itemRef={item.itemRef}\n        subMenuItems={this.#getSubMenuItems(item)}\n        expanded={item.expandedSubMenu}\n        colored={item.colored}\n        selected={item.selected}\n      ></PanelMenuListItem>\n    );\n  };\n\n  #getSubMenuItems = (item) => {\n    return item.menuItemIds.reduce((subMenuItems, subItemId) => {\n      const subItem = Object.values(this.props.items).find((i) => {\n        return i.id === subItemId;\n      });\n      if (subItem.menuItemIds.length > 0) {\n        subMenuItems = [...subMenuItems, ...this.#getSubMenuItems(subItem)];\n      }\n      return [...subMenuItems, subItem];\n    }, []);\n  };\n\n  #renderMenuItem = (item) => {\n    if (item.menuItemIds && item.menuItemIds.length > 0) {\n      return this.getMenuItemType(item, \"submenu\");\n    } else if (item.document) {\n      return this.getMenuItemType(item, \"document\");\n    } else if (item.link) {\n      return this.getMenuItemType(item, \"link\");\n    } else if (item.maplink) {\n      return this.getMenuItemType(item, \"maplink\");\n    }\n  };\n\n  render() {\n    const { items, level } = this.props;\n    return (\n      <List\n        style={{ position: \"static\" }}\n        disablePadding\n        id={`panellist_${level}`}\n        role=\"navigation\"\n        component=\"nav\"\n      >\n        {Object.values(items)\n          .filter((item) => {\n            return item.level === level;\n          })\n          .map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                {this.#renderMenuItem(item, item.id)}\n              </React.Fragment>\n            );\n          })}\n      </List>\n    );\n  }\n}\n\nexport default PanelList;\n","import React from \"react\";\nimport PanelList from \"./PanelList\";\nimport Box from \"@mui/material/Box\";\nimport { getIsMobile } from \"../../../utils/IsMobile\";\nimport { delay } from \"../../../utils/Delay\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { hasSubMenu } from \"../utils/helpers\";\nimport { getNormalizedMenuState } from \"../utils/stateConverter\";\nimport {\n  isExpandedTopLevelItem,\n  getItemIdsToColor,\n  findMenuItemWithDocumentName,\n} from \"../panelMenu/panelMenuUtils\";\n\nclass PanelMenuView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.#bindSubscriptions();\n  }\n\n  internalId = 0;\n\n  state = {};\n\n  componentDidMount = () => {\n    this.#initializeItems();\n  };\n\n  #bindSubscriptions = () => {\n    const { localObserver } = this.props;\n    localObserver.subscribe(\"submenu-clicked\", this.#handleSubMenuClicked);\n    localObserver.subscribe(\n      \"document-link-clicked\",\n      this.#handleOpenDocumentFromLink\n    );\n    localObserver.subscribe(\n      \"document-clicked\",\n      this.#handleOpenDocumentFromPanelMenu\n    );\n    localObserver.subscribe(\"link-clicked\", this.#handleExternalLinkClicked);\n    localObserver.subscribe(\n      \"document-maplink-clicked\",\n      this.#handleShowMapLayersFromLink\n    );\n    localObserver.subscribe(\n      \"maplink-clicked\",\n      this.#handleShowMapLayersFromPanelMenu\n    );\n    localObserver.subscribe(\"document-window-closed\", this.#clearPanel);\n  };\n\n  #initializeItems = () => {\n    const { options } = this.props;\n    options.menuConfig.menu.forEach(this.#setInitialMenuItemProperties);\n    this.setState(getNormalizedMenuState(options.menuConfig.menu));\n  };\n\n  // Adds highlighting on the selected document by checking if the provided\n  // document (from props) matches the current menu-item.\n  #setInitialMenuItemProperties = (menuItem) => {\n    const { document, options = {} } = this.props;\n    // Since this code only runs on mount, we should be allowed to check\n    // for the selected document by using \"documentOnStart\" instead of the supplied\n    // document. Added this fallback since the document from props is not always\n    // defined, probably because of timing issues...\n    const itemMatchesOpenDocument =\n      (document && menuItem.document === document.documentFileName) ||\n      (options.documentOnStart &&\n        options.documentOnStart === menuItem.document);\n    // Do not use spread because we are mutating original item\n    Object.assign(menuItem, {\n      id: this.#getNextUniqueId(),\n      selected: itemMatchesOpenDocument,\n      colored: itemMatchesOpenDocument,\n    });\n    if (hasSubMenu(menuItem)) {\n      menuItem.hasSubMenu = true;\n      menuItem.menu.forEach((subMenuItem) => {\n        this.#setInitialMenuItemProperties(subMenuItem, menuItem);\n      });\n    }\n  };\n\n  //------------------Handle events-------------------------\n\n  #handleOpenDocumentFromLink = ({ documentName, headerIdentifier }) => {\n    const itemClicked = findMenuItemWithDocumentName(documentName, this.state);\n    this.#setDocument(documentName, headerIdentifier);\n    this.#setItemStateProperties(itemClicked.id).then(() => {\n      this.#scrollToMenuItem(itemClicked.itemRef.current.offsetTop);\n    });\n  };\n\n  #handleOpenDocumentFromPanelMenu = (id) => {\n    const { app } = this.props;\n    this.#setDocument(this.state[id].document, null);\n    this.#setItemStateProperties(id).then(() => {\n      app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n    });\n  };\n\n  #handleShowMapLayers = (mapLink) => {\n    const { options, localObserver, app } = this.props;\n    if (options.displayLoadingOnMapLinkOpen) {\n      localObserver.publish(\"maplink-loading\");\n    }\n    app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n    this.#delayAndFlyToMapLink(mapLink);\n  };\n\n  #closeDocumentWindow = () => {\n    const { app } = this.props;\n    this.#setDocument();\n    app.globalObserver.publish(\"documentviewer.closeWindow\");\n  };\n\n  #handleShowMapLayersFromLink = (maplink) => {\n    if (getIsMobile()) {\n      this.#closeDocumentWindow();\n    }\n    this.#handleShowMapLayers(maplink);\n  };\n\n  #handleShowMapLayersFromPanelMenu = (id) => {\n    const { options } = this.props;\n    // If we're on small screen, or the admin option is set (no matter screen size),\n    // let's close the DocumentHandler window\n    if (getIsMobile() || options.closePanelOnMapLinkOpen) {\n      this.#closeDocumentWindow();\n    }\n    this.#handleShowMapLayers(this.state[id].maplink);\n  };\n\n  #handleSubMenuClicked = (id) => {\n    this.#setItemStateProperties(id);\n  };\n\n  #handleExternalLinkClicked = (id) => {\n    const { app } = this.props;\n    window.open(this.state[id].link, \"_blank\");\n    app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  //---------------------------------------------------\n\n  #setClickedItemProperties = (clickedItem) => {\n    let newItem = { ...clickedItem };\n    return {\n      ...clickedItem,\n      colored: !isExpandedTopLevelItem(newItem),\n      selected: !newItem.hasSubMenu,\n      expandedSubMenu: newItem.hasSubMenu\n        ? !newItem.expandedSubMenu\n        : newItem.expandedSubMenu,\n    };\n  };\n\n  #setNonClickedItemProperties = (item, currentState, clickedItem) => {\n    const idsToColor = getItemIdsToColor(clickedItem, currentState);\n    return {\n      ...item,\n      colored: idsToColor.indexOf(item.id) !== -1,\n      expandedSubMenu:\n        clickedItem.allParents.indexOf(item.id) !== -1\n          ? true\n          : item.expandedSubMenu,\n      selected: clickedItem.hasSubMenu ? item.selected : false,\n    };\n  };\n\n  //Important to create new state and items to not mutate state directly\n  #setItemStateProperties = (idClicked) => {\n    return new Promise((resolve) => {\n      const currentState = { ...this.state };\n      const clickedItem = currentState[idClicked];\n      const newState = Object.values(currentState).reduce((items, item) => {\n        const isClickedItem = item.id === idClicked;\n        if (isClickedItem) {\n          return {\n            ...items,\n            [item.id]: this.#setClickedItemProperties(item),\n          };\n        } else {\n          return {\n            ...items,\n            [item.id]: this.#setNonClickedItemProperties(\n              item,\n              currentState,\n              clickedItem\n            ),\n          };\n        }\n      }, {});\n\n      this.setState(newState, resolve);\n    });\n  };\n\n  #clearPanel = () => {\n    let newState = Object.values({ ...this.state }).reduce((state, item) => {\n      let newItem = { ...item };\n      newItem.colored = false;\n      newItem.selected = false;\n      return { ...state, [newItem.id]: newItem };\n    }, {});\n\n    this.setState(newState);\n  };\n\n  #scrollToMenuItem = async (scrollOffset) => {\n    scroll.scrollTo(scrollOffset, {\n      containerId: \"panelListWrapper\",\n      smooth: false,\n      isDynamic: true,\n      delay: 0,\n    });\n  };\n\n  #setDocument = (documentName = null, headerIdentifier = null) => {\n    const { localObserver } = this.props;\n    localObserver.publish(\"set-active-document\", {\n      documentName: documentName,\n      headerIdentifier: headerIdentifier,\n    });\n  };\n\n  /*\n  Large maplinks can be slow and cause the application to hang. This delay is a workaround in order\n  allow the other tasks such as closing the document and displaying a snackbar to run before the\n  application hangs.\n  */\n  #delayAndFlyToMapLink = async (maplink) => {\n    await delay(100);\n    this.props.localObserver.publish(\"fly-to\", maplink);\n  };\n\n  #getNextUniqueId = () => {\n    this.internalId += 1;\n    return this.internalId;\n  };\n\n  render() {\n    const { app, localObserver } = this.props;\n    return (\n      <Box\n        id=\"panelListWrapper\"\n        sx={{ maxHeight: \"100%\", position: \"relative\", overflow: \"auto\" }}\n      >\n        <PanelList\n          app={app}\n          localObserver={localObserver}\n          level={0}\n          items={this.state}\n        ></PanelList>\n      </Box>\n    );\n  }\n}\n\nexport default PanelMenuView;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { withTheme } from \"@emotion/react\";\nimport Icon from \"@mui/material/Icon\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport PanelList from \"./PanelList\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst StyledListItemIcon = styled(ListItemIcon)(({ theme }) => ({\n  minWidth: theme.spacing(3),\n}));\n\nconst StyledCollapseIcon = styled(ListItemIcon)(({ theme }) => ({\n  \".MuiListItemIcon-root\": {\n    minWidth: theme.spacing(4),\n  },\n}));\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  overflowWrap: \"break-word\",\n  \".MuiListItem-root\": {\n    borderLeft: `${theme.spacing(1)} solid ${theme.palette.background.paper}`,\n    \"&.Mui-selected\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&.Mui-selected:hover\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&:hover\": {\n      borderColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nclass PanelMenuListItem extends React.PureComponent {\n  #getListTitle = () => {\n    const { title } = this.props;\n    return <ListItemText>{title}</ListItemText>;\n  };\n\n  #getCollapseIcon = () => {\n    const { title, expanded } = this.props;\n\n    return expanded ? (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Minimera submeny</span>}\n        <ExpandLess />\n      </StyledCollapseIcon>\n    ) : (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Maximera submeny</span>}\n        <ExpandMore />\n      </StyledCollapseIcon>\n    );\n  };\n\n  #getListIcon = () => {\n    const { title, icon } = this.props;\n    return (\n      <StyledListItemIcon>\n        {!title && <span style={visuallyHidden}>{icon.descriptiveText}</span>}\n        <Icon style={{ fontSize: icon.fontSize }}>\n          {icon.materialUiIconName}\n        </Icon>\n      </StyledListItemIcon>\n    );\n  };\n\n  #hasSubMenu = () => {\n    const { subMenuItems } = this.props;\n    return subMenuItems && subMenuItems.length > 0;\n  };\n\n  #handleMenuButtonClick = (type, id) => {\n    const { localObserver } = this.props;\n    localObserver.publish(`${type}-clicked`, id);\n  };\n\n  #getMenuItemStyle = () => {\n    const { theme, level, color, colored } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return colored\n      ? {\n          paddingLeft: theme.spacing(1 + level * 3),\n          borderLeft: `${theme.spacing(1)} solid ${color}`,\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        }\n      : {\n          paddingLeft: theme.spacing(1 + level * 3),\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        };\n  };\n\n  render() {\n    const { type, selected, subMenuItems, expanded, icon, level, title, id } =\n      this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return (\n      <>\n        <StyledListItem\n          divider\n          selected={selected}\n          button\n          ref={this.props.itemRef}\n          size=\"small\"\n          disableGutters\n          aria-controls={hasSubMenu ? `submenu_${id}` : null}\n          aria-expanded={expanded}\n          onClick={() => {\n            this.#handleMenuButtonClick(type, id);\n          }}\n          sx={this.#getMenuItemStyle()}\n        >\n          {icon ? this.#getListIcon() : null}\n          {title && this.#getListTitle()}\n          {hasSubMenu && this.#getCollapseIcon()}\n        </StyledListItem>\n        {hasSubMenu && (\n          <Collapse id={`submenu_${id}`} in={expanded} timeout={200}>\n            <PanelList\n              {...this.props}\n              level={level + 1}\n              items={subMenuItems}\n            ></PanelList>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTheme(PanelMenuListItem);\n","const getTopLevelItem = (clickedItem, allItems) => {\n  if (!clickedItem.parentId) {\n    return clickedItem;\n  } else {\n    return Object.values(allItems).find((item) => {\n      return item.allChildren.indexOf(clickedItem.id) > -1;\n    });\n  }\n};\n\nexport const getItemIdsToColor = (clickedItem, allItems) => {\n  const topLevelItem = getTopLevelItem(clickedItem, allItems);\n  return [topLevelItem.id, ...topLevelItem.allChildren];\n};\n\nexport const isExpandedTopLevelItem = (item) => {\n  return item.hasSubMenu && item.expandedSubMenu && item.level === 0;\n};\n\nexport const findMenuItemWithDocumentName = (documentName, itemsToSearch) => {\n  return Object.values(itemsToSearch).find((item) => {\n    return item.document === documentName;\n  });\n};\n"],"names":["PanelList","getMenuItemType","item","type","props","menu","icon","id","level","color","title","itemRef","subMenuItems","expanded","expandedSubMenu","colored","selected","menuItemIds","reduce","subItemId","subItem","Object","values","items","find","i","length","document","link","maplink","this","style","position","disablePadding","role","component","filter","map","React","PanelMenuView","internalId","state","componentDidMount","localObserver","subscribe","options","menuConfig","forEach","setState","getNormalizedMenuState","menuItem","itemMatchesOpenDocument","documentFileName","documentOnStart","assign","hasSubMenu","subMenuItem","documentName","headerIdentifier","itemClicked","findMenuItemWithDocumentName","then","current","offsetTop","app","globalObserver","publish","mapLink","displayLoadingOnMapLinkOpen","getIsMobile","closePanelOnMapLinkOpen","window","open","clickedItem","newItem","isExpandedTopLevelItem","currentState","idsToColor","getItemIdsToColor","indexOf","allParents","idClicked","Promise","resolve","newState","scrollOffset","scroll","containerId","smooth","isDynamic","delay","sx","maxHeight","overflow","StyledListItemIcon","styled","ListItemIcon","minWidth","theme","spacing","StyledCollapseIcon","StyledListItem","ListItem","overflowWrap","borderLeft","palette","background","paper","borderLeftColor","action","borderColor","hover","PanelMenuListItem","visuallyHidden","descriptiveText","fontSize","materialUiIconName","paddingLeft","paddingRight","divider","button","ref","size","disableGutters","onClick","in","timeout","withTheme","allItems","topLevelItem","parentId","allChildren","getTopLevelItem","itemsToSearch"],"sourceRoot":""}