{"version":3,"file":"static/js/3530.c2d6da58.chunk.js","mappings":"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","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Measure/Measure.js","plugins/Measure/MeasureModel.js","plugins/Measure/MeasureView.js","../node_modules/@mui/material/esm/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/esm/CardActionArea/CardActionArea.js","../node_modules/@mui/material/esm/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/esm/CardHeader/CardHeader.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/NativeSelect/NativeSelect.js","../node_modules/ol/Overlay.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Drawer buttons and Widget buttons should render a Drawer button. */}\n        {(target === \"toolbar\" || this.pluginIsWidget(target)) &&\n          this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden mdUp={this.pluginIsWidget(this.props.options.target)}>\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      <PluginControlButton\n        icon={this.props.custom.icon}\n        onClick={this.handleButtonClick}\n        title={this.title}\n        abstract={this.description}\n      />,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React from \"react\";\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\n\nimport SvgIcon from \"@mui/material/SvgIcon\";\n\nimport MeasureView from \"./MeasureView\";\nimport MeasureModel from \"./MeasureModel\";\nimport Observer from \"react-event-observer\";\n\nimport \"./measure.css\";\n\nfunction MeasureIcon(props) {\n  const d = `M732.1,10L500.9,241.3l84.9,84.9l-34,34l-84.9-84.9l-91,91l84.9,84.9l-34,34l-84.9-84.9l-99.3,99.3l84.9,84.9l-34,34l-84.9-84.9L10,732.1L267.9,990L990,267.9L732.1,10z M230.8,819.7c-13.9,13.9-36.5,13.9-50.4,0c-13.9-13.9-13.9-36.5,0-50.4c13.9-13.9,36.5-13.9,50.4,0C244.7,783.2,244.7,805.8,230.8,819.7z`;\n\n  return (\n    <SvgIcon {...props} width=\"20pt\" height=\"20pt\" viewBox=\"0 0 1000 1000\">\n      <path d={d} />\n    </SvgIcon>\n  );\n}\n\nclass Measure extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.localObserver = Observer();\n\n    this.model = new MeasureModel({\n      map: props.map,\n      app: props.app,\n      localObserver: this.localObserver,\n    });\n  }\n\n  onWindowShow = () => {\n    this.model.setActive(true);\n  };\n\n  onWindowHide = () => {\n    this.model.setActive(false);\n  };\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Measure\"\n        custom={{\n          icon: <MeasureIcon />,\n          title: \"Mät\",\n          description: \"Mät längder och ytor\",\n          height: \"dynamic\",\n          width: 300,\n          top: undefined,\n          left: undefined,\n          onWindowShow: this.onWindowShow,\n          onWindowHide: this.onWindowHide,\n        }}\n      >\n        <MeasureView\n          model={this.model}\n          app={this.props.app}\n          localObserver={this.localObserver}\n        />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Measure;\n","import { Circle as CircleStyle, Fill, Stroke, Style, Text } from \"ol/style.js\";\nimport { Vector as VectorSource } from \"ol/source.js\";\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport { LineString, Polygon } from \"ol/geom.js\";\nimport Draw from \"ol/interaction/Draw.js\";\n\nimport Overlay from \"ol/Overlay\";\n\nclass MeasureModel {\n  constructor(settings) {\n    this.map = settings.map;\n    this.app = settings.app;\n    this.localObserver = settings.localObserver;\n    this.source = new VectorSource();\n    this.vector = new VectorLayer({\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginMeasure\",\n      caption: \"Measure layer\",\n      source: this.source,\n      style: this.createStyle,\n    });\n    this.map.addLayer(this.vector);\n    this.type = \"LineString\";\n    this.createMeasureTooltip();\n  }\n\n  createStyle = (feature, resolution) => {\n    const fillColor = \"rgba(255, 255, 255, 0.3)\";\n    const strokeColor = \"rgba(0, 0, 0, 0.5)\";\n    return [\n      new Style({\n        fill: new Fill({\n          color: fillColor,\n        }),\n        stroke: new Stroke({\n          color: strokeColor,\n          width: 3,\n        }),\n        image: new CircleStyle({\n          radius: 5,\n          stroke: new Stroke({\n            color: strokeColor,\n          }),\n          fill: new Fill({\n            color: fillColor,\n          }),\n        }),\n        text: new Text({\n          textAlign: \"center\",\n          textBaseline: \"middle\",\n          font: \"12pt sans-serif\",\n          fill: new Fill({ color: \"#FFF\" }),\n          text: this.getLabelText(feature),\n          overflow: true,\n          stroke: new Stroke({\n            color: strokeColor,\n            width: 3,\n          }),\n          offsetX: 0,\n          offsetY: -10,\n          rotation: 0,\n          scale: 1,\n        }),\n      }),\n    ];\n  };\n\n  clear = () => {\n    this.source.clear();\n    this.measureTooltip.setPosition(undefined);\n  };\n\n  handleDrawStart = (e) => {\n    e.feature.getGeometry().on(\"change\", (e) => {\n      var toolTip = \"\",\n        coord = undefined,\n        pointerCoord;\n\n      if (this.active) {\n        if (this.pointerPosition) {\n          pointerCoord = this.pointerPosition.coordinate;\n        }\n\n        if (e.target instanceof LineString) {\n          toolTip = this.formatLabel(\"length\", e.target.getLength());\n          coord = e.target.getLastCoordinate();\n        }\n\n        if (e.target instanceof Polygon) {\n          toolTip = this.formatLabel(\"area\", e.target.getArea());\n          coord = pointerCoord || e.target.getFirstCoordinate();\n        }\n\n        this.measureTooltipElement.innerHTML = toolTip;\n        this.measureTooltip.setPosition(coord);\n      }\n    });\n  };\n\n  handleDrawEnd = (e) => {\n    this.setFeaturePropertiesFromGeometry(e.feature);\n    this.measureTooltip.setPosition(undefined);\n  };\n\n  setType(type) {\n    this.type = type;\n    this.removeInteraction();\n    this.addInteraction();\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  setFeaturePropertiesFromGeometry(feature) {\n    if (!feature) return;\n    var geom,\n      type = \"\",\n      length = 0,\n      radius = 0,\n      area = 0,\n      position = {\n        n: 0,\n        e: 0,\n      };\n    geom = feature.getGeometry();\n    type = geom.getType();\n    switch (type) {\n      case \"Point\":\n        position = {\n          n: Math.round(geom.getCoordinates()[1]),\n          e: Math.round(geom.getCoordinates()[0]),\n        };\n        break;\n      case \"LineString\":\n        if (geom.getLength() < 1000) {\n          length = Math.round(geom.getLength() * 10) / 10;\n        } else {\n          length = Math.round(geom.getLength());\n        }\n        break;\n      case \"Polygon\":\n        area = Math.round(geom.getArea());\n        break;\n      case \"Circle\":\n        radius = Math.round(geom.getRadius());\n        break;\n      default:\n        break;\n    }\n    feature.setProperties({\n      type: type,\n      length: length,\n      area: area,\n      radius: radius,\n      position: position,\n    });\n  }\n\n  formatLabel(type, value) {\n    let label;\n\n    if (type === \"point\") {\n      label = \"Nord: \" + value.n + \" Öst: \" + value.e;\n    }\n\n    if (typeof value === \"number\") {\n      if (type === \"length\" && value < 1000) {\n        value = Math.round(value * 10) / 10;\n      } else {\n        value = Math.round(value);\n      }\n    }\n\n    if (type === \"circle\") {\n      let unit = \" m\";\n      let squareUnit = \" m²\";\n      if (value >= 1000) {\n        unit = \" km\";\n        value = value / 1000;\n      }\n      label =\n        \"R = \" +\n        Number(value).toLocaleString() +\n        unit +\n        \" \\nA = \" +\n        (Math.round(value * value * Math.PI * 1000) / 1000).toLocaleString() +\n        squareUnit;\n    }\n\n    if (type === \"area\") {\n      if (value > 100000) {\n        label =\n          Number(Math.round((value / 1000000) * 100) / 100).toLocaleString() +\n          \" km²\";\n      } else {\n        label = Number(Math.round(value * 100) / 100).toLocaleString() + \" m²\";\n      }\n    }\n\n    if (type === \"length\") {\n      let unit = \" m\";\n      if (value >= 1000) {\n        unit = \" km\";\n        value = value / 1000;\n      }\n      label = Number(value).toLocaleString() + unit;\n    }\n\n    return label;\n  }\n\n  createMeasureTooltip() {\n    if (this.measureTooltipElement) {\n      this.measureTooltipElement.parentNode.removeChild(\n        this.measureTooltipElement\n      );\n    }\n    this.measureTooltipElement = document.createElement(\"div\");\n    this.measureTooltipElement.className = \"tooltip-draw tooltip-measure\";\n    this.measureTooltip = new Overlay({\n      element: this.measureTooltipElement,\n      offset: [0, -15],\n      positioning: \"bottom-center\",\n    });\n    this.map.addOverlay(this.measureTooltip);\n  }\n\n  getLabelText(feature) {\n    const props = feature.getProperties();\n    const type = feature.getProperties().type;\n    switch (type) {\n      case \"Point\":\n        return this.formatLabel(\"point\", props.position);\n      case \"LineString\":\n        return this.formatLabel(\"length\", props.length);\n      case \"Circle\":\n        return this.formatLabel(\"circle\", props.radius);\n      case \"Polygon\":\n        return this.formatLabel(\"area\", props.area);\n      default:\n        return \"\";\n    }\n  }\n\n  addInteraction() {\n    this.draw = new Draw({\n      source: this.source,\n      type: this.type,\n      style: new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.2)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          lineDash: [10, 10],\n          width: 2,\n        }),\n        image: new CircleStyle({\n          radius: 5,\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new Fill({\n            color: \"rgba(255, 255, 255, 0.2)\",\n          }),\n        }),\n      }),\n    });\n    this.draw.on(\"drawstart\", this.handleDrawStart);\n    this.draw.on(\"drawend\", this.handleDrawEnd);\n    this.map.addInteraction(this.draw);\n\n    // Add snap interactions AFTER measure source has been added\n    // this will allow us to snap to the newly added source too\n    this.map.snapHelper.add(\"measure\");\n  }\n\n  removeInteraction() {\n    this.measureTooltip.setPosition(undefined);\n    this.map.snapHelper.delete(\"measure\");\n    this.map.removeInteraction(this.draw);\n  }\n\n  eventHandler = (event) => {\n    const key = event.key; // Or const {key} = event; in ES6+\n    if (key === \"Escape\") {\n      this.draw.finishDrawing();\n    }\n  };\n\n  setActive(active) {\n    if (active && !this.active) {\n      document.addEventListener(\"keydown\", this.eventHandler);\n      this.addInteraction();\n      this.map.clickLock.add(\"measure\");\n    }\n    if (active === false) {\n      document.removeEventListener(\"keydown\", this.eventHandler);\n      this.removeInteraction();\n      this.map.clickLock.delete(\"measure\");\n    }\n    this.active = active;\n  }\n\n  getMap() {\n    return this.map;\n  }\n}\n\nexport default MeasureModel;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { withSnackbar } from \"notistack\";\nimport { Typography } from \"@mui/material\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  marginTop: theme.spacing(1),\n}));\n\nclass MeasureView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.app = props.app;\n    this.localObserver = props.localObserver;\n    this.state = {\n      shape: this.model.getType(),\n    };\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    this.model.setType(event.target.value);\n  };\n\n  render() {\n    return (\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            Vid ritning av sträckor och arealer är det möjligt att hålla ner\n            Shift-tangenten. Då kan man rita sträckan/arealen på fri hand.\n            <br />\n            <br />\n            För att avsluta en mätning, klicka igen på sista punkten eller tryck\n            på Esc-tangenten.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"measure-native-helper\">\n              Typ av mätning\n            </InputLabel>\n            <NativeSelect\n              value={this.state.shape}\n              onChange={this.handleChange(\"shape\")}\n              input={<Input name=\"shape\" id=\"measure-native-helper\" />}\n            >\n              <option value=\"Point\">Punkt</option>\n              <option value=\"LineString\">Sträcka</option>\n              <option value=\"Circle\">Cirkel</option>\n              <option value=\"Polygon\">Areal</option>\n            </NativeSelect>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={this.model.clear}\n          >\n            Rensa mätning\n          </StyledButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withSnackbar(MeasureView);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\n\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n\n  const {\n    children,\n    className,\n    focusVisibleClassName\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"],\n      _excluded2 = [\"root\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport NativeSelectInput from './NativeSelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getNativeSelectUtilityClasses } from './nativeSelectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\n\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\n\n\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n\n  const {\n    className,\n    children,\n    classes: classesProp = {},\n    IconComponent = ArrowDropDownIcon,\n    input = defaultInput,\n    inputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded2);\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(input, _extends({\n      // Most of the logic is implemented in `NativeSelectInput`.\n      // The `Select` component is a simple API wrapper to expose something better to play with.\n      inputComponent: NativeSelectInput,\n      inputProps: _extends({\n        children,\n        classes: otherClasses,\n        IconComponent,\n        variant: fcs.variant,\n        type: undefined\n      }, inputProps, input ? input.props.inputProps : {}),\n      ref\n    }, other, {\n      className: clsx(classes.root, input.props.className, className)\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","state","open","this","props","abstract","icon","onClick","title","avatar","subheader","React","defaultProps","BaseWindowPlugin","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","windowVisible","onWindowOpen","setState","custom","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","description","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","prevProps","target","includes","render","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","pluginIsWidget","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","renderWindow","MeasureIcon","SvgIcon","viewBox","d","Measure","model","setActive","localObserver","Observer","MeasureModel","top","left","MeasureView","settings","createStyle","feature","resolution","fillColor","strokeColor","Style","fill","Fill","stroke","Stroke","image","CircleStyle","radius","Text","textAlign","textBaseline","font","getLabelText","overflow","offsetX","offsetY","rotation","scale","clear","source","measureTooltip","setPosition","handleDrawStart","getGeometry","on","pointerCoord","toolTip","coord","active","pointerPosition","coordinate","LineString","formatLabel","getLength","getLastCoordinate","Polygon","getArea","getFirstCoordinate","measureTooltipElement","innerHTML","handleDrawEnd","setFeaturePropertiesFromGeometry","eventHandler","event","key","draw","finishDrawing","VectorSource","vector","VectorLayer","layerType","zIndex","name","caption","style","addLayer","createMeasureTooltip","removeInteraction","addInteraction","geom","length","area","n","getType","Math","round","getCoordinates","getRadius","setProperties","value","label","unit","Number","toLocaleString","PI","parentNode","removeChild","createElement","className","Overlay","element","offset","positioning","addOverlay","getProperties","Draw","lineDash","snapHelper","add","delete","addEventListener","clickLock","removeEventListener","StyledButton","Button","marginTop","handleChange","setType","shape","container","item","xs","variant","fullWidth","htmlFor","onChange","input","withSnackbar","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","ButtonBase","overridesResolver","styles","root","display","cardActionAreaClasses","opacity","vars","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","pointerEvents","right","bottom","backgroundColor","transition","transitions","create","duration","short","inProps","ref","useThemeProps","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible","_jsx","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","CardHeaderContent","content","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","as","getCardUtilityClass","CardRoot","Paper","raised","elevation","_excluded2","defaultInput","Input","NativeSelect","classesProp","IconComponent","ArrowDropDownIcon","inputProps","muiFormControl","useFormControl","fcs","formControlState","states","getNativeSelectUtilityClasses","otherClasses","inputComponent","NativeSelectInput","muiName","Property","once","un","insertFirst","stopEvent","CLASS_SELECTABLE","autoPan","rendered","transform_","visible","mapPostrenderListenerKey","addChangeListener","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","get","removeChildren","getElement","appendChild","removeNode","unlistenByKey","getMap","listen","MapEventType","updatePixelPosition","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","set","panIntoView","panIntoViewOptions","getTargetElement","mapRect","getRect","getSize","overlayRect","outerWidth","outerHeight","myMargin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","abs","center","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animation","animateInternal","getCoordinateFromPixelInternal","easing","size","box","getBoundingClientRect","window","pageXOffset","pageYOffset","getPosition","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","setVisible","getOffset","getPositioning","x","y","posX","posY","transform","BaseObject"],"sourceRoot":""}