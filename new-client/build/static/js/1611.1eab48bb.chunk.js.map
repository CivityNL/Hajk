{"version":3,"file":"static/js/1611.1eab48bb.chunk.js","mappings":"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","sources":["plugins/LayerSwitcher/components/CQLFilter.js","plugins/LayerSwitcher/components/LayerSettings.js","plugins/LayerSwitcher/components/VectorFilter.js","../node_modules/@mui/icons-material/Refresh.js","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  InputLabel,\n  OutlinedInput,\n  IconButton,\n  InputAdornment,\n  Tooltip,\n} from \"@mui/material\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\n\nconst CQLFilter = ({ layer }) => {\n  const source = layer.getSource();\n  const currentCqlFilterValue =\n    (typeof source.getParams === \"function\" &&\n      source.getParams()?.CQL_FILTER) ||\n    \"\";\n\n  const [cqlFilter, setCqlFilter] = useState(currentCqlFilterValue);\n\n  const updateFilter = () => {\n    let filter = cqlFilter.trim();\n    if (filter.length === 0) filter = undefined; // If length === 0, unset filter.\n    layer.getSource().updateParams({ CQL_FILTER: filter });\n  };\n\n  return (\n    <>\n      <InputLabel htmlFor=\"cqlfilter\">Ange CQL-filter</InputLabel>\n      <OutlinedInput\n        id=\"cqlfilter\"\n        type=\"text\"\n        multiline\n        fullWidth\n        placeholder=\"foo='bar' AND fii='baz'\"\n        value={cqlFilter}\n        onChange={(e) => setCqlFilter(e.target.value)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <Tooltip\n              disableInteractive\n              title=\"Tryck fÃ¶r att ladda om lagret med angivet filter\"\n            >\n              <IconButton edge=\"end\" onClick={updateFilter} size=\"large\">\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </InputAdornment>\n        }\n      />\n    </>\n  );\n};\n\nexport default CQLFilter;\n","import React from \"react\";\nimport VectorFilter from \"./VectorFilter\";\nimport CQLFilter from \"./CQLFilter\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport { styled } from \"@mui/material/styles\";\n\nconst SettingsContainer = styled(\"div\")(({ theme }) => ({\n  overflow: \"hidden\",\n  paddingLeft: \"45px\",\n  paddingRight: \"30px\",\n  paddingBottom: \"10px\",\n  paddingTop: \"10px\",\n}));\n\nconst SliderContainer = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexFlow: \"row nowrap\",\n  alignItems: \"center\",\n}));\n\nconst SliderTextWrapper = styled(\"div\")(({ theme }) => ({\n  flex: \"0 1 auto\",\n  minWidth: \"40px\",\n}));\n\nconst SliderWrapper = styled(\"div\")(({ theme }) => ({\n  padding: \"0 16px\",\n  flex: \"1 1 auto\",\n  \"& > span\": {\n    top: \"4px\",\n  },\n}));\n\nclass LayerSettings extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { layer } = props;\n    const layerInfo = layer.get(\"layerInfo\");\n\n    this.state = {\n      opacityValue: layer.get(\"opacity\"),\n      legend: layerInfo.legend,\n    };\n\n    // Ensure that state is updated when OL Layer's opacity changes\n    layer.on?.(\"change:opacity\", this.updateOpacity);\n  }\n\n  // Ensure that opacity slider's value gets updated when\n  // opacity is changed programmatically (e.g. via BreadCrumbs)\n  updateOpacity = (e) => {\n    const opacityValue = e.target.getOpacity();\n    this.setState({\n      opacityValue,\n    });\n  };\n\n  renderOpacitySlider() {\n    const opacityValue = this.state.opacityValue;\n    return (\n      <SliderContainer>\n        <SliderTextWrapper>\n          <Typography variant=\"subtitle2\">Opacitet:</Typography>\n        </SliderTextWrapper>\n        <SliderWrapper>\n          <Slider\n            size=\"small\"\n            value={opacityValue}\n            min={0}\n            max={1}\n            step={0.05}\n            onChange={this.opacitySliderChanged}\n          />\n        </SliderWrapper>\n        <SliderTextWrapper>\n          <Typography variant=\"subtitle2\">\n            {Math.trunc(100 * opacityValue.toFixed(2))} %\n          </Typography>\n        </SliderTextWrapper>\n      </SliderContainer>\n    );\n  }\n\n  /* This function does two things:\n   * 1) it updates opacityValue, which is in state,\n   *    and is important as <Slider> uses it to set\n   *    its internal value.\n   * 2) it changes OL layer's opacity\n   *\n   * As <Slider> is set up to return a value between\n   * 0 and 1 and it has a step of 0.1, we don't have\n   * to worry about any conversion and rounding here.\n   * */\n  opacitySliderChanged = (event, opacityValue) => {\n    this.props.layer.setOpacity(opacityValue);\n  };\n\n  toggle = (e) => {\n    this.setState({\n      toggled: !this.state.toggled,\n    });\n  };\n\n  renderSettings() {\n    return (\n      <div>\n        <SettingsContainer>\n          {this.props.options?.enableTransparencySlider !== false &&\n          this.props.showOpacity\n            ? this.renderOpacitySlider()\n            : null}\n          {this.props.showLegend ? this.renderLegendImage() : null}\n          {this.props.layer.getProperties().filterable ? (\n            <VectorFilter layer={this.props.layer} />\n          ) : null}\n          {this.props.cqlFilterVisible && (\n            <CQLFilter layer={this.props.layer} />\n          )}\n        </SettingsContainer>\n      </div>\n    );\n  }\n\n  renderLegendImage() {\n    const index = this.props.index ? this.props.index : 0;\n    const src = this.state.legend?.[index]?.url ?? \"\";\n\n    return src ? (\n      <div>\n        <img max-width=\"250px\" alt=\"TeckenfÃ¶rklaring\" src={src} />\n      </div>\n    ) : null;\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.props.toggled ? this.renderSettings() : null}</div>\n      </div>\n    );\n  }\n}\n\nexport default LayerSettings;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { hfetch } from \"utils/FetchWrapper\";\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  margin: theme.spacing(1),\n  minWidth: 120,\n}));\n\nconst StyledTypography = styled(Typography)(({ theme }) => ({\n  fontWeight: 500,\n}));\n\nclass VectorFilter extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterAttribute: props.layer.get(\"filterAttribute\") || \"\",\n      filterValue: props.layer.get(\"filterValue\") || \"\",\n      filterComparer: props.layer.get(\"filterComparer\") || \"\",\n      layerProperties: [],\n    };\n    this.loadFeatureInfo();\n  }\n\n  /**\n   * @summary Prepare entries for dropdown, will contain possible values for filterAttribute.\n   *\n   * @memberof VectorFilter\n   */\n  loadFeatureInfo = () => {\n    const { url, featureType } = this.props.layer.getProperties();\n    hfetch(\n      url +\n        `?service=WFS&request=describeFeatureType&outputFormat=application/json&typename=${featureType}`\n    ).then((response) => {\n      response.json().then((featureInfo) => {\n        const featureTypeInfo = featureInfo.featureTypes.find(\n          (type) => type.typeName === featureType\n        );\n        if (featureTypeInfo && Array.isArray(featureTypeInfo.properties)) {\n          const layerProperties = featureTypeInfo.properties\n            .filter((property) => property.type !== \"gml:Geometry\")\n            .map((property) => property.name);\n          this.setState({\n            layerProperties,\n          });\n        }\n      });\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  /**\n   * @summary Reads filter options from state, applies them on layer and refreshes the source.\n   *\n   * @memberof VectorFilter\n   */\n  setFilter = (e) => {\n    this.props.layer.set(\"filterAttribute\", this.state.filterAttribute);\n    this.props.layer.set(\"filterComparer\", this.state.filterComparer);\n    this.props.layer.set(\"filterValue\", this.state.filterValue);\n\n    this.props.layer.getSource().refresh();\n  };\n\n  /**\n   * @ Resets the UI to no filter and reloads the source\n   *\n   * @memberof VectorFilter\n   */\n  resetFilter = (e) => {\n    // Reset the UI\n    this.setState({\n      filterAttribute: \"\",\n      filterValue: \"\",\n      filterComparer: \"\",\n    });\n\n    // Reset filter options on layer\n    this.props.layer.set(\"filterAttribute\", \"\");\n    this.props.layer.set(\"filterComparer\", \"\");\n    this.props.layer.set(\"filterValue\", \"\");\n\n    // Refresh source\n    this.props.layer.getSource().refresh();\n  };\n\n  render() {\n    const { layer } = this.props;\n    if (layer instanceof VectorLayer) {\n      return (\n        <>\n          <StyledTypography variant=\"subtitle2\">\n            Filtrera innehÃ¥ll baserat pÃ¥ attribut\n          </StyledTypography>\n          <StyledFormControl>\n            <InputLabel htmlFor=\"attribute\">Attribut</InputLabel>\n            <Select\n              value={this.state.filterAttribute}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"filterAttribute\",\n                id: \"attribute\",\n              }}\n            >\n              {this.state.layerProperties.map((property, i) => {\n                return (\n                  <MenuItem key={i} value={property}>\n                    {property}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel htmlFor=\"comparer\">JÃ¤mfÃ¶rare</InputLabel>\n            <Select\n              value={this.state.filterComparer}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"filterComparer\",\n                id: \"comparer\",\n              }}\n            >\n              <MenuItem value=\"gt\">StÃ¶rre Ã¤n</MenuItem>\n              <MenuItem value=\"lt\">Mindre Ã¤n</MenuItem>\n              <MenuItem value=\"eq\">Lika med</MenuItem>\n              <MenuItem value=\"not\">Skilt frÃ¥n</MenuItem>\n            </Select>\n          </StyledFormControl>\n          <StyledFormControl>\n            <Input\n              value={this.state.filterValue}\n              onChange={this.handleChange}\n              placeholder=\"FiltervÃ¤rde\"\n              inputProps={{\n                name: \"filterValue\",\n                \"aria-label\": \"VÃ¤rde\",\n              }}\n            />\n          </StyledFormControl>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={this.setFilter}>\n            Aktivera\n          </Button>\n          <Button onClick={this.resetFilter}>ÃterstÃ¤ll</Button>\n        </>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default VectorFilter;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["layer","source","getSource","currentCqlFilterValue","getParams","CQL_FILTER","useState","cqlFilter","setCqlFilter","htmlFor","id","type","multiline","fullWidth","placeholder","value","onChange","e","target","endAdornment","position","disableInteractive","title","edge","onClick","filter","trim","length","undefined","updateParams","size","SettingsContainer","styled","theme","overflow","paddingLeft","paddingRight","paddingBottom","paddingTop","SliderContainer","display","flexFlow","alignItems","SliderTextWrapper","flex","minWidth","SliderWrapper","padding","top","LayerSettings","props","updateOpacity","opacityValue","getOpacity","setState","opacitySliderChanged","event","setOpacity","toggle","toggled","state","layerInfo","get","legend","on","this","variant","min","max","step","Math","trunc","toFixed","options","enableTransparencySlider","showOpacity","renderOpacitySlider","showLegend","renderLegendImage","getProperties","filterable","cqlFilterVisible","index","src","url","alt","renderSettings","React","StyledFormControl","FormControl","margin","spacing","StyledTypography","Typography","fontWeight","VectorFilter","loadFeatureInfo","featureType","hfetch","then","response","json","featureInfo","featureTypeInfo","featureTypes","find","typeName","Array","isArray","properties","layerProperties","property","map","name","handleChange","setFilter","set","filterAttribute","filterComparer","filterValue","refresh","resetFilter","VectorLayer","inputProps","i","color","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","_extends","height","maxHeight","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs"],"sourceRoot":""}