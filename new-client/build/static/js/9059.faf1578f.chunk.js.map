{"version":3,"file":"static/js/9059.faf1578f.chunk.js","mappings":"kOAkEA,UA9DqB,SAAC,GAA2C,IAAzCA,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,mBACrC,EAAsCC,EAAAA,UAAe,GAArD,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAoBH,EAAAA,aAAA,iBAAkB,yGAElCI,EAAYC,SAASC,eAAe,kBAFF,oCAGvBC,EAHuB,QAKhCC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IACEX,EAAmBS,EAAOG,OAG3B,CAFC,MAAOC,GACPC,QAAQD,MAAR,4CAAmDA,GACpD,CACF,EACDJ,EAAOM,WAAWP,EAboB,YAGfH,EAAUW,OAHK,ybAgBxCF,QAAQD,MAAR,oDAhBwC,QAoB1Cd,GAAQ,GACRI,GAAe,GArB2B,mFAsBzC,CAACJ,EAASC,IAEPiB,EAAmBhB,EAAAA,aAAkB,WACzCF,GAAQ,EACT,GAAE,CAACA,IAEEmB,EAAwBjB,EAAAA,aAAkB,SAACkB,GAC/C,IAAMd,EAAYC,SAASC,eAAe,kBAC1CJ,EAAeE,EAAUW,MAAMI,OAAS,EACzC,GAAE,IAEH,OAAOC,EAAAA,EAAAA,eACL,SAAC,UAAD,CACEC,QAAS,CACPC,WAAY,uBACZC,WAAYtB,EAAc,YAAc,KACxCuB,UAAW,SACXC,MACE,kBACEC,KAAK,OACLC,KAAK,UACLC,OAAO,OACPC,UAAQ,EACRC,GAAG,iBACHC,SAAUd,IAGde,8BAA8B,GAEhCnC,KAAMA,EACNoC,QAAS9B,EACT+B,QAASlB,IAEXX,SAASC,eAAe,OAE3B,C,wBChEc,SAAS6B,EAAeC,GACrC,IAAIC,EACAC,EACAC,EACAC,EAAQ,EAEZ,IAAK,oBAAsBC,SAAWH,EAAQG,OAAOC,cAAeH,EAAOE,OAAOE,UAAWH,KAAU,CACrG,GAAIF,GAAS,OAASD,EAASD,EAASE,IAAS,OAAOD,EAAOO,KAAKR,GACpE,GAAIG,GAAQ,OAASF,EAASD,EAASG,IAAQ,OAAO,IAAIM,EAAsBR,EAAOO,KAAKR,IAC5FE,EAAQ,kBAAmBC,EAAO,YACpC,CAEA,MAAM,IAAIO,UAAU,+BACtB,CAEA,SAASD,EAAsBE,GAC7B,SAASC,EAAkCC,GACzC,GAAIC,OAAOD,KAAOA,EAAG,OAAOE,QAAQC,OAAO,IAAIN,UAAUG,EAAI,uBAC7D,IAAII,EAAOJ,EAAEI,KACb,OAAOF,QAAQG,QAAQL,EAAEM,OAAOC,MAAK,SAAUD,GAC7C,MAAO,CACLA,MAAOA,EACPF,KAAMA,EAEV,GACF,CAEA,OAAOR,EAAwB,SAA+BE,GAC5DU,KAAKV,EAAIA,EAAGU,KAAKC,EAAIX,EAAEY,IACzB,EAAGd,EAAsBe,UAAY,CACnCb,EAAG,KACHW,EAAG,KACHC,KAAM,WACJ,OAAOX,EAAkCS,KAAKC,EAAEG,MAAMJ,KAAKV,EAAGe,WAChE,EACA,OAAU,SAAiBP,GACzB,IAAIQ,EAAMN,KAAKV,EAAU,OACzB,YAAO,IAAWgB,EAAMZ,QAAQG,QAAQ,CACtCC,MAAOA,EACPF,MAAM,IACHL,EAAkCe,EAAIF,MAAMJ,KAAKV,EAAGe,WAC3D,EACA,MAAS,SAAgBP,GACvB,IAAIS,EAAMP,KAAKV,EAAU,OACzB,YAAO,IAAWiB,EAAMb,QAAQC,OAAOG,GAASP,EAAkCgB,EAAIH,MAAMJ,KAAKV,EAAGe,WACtG,GACC,IAAIjB,EAAsBE,EAC/B,C","sources":["plugins/Sketch/components/UploadDialog.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js"],"sourcesContent":["import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Dialog from \"../../../components/Dialog/Dialog\";\n\nconst UploadDialog = ({ open, setOpen, handleUploadedFile }) => {\n  const [filesChosen, setFilesChosen] = React.useState(false);\n\n  const handleUploadClick = React.useCallback(async () => {\n    try {\n      const fileInput = document.getElementById(\"kml-file-input\");\n      for await (const file of fileInput.files) {\n        // The file-reader should not be re-used. Let's initialize a new for each file.\n        const reader = new FileReader();\n        reader.onload = () => {\n          try {\n            handleUploadedFile(reader.result);\n          } catch (error) {\n            console.error(`Failed to import kml-file. Error: ${error}`);\n          }\n        };\n        reader.readAsText(file);\n      }\n    } catch (error) {\n      console.error(`Failed to import kml-files. Error: ${error}`);\n    }\n    // When we're done we have to close the dialog and make sure we disable the upload-button\n    // by setting the filesChosen-state to false.\n    setOpen(false);\n    setFilesChosen(false);\n  }, [setOpen, handleUploadedFile]);\n\n  const handleCloseClick = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleFileInputChange = React.useCallback((e) => {\n    const fileInput = document.getElementById(\"kml-file-input\");\n    setFilesChosen(fileInput.files.length > 0);\n  }, []);\n\n  return createPortal(\n    <Dialog\n      options={{\n        headerText: \"Ladda upp .kml-filer\",\n        buttonText: filesChosen ? \"Ladda upp\" : null,\n        abortText: \"Avbryt\",\n        text: (\n          <input\n            type=\"file\"\n            name=\"files[]\"\n            accept=\".kml\"\n            multiple\n            id=\"kml-file-input\"\n            onChange={handleFileInputChange}\n          />\n        ),\n        useLegacyNonMarkdownRenderer: true,\n      }}\n      open={open}\n      onClose={handleUploadClick}\n      onAbort={handleCloseClick}\n    />,\n    document.getElementById(\"map\")\n  );\n};\n\nexport default UploadDialog;\n","export default function _asyncIterator(iterable) {\n  var method,\n      async,\n      sync,\n      retry = 2;\n\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}"],"names":["open","setOpen","handleUploadedFile","React","filesChosen","setFilesChosen","handleUploadClick","fileInput","document","getElementById","file","reader","FileReader","onload","result","error","console","readAsText","files","handleCloseClick","handleFileInputChange","e","length","createPortal","options","headerText","buttonText","abortText","text","type","name","accept","multiple","id","onChange","useLegacyNonMarkdownRenderer","onClose","onAbort","_asyncIterator","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","call","AsyncFromSyncIterator","TypeError","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","done","resolve","value","then","this","n","next","prototype","apply","arguments","ret","thr"],"sourceRoot":""}