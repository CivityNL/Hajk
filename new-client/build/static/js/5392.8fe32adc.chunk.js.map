{"version":3,"file":"static/js/5392.8fe32adc.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/documentSearch/DocumentSearchModel.js","plugins/DocumentHandler/documentSearch/MatchSearch.js","plugins/DocumentHandler/utils/helpers.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import MatchSearch from \"./MatchSearch\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { splitAndTrimOnCommas } from \"../utils/helpers\";\nimport { decodeCommas } from \"../../../utils/StringCommaCoder\";\n\nexport default class DocumentSearchModel {\n  constructor(settings) {\n    this.globalSearchModel = settings.globalSearchModel;\n    this.documentCollections = this.createDocumentCollectionsToSearch(\n      settings.allDocuments\n    );\n    this.localObserver = settings.localObserver;\n    this.app = settings.app;\n    this.bindListenForSearchResultClick();\n  }\n\n  bindListenForSearchResultClick = () => {\n    // The event published from the search component will be prepended\n    // with \"search.featureClicked\", therefore we have to subscribe\n    // to search.featureClicked.onClickName to catch the event.\n    this.app.globalObserver.subscribe(\n      \"search.featureClicked.documentHandlerSearchResultClicked\",\n      (searchResultClick) => {\n        this.localObserver.publish(\"document-link-clicked\", {\n          documentName: searchResultClick.properties.documentFileName,\n          headerIdentifier: searchResultClick.properties.headerIdentifier,\n        });\n      }\n    );\n  };\n\n  createDocumentCollectionsToSearch = (allDocuments) => {\n    return allDocuments.reduce((documentCollection, document) => {\n      return [\n        ...documentCollection,\n        {\n          documentFileName: document.documentFileName,\n          documentTitle: document.documentTitle,\n          features: [\n            ...this.getFeatures(document.chapters, document),\n            this.getSpecialTitleFeature(\n              document\n            ) /*We need to add a special feature that is not working the same way \n            when autocomplete is initiated and when a search is initiated.*/,\n          ],\n        },\n      ];\n    }, []);\n  };\n\n  getFeatures = (chapters, document) => {\n    return chapters.reduce((features, chapter) => {\n      if (chapter.chapters) {\n        features = [\n          ...features,\n          ...this.getFeatures(chapter.chapters, document),\n        ];\n      }\n      features = [\n        ...features,\n        this.createFeatureFromChapter(chapter, document),\n      ];\n      return features;\n    }, []);\n  };\n\n  /*We add a special feature to with only document.title as searchfield.\n  this feature is used when user is getting an autocomplete. \n  See method handleSpecialCaseWithTitleHit for more information.\n  */\n\n  getSpecialTitleFeature = (document) => {\n    let properties = {\n      header: document.documentTitle,\n      geoids: [],\n      headerIdentifier: document.documentTitle,\n      documentTitle: document.documentTitle,\n      documentFileName: document.documentFileName,\n    };\n\n    const id = `${document.documentTitle}${Math.floor(Math.random() * 1000)}`;\n\n    return {\n      type: \"Feature\",\n      isTitleFeature: true,\n      geometry: null,\n      searchValues: [document.title],\n      id: id,\n      onClickName: \"documentHandlerSearchResultClicked\",\n      properties: properties,\n      get: (p) => properties[p],\n      getGeometry: () => null,\n      getId: () => id,\n      setStyle: () => null,\n    };\n  };\n\n  createFeatureFromChapter = (chapter, document) => {\n    let searchValues = [];\n\n    if (chapter.header) {\n      searchValues.push(chapter.header);\n    }\n    if (chapter.keywords && chapter.keywords.length > 0) {\n      searchValues = [...searchValues, ...chapter.keywords];\n    }\n\n    const properties = {\n      header: chapter.header,\n      geoids: chapter.geoids,\n      headerIdentifier: chapter.headerIdentifier,\n      documentTitle: document.documentTitle,\n      documentFileName: document.documentFileName,\n    };\n\n    const id = `${chapter.headerIdentifier}${Math.floor(Math.random() * 1000)}`;\n\n    return {\n      type: \"Feature\",\n      geometry: null,\n      isTitleFeature: false,\n      searchValues: searchValues,\n      id: id,\n      onClickName: \"documentHandlerSearchResultClicked\",\n      properties: properties,\n      get: (p) => properties[p],\n      getGeometry: () => null,\n      getId: () => id,\n      setStyle: () => null,\n    };\n  };\n\n  implementSearchInterface = () => {\n    return {\n      getResults: this.getResults,\n      getFunctionality: this.getFunctionality,\n    };\n  };\n\n  // getFunctionality is called by searchComponent in core (Part of searchInterface)\n  // The search-component demands this method, and if it is not present in the interface,\n  // the plugin will not be used in the search-component at all.\n  // The getFunctionality-method is supposed to return an object as follows:\n  // return {\n  //   name: \"TOOL DISPLAY NAME\",\n  //   icon: TOOL ICON,\n  //   type: \"EXTERNAL_PLUGIN\",\n  //   searchFunctionalityClickName: \"GLOBAL OBSERVER EVENT NAME\",\n  // };\n  // If we want to make use of the plugin in the search-component regardless (without the functionality)\n  // we can just let the method return null.\n  getFunctionality = () => {\n    return null;\n  };\n\n  //Method called by searchComponent in core (Part of searchInterface)\n  getResults = (searchString, searchOptions) => {\n    this.matchSearch = new MatchSearch(searchOptions);\n    this.searchOptions = searchOptions;\n    return this.getDocumentHandlerResults(searchString);\n  };\n\n  getDocumentHandlerResults = (searchString) => {\n    return new Promise((resolve, reject) => {\n      if (searchString === \"\") {\n        resolve({ featureCollections: [], errors: [] });\n      }\n      let possibleSearchCombinations = this.searchOptions\n        .getPossibleCombinations\n        ? this.globalSearchModel.getPossibleSearchCombinations(searchString)\n        : [splitAndTrimOnCommas(searchString)];\n\n      // The searchString will be encoded if the search has been initiated\n      // by selecting an alternative in the autocomplete.\n      possibleSearchCombinations =\n        this.decodePotentialSpecialCharsFromFeatureProps(\n          possibleSearchCombinations\n        );\n\n      resolve({\n        featureCollections: this.getFeatureCollectionsForMatchingDocuments(\n          possibleSearchCombinations\n        ),\n        errors: [],\n      });\n    });\n  };\n\n  decodePotentialSpecialCharsFromFeatureProps = (searchCombinations) => {\n    return searchCombinations.map((combination) => {\n      return combination.map((word) => {\n        return decodeCommas(word);\n      });\n    });\n  };\n\n  getSearchFields = (matchedFeatures) => {\n    return matchedFeatures.reduce((searchFields, feature) => {\n      if (feature.matchedSearchValues.length > 0) {\n        searchFields = [\n          ...searchFields,\n          ...this.getMockedSearchFieldForChapter(feature),\n        ];\n      }\n      return searchFields;\n    }, []);\n  };\n\n  /*When a search is initiated for autocomplete we search for the title of the document\n  only in the special features created in getSpecialTitleFeature. When the user then\n  clicks this feature in the searchresultlist, we add the documenttitle as a searchfield\n  for all chapters/features in that document because we want to show the user all\n  the chapters in that document*/\n\n  getMatchedFeatures = (docFeatureCollection, possibleSearchCombinations) => {\n    const { initiator } = this.searchOptions;\n    return docFeatureCollection.features.reduce((matchedFeatures, feature) => {\n      if (initiator === \"search\") {\n        if (feature.isTitleFeature) {\n          //If feature is a special titleFeature and we are making a search, it is not supposed to be in the resultlist\n          return matchedFeatures;\n        }\n        feature.searchValues.push(docFeatureCollection.documentTitle);\n      }\n\n      if (initiator === \"autocomplete\" && !feature.isTitleFeature) {\n        feature.searchValues = feature.searchValues.filter((searchValue) => {\n          return searchValue !== docFeatureCollection.documentTitle;\n        });\n      }\n\n      feature.matchedSearchValues = this.getMatchedSearchValues(\n        possibleSearchCombinations,\n        feature.searchValues\n      );\n\n      return feature.matchedSearchValues.length > 0\n        ? [...matchedFeatures, feature]\n        : matchedFeatures;\n    }, []);\n  };\n\n  createFeatureCollection = (\n    matchedFeatures,\n    searchFields,\n    docFeatureCollection\n  ) => {\n    return {\n      value: {\n        status: \"fulfilled\",\n        type: \"FeatureCollection\",\n        crs: { type: null, properties: { name: null } },\n        features: matchedFeatures,\n        numberMatched: matchedFeatures.length,\n        numberReturned: matchedFeatures.length,\n        timeStamp: new Date().toISOString(),\n        totalFeatures: matchedFeatures.length,\n      },\n      source: {\n        id:\n          docFeatureCollection.documentTitle ||\n          docFeatureCollection.documentFileName,\n        caption:\n          docFeatureCollection.documentTitle ||\n          docFeatureCollection.documentFileName,\n        displayFields: [\"header\"],\n        searchFields: [...searchFields],\n      },\n      origin: \"DOCUMENT\",\n    };\n  };\n\n  getFeatureCollectionsForMatchingDocuments = (possibleSearchCombinations) => {\n    return this.documentCollections.reduce(\n      (featureCollections, documentCollection) => {\n        const matchedFeatures = this.getMatchedFeatures(\n          documentCollection,\n          possibleSearchCombinations\n        );\n        const searchFields = this.getSearchFields(matchedFeatures);\n        const featureCollection = this.createFeatureCollection(\n          matchedFeatures,\n          searchFields,\n          documentCollection\n        );\n\n        return featureCollection\n          ? [...featureCollections, featureCollection]\n          : featureCollections;\n      },\n      []\n    );\n  };\n\n  getMockedSearchFieldForChapter = (feature) => {\n    return feature.matchedSearchValues.reduce((searchFields, searchValue) => {\n      const searchField = uuidv4();\n      feature.properties[searchField] = searchValue;\n      return [...searchFields, searchField];\n    }, []);\n  };\n\n  getAllMatchedSearchValues = (word, searchValues) => {\n    const allMatched = new Set();\n    const matchedSearchValues = this.getMatched(word, searchValues);\n\n    matchedSearchValues.forEach((matched) => {\n      allMatched.add(matched);\n    });\n\n    return allMatched;\n  };\n\n  /**\n   * TODO - Try to refactor, difficult though\n   * If any (some-function) of the searchcombinations is hit, that is a match\n   * a searchCombination can be a hit if the documentTitle is present in the combination, results in adding all as matched\n   * a searchCombination can be hit if every combination has a searchhit\n   */\n  getMatchedSearchValues = (searchCombinations, searchValues) => {\n    let allMatched = new Set();\n    let match = searchCombinations.some((searchCombination) => {\n      return searchCombination.every((word) => {\n        let matchedSet = this.getAllMatchedSearchValues(word, searchValues);\n        allMatched = new Set([...allMatched, ...matchedSet]);\n        return matchedSet.size > 0;\n      });\n    });\n    return match ? Array.from(allMatched) : [];\n  };\n\n  getMatched = (searchString, searchFields) => {\n    return searchFields.reduce((matchedSearchFields, searchField) => {\n      if (this.matchSearch.compare(searchString, searchField)) {\n        return [...matchedSearchFields, searchField];\n      }\n      return matchedSearchFields;\n    }, []);\n  };\n}\n","export default class MatchSearch {\n  constructor(searchOptions) {\n    this.searchOptions = searchOptions;\n  }\n\n  getMatchRegexp = (searchString) => {\n    const { wildcardAtEnd, wildcardAtStart, matchCase } = this.searchOptions;\n\n    let regexpOptions = matchCase ? \"g\" : \"gi\";\n    if (wildcardAtStart && !wildcardAtEnd) {\n      return new RegExp(`.*${searchString}$`, regexpOptions);\n    }\n\n    if (!wildcardAtStart && wildcardAtEnd) {\n      return new RegExp(`^${searchString}.*`, regexpOptions);\n    }\n\n    if (wildcardAtStart && wildcardAtEnd) {\n      return new RegExp(`${searchString}`, regexpOptions);\n    }\n    return new RegExp(`^${searchString}$`, regexpOptions);\n  };\n\n  escapeSpecialChars = (string) => {\n    return string.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n  };\n\n  compare = (searchString, searchword) => {\n    const toSearchIn = this.escapeSpecialChars(searchString);\n    const match = this.getMatchRegexp(toSearchIn).test(searchword);\n\n    return match;\n  };\n}\n","export const splitAndTrimOnCommas = (searchString) => {\n  return searchString.split(\",\").map((string) => {\n    return string.trim();\n  });\n};\n\nexport const getStringArray = (searchString) => {\n  let tempStringArray = splitAndTrimOnCommas(searchString);\n  return tempStringArray.join(\" \").split(\" \");\n};\n\nexport const hasSubMenu = (item) => {\n  return item.menu && item.menu.length > 0;\n};\n\nexport const flattenChaptersTree = (chapters) => {\n  return chapters.reduce((acc, chapter) => {\n    if (chapter.header) {\n      let chapterStrippedFromSubChapters = { ...chapter };\n      chapterStrippedFromSubChapters.chapters = [];\n      acc = [...acc, chapterStrippedFromSubChapters];\n    }\n    if (chapter.chapters && chapter.chapters.length > 0) {\n      return [...acc, ...flattenChaptersTree(chapter.chapters)];\n    }\n    return acc;\n  }, []);\n};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["DocumentSearchModel","settings","bindListenForSearchResultClick","app","globalObserver","subscribe","searchResultClick","localObserver","publish","documentName","properties","documentFileName","headerIdentifier","createDocumentCollectionsToSearch","allDocuments","reduce","documentCollection","document","documentTitle","features","getFeatures","chapters","getSpecialTitleFeature","chapter","createFeatureFromChapter","header","geoids","id","Math","floor","random","type","isTitleFeature","geometry","searchValues","title","onClickName","get","p","getGeometry","getId","setStyle","push","keywords","length","implementSearchInterface","getResults","getFunctionality","searchString","searchOptions","matchSearch","MatchSearch","getDocumentHandlerResults","Promise","resolve","reject","featureCollections","errors","possibleSearchCombinations","getPossibleCombinations","globalSearchModel","getPossibleSearchCombinations","splitAndTrimOnCommas","decodePotentialSpecialCharsFromFeatureProps","getFeatureCollectionsForMatchingDocuments","searchCombinations","map","combination","word","decodeCommas","getSearchFields","matchedFeatures","searchFields","feature","matchedSearchValues","getMockedSearchFieldForChapter","getMatchedFeatures","docFeatureCollection","initiator","filter","searchValue","getMatchedSearchValues","createFeatureCollection","value","status","crs","name","numberMatched","numberReturned","timeStamp","Date","toISOString","totalFeatures","source","caption","displayFields","origin","documentCollections","featureCollection","searchField","uuidv4","getAllMatchedSearchValues","allMatched","Set","getMatched","forEach","matched","add","some","searchCombination","every","matchedSet","size","Array","from","matchedSearchFields","compare","this","getMatchRegexp","wildcardAtEnd","wildcardAtStart","regexpOptions","matchCase","RegExp","escapeSpecialChars","string","replace","searchword","toSearchIn","test","split","trim","getStringArray","join","hasSubMenu","item","menu","flattenChaptersTree","acc","chapterStrippedFromSubChapters","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","toString","substr","arr","offset","arguments","undefined","toLowerCase","validate","TypeError","options","buf","rnds","stringify"],"sourceRoot":""}