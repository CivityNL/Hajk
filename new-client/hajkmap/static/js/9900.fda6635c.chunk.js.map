{"version":3,"file":"static/js/9900.fda6635c.chunk.js","mappings":"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","sources":["plugins/Edit/EditView.js","plugins/Edit/components/AttributeEditor.js","plugins/Edit/components/Toolbar.js"],"sourcesContent":["import React from \"react\";\nimport Toolbar from \"./components/Toolbar\";\nimport AttributeEditor from \"./components/AttributeEditor\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport { Step, StepContent, StepLabel, Stepper } from \"@mui/material\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\n\nclass EditView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sources: props.model.getSources(),\n      editSource: undefined,\n      editFeature: undefined,\n      activeStep: 0,\n      activeTool: undefined,\n    };\n    this.bindSubscriptions();\n  }\n\n  bindSubscriptions = () => {\n    this.props.observer.subscribe(\"editFeature\", (feature) => {\n      this.props.observer.publish(\"feature-to-update-view\", feature);\n      this.setState({\n        editFeature: feature,\n        editSource: this.props.model.editSource,\n      });\n    });\n\n    this.props.observer.subscribe(\"resetView\", () => {\n      this.props.observer.publish(\"feature-to-update-view\", undefined);\n      this.setState({\n        editFeature: undefined,\n        editSource: undefined,\n        activeStep: 0,\n        activeTool: undefined,\n      });\n    });\n  };\n\n  handleVectorLoadingDone = (status) => {\n    this.setState({\n      loading: false,\n      loadingError: status === \"data-load-error\" ? true : false,\n      activeStep: status === \"data-load-error\" ? 0 : 1,\n    });\n  };\n\n  setLayer(serviceId) {\n    console.log(\"Achterlijke teringzooi \" + serviceId);\n    this.props.model.reset();\n    this.setState({\n      loading: true,\n    });\n    this.props.model.setLayer(serviceId, this.handleVectorLoadingDone);\n  }\n\n  handlePrev = () => {\n    const activeStep = this.state.activeStep - 1;\n    if (activeStep === 0) {\n      this.props.model.reset();\n      this.setState({\n        editFeature: undefined,\n        editSource: undefined,\n        activeStep: 0,\n        activeTool: undefined,\n      });\n    } else {\n      this.setState({ activeStep });\n    }\n  };\n\n  handleNext = () => {\n    const activeStep = this.state.activeStep + 1;\n    this.setState({ activeStep });\n  };\n\n  toggleActiveTool = (toolName) => {\n    let setTool = undefined;\n    if (toolName !== this.state.activeTool) {\n      setTool = toolName;\n    }\n    this.setState({\n      activeTool: setTool,\n    });\n  };\n\n  getStatusMessage = (data) => {\n    if (!data) {\n      return (\n        <Typography>\n          De update is succesvol verlopen, maar er zijn geen wijzigingen\n          gedetecteerd.\n        </Typography>\n      );\n    }\n    if (data.ExceptionReport) {\n      return (\n        <Typography>\n          De update is mislukt:{\" \"}\n          {data.ExceptionReport.Exception.ExceptionText.toString()}\n        </Typography>\n      );\n    }\n    if (\n      data.TransactionResponse &&\n      data.TransactionResponse.TransactionSummary\n    ) {\n      return (\n        <div>\n          <Typography>De update is succesvol verlopen.</Typography>\n          <Typography>\n            Aantal aangemaakte objecten:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalInserted?.toString() ||\n              0}\n          </Typography>\n          <Typography>\n            Aantal verwijderde objecten:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalDeleted?.toString() ||\n              0}\n          </Typography>\n          <Typography>\n            Aantal bijgewerkte objecten:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalUpdated?.toString() ||\n              0}\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <Typography>\n          De status van de update kon niet worden bepaald aan de hand van het\n          antwoord van de server.\n        </Typography>\n      );\n    }\n  };\n\n  onSaveClicked = () => {\n    const { model, app } = this.props;\n    model.save((response) => {\n      if (\n        response &&\n        (response.ExceptionReport || !response.TransactionResponse)\n      ) {\n        this.props.observer.publish(\"editFeature\", model.editFeatureBackup);\n        app.globalObserver.publish(\n          \"core.alert\",\n          this.getStatusMessage(response)\n        );\n      } else {\n        model.filty = false;\n        model.refreshEditingLayer();\n        model.editFeatureBackup = undefined;\n        this.handleNext();\n        app.globalObserver.publish(\n          \"core.alert\",\n          this.getStatusMessage(response)\n        );\n        this.toggleActiveTool(undefined);\n        model.deactivateInteraction();\n      }\n    });\n  };\n\n  renderSources() {\n    const { loadingError, editSource } = this.state;\n    return (\n      <FormControl variant=\"standard\" error={loadingError} fullWidth>\n        <InputLabel variant=\"standard\" id=\"select-source-label\">\n          Databron\n        </InputLabel>\n        <Select\n          id=\"select-source\"\n          variant=\"standard\"\n          value={editSource?.id || \"\"}\n          onChange={(e) => {\n            this.setLayer(e.target.value);\n          }}\n        >\n          {this.state.sources.map((source, index) => {\n            return (\n              <MenuItem\n                key={index}\n                value={source.id}\n              >{`${source.caption}`}</MenuItem>\n            );\n          })}\n        </Select>\n        {loadingError && (\n          <FormHelperText>\n            Fout bij het laden van de data. Neem contact op met uw\n            systeembeheerder.\n          </FormHelperText>\n        )}\n      </FormControl>\n    );\n  }\n\n  renderToolbar = () => {\n    return (\n      <Toolbar\n        ref=\"toolbar\"\n        editSource={this.state.editSource}\n        model={this.props.model}\n        observer={this.props.observer}\n        app={this.props.app}\n        activeTool={this.state.activeTool}\n        toggleActiveTool={(toolName) => this.toggleActiveTool(toolName)}\n      />\n    );\n  };\n\n  renderAttributeEditor = () => {\n    const { editSource } = this.state;\n    const { model, observer } = this.props;\n    return (\n      <AttributeEditor\n        ref=\"attributeEditor\"\n        editSource={editSource}\n        model={model}\n        observer={observer}\n        panel={this}\n      />\n    );\n  };\n\n  render() {\n    const { activeStep, editSource, editFeature, loading } = this.state;\n    return (\n      <>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          <Step key=\"1\">\n            <StepLabel>Selecteer de dataset die u wilt bewerken</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  {loading ? <CircularProgress /> : this.renderSources()}\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n          <Step key=\"2\">\n            <StepLabel>\n              {activeStep === 1 ? `Bewerk ${editSource?.caption}` : `Bewerking`}\n            </StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  {this.renderAttributeEditor()}\n                  {this.renderToolbar()}\n                </Grid>\n                {!editFeature && (\n                  <>\n                    <Grid item xs={6}>\n                      <Button\n                        fullWidth\n                        onClick={this.handlePrev}\n                        variant=\"contained\"\n                      >\n                        Vorige\n                      </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        endIcon={<SaveIcon></SaveIcon>}\n                        disabled={!editSource}\n                        color=\"primary\"\n                        onClick={this.onSaveClicked}\n                      >\n                        Opslaan\n                      </Button>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </StepContent>\n          </Step>\n          <Step key=\"3\">\n            <StepLabel>Klaar!</StepLabel>\n            <StepContent>\n              <Grid container spacing={2} direction=\"row\">\n                <Grid item xs={12}>\n                  <Button\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handlePrev}\n                  >\n                    Ga door met bewerken\n                  </Button>\n                </Grid>\n              </Grid>\n            </StepContent>\n          </Step>\n        </Stepper>\n      </>\n    );\n  }\n}\nexport default EditView;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Input from \"@mui/material/Input\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { Button, FormHelperText } from \"@mui/material\";\nimport Chip from \"@mui/material/Chip\";\n\nconst StyledGrid = styled(Grid)(({ theme }) => ({\n  textAlign: \"center\",\n  padding: theme.spacing(1),\n}));\n\nclass AttributeEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: undefined,\n      feature: undefined,\n    };\n    this.formErrors = {};\n    props.observer.subscribe(\"feature-to-update-view\", (feature) => {\n      this.setState({\n        formValues: this.initFormValues(feature),\n        feature: feature,\n      });\n    });\n    props.editSource?.editableFields?.forEach((field, i) => {\n      field.initialRender = true;\n    });\n\n    props.editSource?.nonEditableFields?.forEach((field, i) => {\n      field.initialRender = true;\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.observer.unsubscribe(\"feature-to-update-view\");\n  }\n\n  initFormValues = (feature) => {\n    const { editSource } = this.props;\n    if (!feature || !editSource) return;\n\n    const featureProps = feature.getProperties();\n    let valueMap = {};\n\n    editSource.editableFields.forEach((field) => {\n      if (featureProps[field.name] !== null) {\n        if (field.textType === \"flerval\" && featureProps[field.name] !== \"\") {\n          valueMap[field.name] = field.values.map((value) => {\n            return {\n              name: value,\n              checked:\n                typeof featureProps[field.name] === \"string\"\n                  ? featureProps[field.name]\n                      .split(\";\")\n                      .find((v) => v === value) !== undefined\n                  : false,\n            };\n          });\n        } else if (field.textType === \"boolean\") {\n          if (field.dataType === \"boolean\") {\n            valueMap[field.name] =\n              featureProps[field.name] || field.defaultValue === \"ja\" || false;\n          } else {\n            valueMap[field.name] =\n              featureProps[field.name] || field.defaultValue === 1 || 0;\n          }\n        } else {\n          //If the feature has field: \"\" it will be changed to the default value.\n          //Not sure if we want this behavior?\n          //QGIS-server, object that returns as a string results in [object] [Object]\n          featureProps[field.name]?.[\"xsi:nil\"] === \"true\"\n            ? (valueMap[field.name] = \"\")\n            : (valueMap[field.name] =\n                featureProps[field.name] || field.defaultValue || \"\");\n        }\n      }\n    });\n    return valueMap;\n  };\n\n  updateFeature() {\n    const featureProps = this.props.model.editFeature.getProperties();\n    Object.keys(this.state.formValues).forEach((key) => {\n      let value = this.state.formValues[key];\n      if (value === \"\") value = null;\n      if (Array.isArray(value)) {\n        value = value\n          .filter((v) => v.checked)\n          .map((v) => v.name)\n          .join(\";\");\n      }\n      featureProps[key] = value;\n    });\n\n    this.props.editSource?.nonEditableFields?.forEach((field) => {\n      let value = field.defaultValue;\n      if (value === \"\") value = null;\n      if (Array.isArray(value)) {\n        value = value\n          .filter((v) => v.checked)\n          .map((v) => v.name)\n          .join(\";\");\n      }\n      let geomName = this.props.model.editFeature.getGeometryName();\n      if (!geomName) {\n        geomName = \"geom\";\n      }\n      if (field.name !== geomName) {\n        // should not overwrite the feature's geom\n        featureProps[field.name] = value;\n      }\n    });\n    this.props.model.editFeature.setProperties(featureProps);\n  }\n\n  checkInteger(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    if (/^\\d+$/.test(value) || value === \"\") {\n      formValues[name] = value;\n    } else {\n      if (!this.state.formValues[name]) {\n        formValues[name] = \"\";\n      }\n    }\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkBoolean(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    if (value === \"ja\") {\n      value = true;\n    } else if (value === \"nej\") {\n      value = false;\n    }\n\n    formValues[name] = value;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkNumber(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    if (/^\\d+([.,](\\d+)?)?$/.test(value) || value === \"\") {\n      value = value.replace(\",\", \".\");\n      formValues[name] = value;\n    } else {\n      if (!this.state.formValues[name]) {\n        formValues[name] = \"\";\n      }\n    }\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkUrl(name, value) {\n    let regex =\n      /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|\\/|\\?)*)?$/i;\n    let valid = regex.test(value);\n    let formValues = Object.assign({}, this.state.formValues);\n    if (valid || value === \"\") {\n      formValues[name] = value;\n      delete this.formErrors[name];\n    } else {\n      formValues[name] = \"\";\n      this.formErrors[name] =\n        \"Ange en giltig url. t.ex. https://www.example.com\";\n    }\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkText(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name] = value;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkSelect(name, value) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name] = value;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkMultiple(name, checked, value, index) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name][index].checked = checked;\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  checkDate(name, date) {\n    let formValues = Object.assign({}, this.state.formValues);\n    formValues[name] = date;\n    this.updateFeature();\n    this.setState(\n      {\n        formValues: formValues,\n      },\n      () => {\n        this.updateFeature();\n      }\n    );\n  }\n\n  setChanged() {\n    if (\n      this.props.model.editFeature.modification !== \"added\" &&\n      this.props.model.editFeature.modification !== \"removed\"\n    ) {\n      this.props.model.editFeature.modification = \"updated\";\n    }\n  }\n\n  getValueMarkup(field, editable) {\n    if (typeof field.alias === \"undefined\" || field.alias === \"\") {\n      field.alias = field.name;\n    }\n\n    // Add a default texttype if none is set\n    if (!field.textType || field.textType === \"\") {\n      if (field.dataType === \"int\" || field.dataType === \"integer\") {\n        field.textType = \"heltal\";\n      }\n\n      if (field.dataType === \"number\" || field.dataType === \"decimal\") {\n        field.textType = \"nummer\";\n      }\n\n      if (field.dataType === \"date\") {\n        field.textType = \"datum\";\n      }\n\n      if (field.dataType === \"date-time\" || field.dataType === \"dateTime\") {\n        field.textType = \"date-time\";\n      }\n\n      if (field.dataType === \"boolean\") {\n        field.textType = \"boolean\";\n      }\n    }\n    let value = this.state.formValues[field.name];\n\n    if (value === undefined || value === null) {\n      value = \"\";\n    }\n\n    if (value === \"\" && field.initialRender) {\n      if (field.defaultValue !== null) {\n        value = field.defaultValue;\n      }\n    }\n\n    switch (field.textType) {\n      case \"heltal\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.alias}\n            fullWidth={true}\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkInteger(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n          />\n        );\n      case \"nummer\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.alias}\n            fullWidth={true}\n            margin=\"normal\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkNumber(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n          />\n        );\n      case \"datum\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.alias}\n            fullWidth={true}\n            margin=\"normal\"\n            type=\"date\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkDate(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        );\n      case \"date-time\":\n        return (\n          <TextField\n            id={field.id}\n            label={field.name}\n            fullWidth={true}\n            margin=\"normal\"\n            type=\"datetime-local\"\n            variant=\"outlined\"\n            disabled={!editable}\n            value={value}\n            error={this.formErrors.hasOwnProperty(field.name)}\n            helperText={\n              this.formErrors[field.name]?.length >= 0\n                ? this.formErrors[field.name]\n                : field.description\n            }\n            onChange={(e) => {\n              this.setChanged();\n              this.checkDate(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        );\n      case \"url\":\n        return (\n          <>\n            <TextField\n              id={field.id}\n              label={field.alias}\n              size=\"small\"\n              fullWidth={true}\n              margin=\"normal\"\n              variant=\"outlined\"\n              disabled={!editable}\n              error={this.formErrors.hasOwnProperty(field.name)}\n              helperText={\n                this.formErrors[field.name]?.length >= 0\n                  ? this.formErrors[field.name]\n                  : field.description\n              }\n              value={value}\n              onChange={(e) => {\n                this.setChanged();\n                this.checkText(field.name, e.target.value);\n                field.initialRender = false;\n              }}\n              onBlur={(e) => {\n                this.setChanged();\n                if (field.textType === \"url\") {\n                  this.checkUrl(field.name, e.target.value);\n                }\n                field.initialRender = false;\n              }}\n            />\n          </>\n        );\n      case \"fritext\":\n        return (\n          <>\n            <TextField\n              id={field.id}\n              label={field.alias}\n              size=\"small\"\n              fullWidth={true}\n              margin=\"normal\"\n              variant=\"outlined\"\n              disabled={!editable}\n              multiline\n              error={this.formErrors.hasOwnProperty(field.name)}\n              helperText={\n                this.formErrors[field.name]?.length >= 0\n                  ? this.formErrors[field.name]\n                  : field.description\n              }\n              value={value}\n              onChange={(e) => {\n                this.setChanged();\n                this.checkText(field.name, e.target.value);\n                field.initialRender = false;\n              }}\n              onBlur={(e) => {\n                this.setChanged();\n                if (field.textType === \"url\") {\n                  this.checkUrl(field.name, e.target.value);\n                }\n                field.initialRender = false;\n              }}\n            />\n          </>\n        );\n      case \"flerval\":\n        let defaultValues = [];\n        if (typeof field.defaultValue === \"string\") {\n          defaultValues = field.defaultValue.split(\",\");\n        }\n        if (field.initialRender) {\n          defaultValues.forEach((defaultValue) => {\n            value.forEach((val) => {\n              if (defaultValue === val.name) {\n                val.checked = true;\n              }\n            });\n          });\n        }\n\n        let checkboxes = field.values.map((val, i) => {\n          let id = field.name + i,\n            item = value.find((item) => item.name === val) || {\n              checked: false,\n            };\n\n          return (\n            <FormControlLabel\n              key={id}\n              control={\n                <Checkbox\n                  checked={item.checked}\n                  disabled={!editable}\n                  color=\"primary\"\n                  onChange={(e) => {\n                    this.setChanged();\n                    this.checkMultiple(field.name, e.target.checked, val, i);\n                    field.initialRender = false;\n                  }}\n                />\n              }\n              label={val}\n            />\n          );\n        });\n        return (\n          <>\n            <FormControl fullWidth margin=\"normal\" component=\"fieldset\">\n              <FormLabel component=\"legend\">{field.alias}</FormLabel>\n              <FormGroup>{checkboxes}</FormGroup>\n              <FormHelperText\n                style={{ marginTop: \"0px\", marginBottom: \"10px\" }}\n              ></FormHelperText>\n            </FormControl>\n            <br />\n          </>\n        );\n      case \"lista\":\n        let options = null;\n        if (Array.isArray(field.values)) {\n          options = field.values.map((val, i) => (\n            <option key={i} value={val}>\n              {val}\n            </option>\n          ));\n        }\n        return (\n          <>\n            <FormControl fullWidth={true} component=\"fieldset\">\n              <FormLabel component=\"legend\">{field.alias}</FormLabel>\n              <NativeSelect\n                value={value}\n                variant=\"outlined\"\n                disabled={!editable}\n                input={<Input name={field.name} id={field.name} />}\n                onChange={(e) => {\n                  this.setChanged();\n                  this.checkSelect(field.name, e.target.value);\n                  field.initialRender = false;\n                }}\n              >\n                <option value=\"\">-Välj värde-</option>\n                {options}\n              </NativeSelect>\n              <FormHelperText>{field.description}</FormHelperText>\n            </FormControl>\n          </>\n        );\n      case \"boolean\":\n        return (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={\n                  (field.dataType === \"boolean\" && field.value === \"ja\") ||\n                  (field.dataType === \"int\" && field.value === 1)\n                }\n                color=\"primary\"\n                disabled={!editable}\n                onChange={(e) => {\n                  this.setChanged();\n                  if (e.target.checked) {\n                    if (field.dataType === \"boolean\") {\n                      field.value = \"ja\";\n                    } else {\n                      field.value = 1;\n                    }\n                  } else {\n                    if (field.dataType === \"boolean\") {\n                      field.value = \"nej\";\n                    } else {\n                      field.value = 0;\n                    }\n                  }\n                  field.initialRender = false;\n                  this.checkBoolean(field.name, field.value);\n                  this.forceUpdate();\n                }}\n              />\n            }\n            label={field.name}\n          />\n        );\n      case null:\n        return <span>{value}</span>;\n      default:\n        return <span>{value}</span>;\n    }\n  }\n\n  render() {\n    const { formValues } = this.state;\n    const { model } = this.props;\n\n    if (!formValues || this.props.editSource === undefined) return null;\n\n    const markup = this.props.editSource?.editableFields?.map((field, i) => {\n      const valueMarkup = this.getValueMarkup(field, true);\n      return (\n        <Grid item xs={12} key={i} ref={field.name}>\n          {valueMarkup}\n        </Grid>\n      );\n    });\n\n    const markupNonEdit = this.props.editSource?.nonEditableFields\n      ?.filter((item) => item.hidden === false)\n      .map((field, i) => {\n        const valueMarkup = this.getValueMarkup(field, false);\n        return (\n          <Grid item xs={12} key={i} ref={field.name}>\n            {valueMarkup}\n          </Grid>\n        );\n      });\n\n    return (\n      <>\n        <StyledGrid item xs={12}>\n          <Chip\n            variant=\"outlined\"\n            color=\"primary\"\n            label=\"Voer het attribuut van het object in:\"\n          />\n        </StyledGrid>\n        <StyledGrid item xs={12}>\n          <p>Bewerkbare velden:</p>\n          {markup}\n          {markupNonEdit?.length > 2 ? \"Niet-bewerkbare velden:\" : \"\"}\n          {markupNonEdit}\n        </StyledGrid>\n        <StyledGrid item xs={12}>\n          <Button\n            color=\"primary\"\n            sx={{ width: \"100px\" }}\n            variant=\"contained\"\n            onClick={model.resetEditFeature}\n          >\n            OK\n          </Button>\n        </StyledGrid>\n      </>\n    );\n  }\n}\n\nexport default AttributeEditor;\n","import React, { Component } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ScatterPlotIcon from \"@mui/icons-material/ScatterPlot\";\nimport BorderStyleIcon from \"@mui/icons-material/BorderStyle\";\nimport LinearScaleIcon from \"@mui/icons-material/LinearScale\";\nimport ZoomOutMapIcon from \"@mui/icons-material/ZoomOutMap\";\nimport FormatShapesIcon from \"@mui/icons-material/FormatShapes\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nconst StyledButton = styled(Button)(({ selected, theme }) => ({\n  borderTop: `${theme.spacing(0.5)} solid transparent`,\n  borderBottom: selected\n    ? `${theme.spacing(0.5)} solid ${theme.palette.secondary.main}`\n    : `${theme.spacing(0.5)} solid transparent`,\n}));\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editFeature: undefined,\n    };\n\n    this.props.observer.subscribe(\"feature-to-update-view\", (feature) => {\n      this.setState({\n        editFeature: feature,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.observer.unsubscribe(\"feature-to-update-view\");\n  }\n\n  changeTool(type, geometryType) {\n    const { model, activeTool } = this.props;\n    if (geometryType && activeTool === geometryType.toLowerCase()) {\n      model.deactivateInteraction();\n      return;\n    }\n    if (activeTool === type) {\n      model.deactivateInteraction();\n      return;\n    }\n    model.deactivateInteraction();\n\n    switch (type) {\n      case \"add\":\n        model.activateInteraction(\"add\", geometryType);\n        break;\n      case \"remove\":\n        model.activateInteraction(\"remove\");\n        break;\n      case \"modify\":\n        model.activateInteraction(\"modify\");\n        break;\n      case \"move\":\n        model.activateInteraction(\"move\");\n        break;\n      default:\n        break;\n    }\n  }\n\n  onAddPointClicked() {\n    this.props.model.layer.dragLocked = true;\n    this.props.toggleActiveTool(\"point\");\n    this.changeTool(\n      \"add\",\n      this.props.editSource.editMultiPoint ? \"MultiPoint\" : \"Point\"\n    );\n  }\n\n  onAddLineClicked() {\n    this.props.model.layer.dragLocked = true;\n    this.props.toggleActiveTool(\"linestring\");\n    this.changeTool(\n      \"add\",\n      this.props.editSource.editMultiLine ? \"MultiLineString\" : \"LineString\"\n    );\n  }\n\n  onAddPolygonClicked() {\n    this.props.model.layer.dragLocked = true;\n    this.props.toggleActiveTool(\"polygon\");\n    this.changeTool(\n      \"add\",\n      this.props.editSource.editMultiPolygon ? \"MultiPolygon\" : \"Polygon\"\n    );\n  }\n\n  onRemoveClicked() {\n    this.props.toggleActiveTool(\"remove\");\n    this.changeTool(\"remove\");\n  }\n\n  onModifyClicked() {\n    this.props.toggleActiveTool(\"modify\");\n    this.changeTool(\"modify\");\n  }\n\n  onMoveClicked() {\n    this.props.model.layer.dragLocked = false;\n    this.props.toggleActiveTool(\"move\");\n    this.changeTool(\"move\");\n  }\n\n  render() {\n    const { editSource } = this.props;\n    const { editFeature } = this.state;\n\n    if (!editSource || editFeature) return null;\n\n    return (\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography>Toevoegen</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            disabled={!editSource.editPoint && !editSource.editMultiPoint}\n            onClick={() => {\n              this.onAddPointClicked();\n            }}\n            selected={this.props.activeTool === \"point\"}\n            type=\"button\"\n            title=\"Punt toevoegen\"\n          >\n            Punt\n            <ScatterPlotIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            disabled={!editSource.editLine && !editSource.editMultiLine}\n            onClick={() => {\n              this.onAddLineClicked();\n            }}\n            type=\"button\"\n            title=\"Lijn toevoegen\"\n            selected={this.props.activeTool === \"linestring\"}\n          >\n            Lijn\n            <LinearScaleIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            disabled={!editSource.editPolygon && !editSource.editMultiPolygon}\n            onClick={() => {\n              this.onAddPolygonClicked();\n            }}\n            type=\"button\"\n            title=\"Vlak toevoegen\"\n            selected={this.props.activeTool === \"polygon\"}\n          >\n            Vlak\n            <BorderStyleIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography>Editera</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              this.onMoveClicked();\n            }}\n            type=\"button\"\n            title=\"Geometrie verplaatsen\"\n            selected={this.props.activeTool === \"move\"}\n          >\n            Verplaatsen\n            <ZoomOutMapIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              this.onRemoveClicked();\n            }}\n            type=\"button\"\n            title=\"Geometrie verwijderen\"\n            selected={this.props.activeTool === \"remove\"}\n          >\n            Verwijderen\n            <DeleteIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n        <Grid item xs={4}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={() => {\n              this.onModifyClicked();\n            }}\n            type=\"button\"\n            title=\"Geometrie aanpassen\"\n            selected={this.props.activeTool === \"modify\"}\n          >\n            Aanpassen\n            <FormatShapesIcon sx={{ marginLeft: 1 }} />\n          </StyledButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Toolbar;\n"],"names":["EditView","React","constructor","props","super","bindSubscriptions","this","observer","subscribe","feature","publish","setState","editFeature","editSource","model","undefined","activeStep","activeTool","handleVectorLoadingDone","status","loading","loadingError","handlePrev","state","reset","handleNext","toggleActiveTool","toolName","setTool","getStatusMessage","data","ExceptionReport","Exception","ExceptionText","toString","TransactionResponse","TransactionSummary","totalInserted","totalDeleted","totalUpdated","onSaveClicked","app","save","response","filty","refreshEditingLayer","editFeatureBackup","globalObserver","deactivateInteraction","renderToolbar","ref","renderAttributeEditor","panel","sources","getSources","setLayer","serviceId","console","log","renderSources","variant","error","fullWidth","id","value","onChange","e","target","map","source","index","caption","render","orientation","container","spacing","direction","item","xs","onClick","endIcon","disabled","color","StyledGrid","styled","Grid","theme","textAlign","padding","AttributeEditor","initFormValues","featureProps","getProperties","valueMap","editableFields","forEach","field","name","textType","values","checked","split","find","v","dataType","defaultValue","formValues","formErrors","i","initialRender","nonEditableFields","componentWillUnmount","unsubscribe","updateFeature","Object","keys","key","Array","isArray","filter","join","geomName","getGeometryName","setProperties","checkInteger","assign","test","checkBoolean","checkNumber","replace","checkUrl","valid","checkText","checkSelect","checkMultiple","checkDate","date","setChanged","modification","getValueMarkup","editable","alias","label","margin","hasOwnProperty","helperText","length","description","type","InputLabelProps","shrink","size","onBlur","multiline","defaultValues","val","checkboxes","control","component","style","marginTop","marginBottom","options","input","forceUpdate","markup","valueMarkup","markupNonEdit","hidden","sx","width","resetEditFeature","StyledButton","Button","selected","borderTop","borderBottom","palette","secondary","main","Toolbar","Component","changeTool","geometryType","toLowerCase","activateInteraction","onAddPointClicked","layer","dragLocked","editMultiPoint","onAddLineClicked","editMultiLine","onAddPolygonClicked","editMultiPolygon","onRemoveClicked","onModifyClicked","onMoveClicked","editPoint","title","marginLeft","editLine","editPolygon","Z"],"sourceRoot":""}