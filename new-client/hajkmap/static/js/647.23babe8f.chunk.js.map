{"version":3,"file":"static/js/647.23babe8f.chunk.js","mappings":"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","sources":["plugins/TimeSlider/components/TimeSliderSettings.js"],"sourcesContent":["import React from \"react\";\nimport { Grid, Typography, Tooltip, Switch } from \"@mui/material\";\nimport { FormControl, FormHelperText, MenuItem, Select } from \"@mui/material\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@mui/material\";\n\nimport WarningIcon from \"@mui/icons-material/Warning\";\n\nclass TimeSliderSettings extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.layerStatus = props.layerStatus;\n  }\n\n  renderLayerList = () => {\n    const { layers, layerStatus } = this.props;\n\n    return (\n      <List>\n        {layers.map((layer, index) => {\n          const id = layer.get(\"name\");\n          const visible = layer.get(\"visible\");\n          let error = false;\n          let errorType = \"\";\n          layerStatus.faultyLayers\n            .filter((layer) => {\n              return layer.layerId === id;\n            })\n            .forEach((layer) => {\n              error = true;\n              errorType = layer.layerError;\n            });\n          return (\n            <ListItem\n              key={index}\n              sx={{\n                borderLeft: (theme) =>\n                  `${theme.spacing(0.5)} solid ${\n                    error\n                      ? theme.palette.error.main\n                      : theme.palette.success.main\n                  }`,\n              }}\n              disabled={!visible}\n            >\n              {error && (\n                <Tooltip\n                  disableInteractive\n                  key={`tt_${index}`}\n                  title={`${\n                    error\n                      ? errorType === \"date_start_equals_end\"\n                        ? \"Start- och slutdatumet på lagret har samma värde!\"\n                        : \"Start- eller slutdatumet på lagret saknas!\"\n                      : \"Lagret ser okej ut!\"\n                  }`}\n                >\n                  <ListItemIcon>\n                    <WarningIcon />\n                  </ListItemIcon>\n                </Tooltip>\n              )}\n\n              <ListItemText primary={layer.get(\"caption\")} />\n\n              <ListItemSecondaryAction>\n                <Tooltip\n                  disableInteractive\n                  title={visible ? \"Dölj lager\" : \"Visa lager\"}\n                >\n                  <Switch\n                    checked={visible}\n                    onChange={() => {\n                      layer.setVisible(!visible);\n                      this.setState({ time: new Date() });\n                    }}\n                    name=\"checkedA\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  };\n\n  renderSettingsContainer = () => {\n    const {\n      sliderSpeed,\n      resolution,\n      handleResolutionChange,\n      handleSliderSpeedChange,\n    } = this.props;\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <Select\n              variant=\"standard\"\n              labelId=\"select-stepSize-label\"\n              id=\"select-stepSize\"\n              value={sliderSpeed}\n              onChange={(e) => {\n                handleSliderSpeedChange(e.target.value);\n              }}\n            >\n              <MenuItem value={2000}>Långsam (0.5 Hz)</MenuItem>\n              <MenuItem value={1000}>Medium (1 Hz)</MenuItem>\n              <MenuItem value={500}>Snabb (2 Hz)</MenuItem>\n            </Select>\n            <FormHelperText>Ändra tidslinjens hastighet</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <Select\n              variant=\"standard\"\n              labelId=\"select-resolution-label\"\n              id=\"select-resolution\"\n              value={resolution}\n              onChange={(e) => {\n                handleResolutionChange(e.target.value);\n              }}\n            >\n              <MenuItem value={\"days\"}>Dag</MenuItem>\n              <MenuItem value={\"months\"}>Månad</MenuItem>\n              <MenuItem value={\"quarters\"}>Kvartal</MenuItem>\n              <MenuItem value={\"years\"}>År</MenuItem>\n            </Select>\n          </FormControl>\n          <FormHelperText>Ändra tidslinjens upplösning</FormHelperText>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  render() {\n    const { layerStatus } = this.props;\n\n    if (layerStatus.errorType === \"layers_missing\") {\n      return (\n        <Grid container>\n          <Typography>\n            Inga tidslinje-lager kunde hittas. Kontakta systemadministratören.\n          </Typography>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography>Lagerstatus: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderLayerList()}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>Inställningar: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderSettingsContainer()}\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default TimeSliderSettings;\n"],"names":["TimeSliderSettings","React","constructor","props","super","renderLayerList","layers","layerStatus","this","map","layer","index","id","get","visible","error","errorType","faultyLayers","filter","layerId","forEach","layerError","sx","borderLeft","theme","spacing","palette","main","success","disabled","disableInteractive","title","primary","checked","onChange","setVisible","setState","time","Date","name","inputProps","renderSettingsContainer","sliderSpeed","resolution","handleResolutionChange","handleSliderSpeedChange","container","item","xs","fullWidth","variant","labelId","value","e","target","render"],"sourceRoot":""}