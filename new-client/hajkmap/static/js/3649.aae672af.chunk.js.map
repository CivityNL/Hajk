{"version":3,"file":"static/js/3649.aae672af.chunk.js","mappings":"2GAAO,SAASA,EAAUC,GACxB,SAASC,EAASC,EAAKC,GACrB,OAAIC,MAAMC,QAAQF,GACTA,EAASG,KAAKC,GAASL,EAAIM,WAAWD,KAAOE,KAAK,MAElDP,EAAIM,WAAWL,IAAaA,CAEtC,CAGD,SAASO,EAAIC,GACX,IACEC,EADO,MACAC,KAAKF,GACd,OAAa,OAANC,EAAaE,SAASF,EAAG,KAAO,CACxC,CAGD,SAASD,EAAIA,GACX,IACEI,EADO,0CACAF,KAAKF,GACd,OAAY,MAALI,EAAYA,EAAE,IAAM,CAC5B,CAID,SAASC,EAAOL,GACd,IACEI,EADO,qDACAF,KAAKF,GAEd,OADc,OAANI,GAAc,EAAIA,EAAE,GAAKD,SAASC,EAAE,GAAI,IAAMA,EAAE,EAEzD,CA+BD,OAAOf,EAAQiB,MAAMC,MA7BrB,SAAkBC,EAAGC,GACnB,IAEEC,EACAC,EACAC,EACAC,EALEC,EAAMd,EAAIV,EAASkB,EAAGnB,EAAQ0B,QAChCC,EAAMhB,EAAIV,EAASmB,EAAGpB,EAAQ0B,QAOhC,OAAIzB,EAASkB,EAAGnB,EAAQ0B,SAAWzB,EAASmB,EAAGpB,EAAQ0B,OAAe,EAClED,EAAME,EAAY,EAClBF,EAAME,GAAa,GAEvBN,EAAMX,EAAIT,EAASkB,EAAGnB,EAAQ0B,UAC9BJ,EAAMZ,EAAIT,EAASmB,EAAGpB,EAAQ0B,SAER,EAClBL,EAAMC,GAAa,GAGvBC,EAAMP,EAAOf,EAASkB,EAAGnB,EAAQ0B,UACjCF,EAAMR,EAAOf,EAASmB,EAAGpB,EAAQ0B,SAEX,EAClBH,EAAMC,GAAa,EAEhBvB,EAASkB,EAAGnB,EAAQ0B,OAASzB,EAASmB,EAAGpB,EAAQ0B,OAAS,GAAK,CACvE,GAGF,C","sources":["utils/ArraySort.js"],"sourcesContent":["export function arraySort(options) {\n  function getTitle(hit, property) {\n    if (Array.isArray(property)) {\n      return property.map((item) => hit.properties[item]).join(\", \");\n    } else {\n      return hit.properties[property] || property;\n    }\n  }\n  // Sortera på nummer i sträng.\n  // Tex Storgatan 9 < Storgatan 10\n  function num(str) {\n    var re = /\\d+/,\n      n = re.exec(str);\n    return n !== null ? parseInt(n, 10) : -1;\n  }\n  // Sortera på sträng\n  // Tex Storgatan < Störgatan\n  function str(str) {\n    var re = /^[a-zA-ZåäöÅÄÖ\\-:_ ]+/,\n      s = re.exec(str);\n    return s != null ? s[0] : -1;\n  }\n  // Sortera på siffra efter nummer, eller siffra efter kolon.\n  // Tex Storgatan 3A < Storgatan 3B\n  // Tex Almlunden 1:42 < Almlunden 1:43\n  function strnum(str) {\n    var re = /(\\d+)(:)?([a-zA-ZåäöÅÄÖ])?(\\d+)?/,\n      s = re.exec(str);\n    var r = s === null ? -1 : s[2] ? parseInt(s[4], 10) : s[3];\n    return r;\n  }\n  // Jämför två strängar.\n  function comparer(a, b) {\n    var a_s = str(getTitle(a, options.index)), // Strängjämförare.\n      b_s = str(getTitle(b, options.index)), // Strängutmanare.\n      a_n = NaN, // Nummerjämförare.\n      b_n = NaN, // Nummerutmanare.\n      ans = NaN, // Suffixutmanare.\n      bns = NaN; // Suffixjämförare.\n\n    // Hela strängen är samma.\n    if (getTitle(a, options.index) === getTitle(b, options.index)) return 0;\n    if (a_s > b_s) return 1;\n    if (a_s < b_s) return -1;\n    // Strängdelen är samma, jämför nummer.\n    a_n = num(getTitle(a, options.index));\n    b_n = num(getTitle(b, options.index));\n\n    if (a_n > b_n) return 1;\n    if (a_n < b_n) return -1;\n    // Strängdelen och textdelen är samma,\n    // jämför suffix.\n    ans = strnum(getTitle(a, options.index));\n    bns = strnum(getTitle(b, options.index));\n\n    if (ans > bns) return 1;\n    if (ans < bns) return -1;\n    // Övriga matchningar sorteras alfabetiskt.\n    return getTitle(a, options.index) > getTitle(b, options.index) ? 1 : -1;\n  }\n\n  return options.array.sort(comparer);\n}\n"],"names":["arraySort","options","getTitle","hit","property","Array","isArray","map","item","properties","join","num","str","n","exec","parseInt","s","strnum","array","sort","a","b","a_n","b_n","ans","bns","a_s","index","b_s"],"sourceRoot":""}