{"version":3,"file":"static/js/1651.457527c8.chunk.js","mappings":"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","sources":["plugins/Coordinates/CoordinatesTransformRow.js","plugins/Coordinates/CoordinatesView.js","plugins/Location/constants/index.js"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport NumberFormat from \"react-number-format\";\nimport { transform } from \"ol/proj\";\nimport { withSnackbar } from \"notistack\";\nimport Grid from \"@mui/material/Grid\";\n\nclass CoordinatesTransformRow extends React.PureComponent {\n  state = {\n    errorX: \"\",\n    errorY: \"\",\n    coordinateX: \"\",\n    coordinateY: \"\",\n    coordinateXFloat: 0,\n    coordinateYFloat: 0,\n    wasLastChanged: false,\n    wasModified: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.model = this.props.model;\n    this.transformation = this.props.transformation;\n    this.localObserver = this.props.model.localObserver;\n\n    this.localObserver.subscribe(\"newCoordinates\", (incomingCoords) => {\n      // Force a change if the new coords from map click or user location since\n      // there might be a transformation with the same code as on the map\n      if (\n        incomingCoords[\"proj\"] !== this.transformation.code ||\n        incomingCoords[\"force\"]\n      ) {\n        const transformedCoords = transform(\n          incomingCoords[\"coordinates\"],\n          incomingCoords[\"proj\"],\n          this.props.transformation.code\n        );\n        this.setState({\n          errorX: \"\",\n          errorY: \"\",\n          wasModified: true,\n          coordinateX: transformedCoords[0].toFixed(\n            this.transformation.precision\n          ),\n          coordinateY: transformedCoords[1].toFixed(\n            this.transformation.precision\n          ),\n          coordinateXFloat: transformedCoords[0],\n          coordinateYFloat: transformedCoords[1],\n          wasLastChanged: false,\n        });\n      } else {\n        this.setState({ wasLastChanged: true, wasModified: true });\n      }\n    });\n\n    this.localObserver.subscribe(\"resetCoordinates\", () => {\n      this.setState({\n        errorX: \"\",\n        errorY: \"\",\n        coordinateX: \"\",\n        coordinateY: \"\",\n        coordinateXFloat: 0,\n        coordinateYFloat: 0,\n      });\n    });\n  }\n\n  handleInputX(event) {\n    if (\n      (!this.props.inverseAxis && event.value === this.state.coordinateX) ||\n      (this.props.inverseAxis && event.value === this.state.coordinateY)\n    ) {\n      // Nothing was changed so do nothing, this happens since the value is\n      // changed multiple times during formatting and we do not want to create\n      // infinite loops\n      return;\n    }\n    if (!this.props.inverseAxis) {\n      // Validate that the changed data is a finite number\n      this.setState({\n        coordinateX: event.value,\n        coordinateXFloat: event.floatValue,\n        wasModified: true,\n      });\n    } else {\n      this.setState({\n        coordinateY: event.value,\n        coordinateYFloat: event.floatValue,\n        wasModified: true,\n      });\n    }\n    if (isNaN(event.floatValue) || !isFinite(event.floatValue)) {\n      this.setState({ errorX: \"Ange ett decimaltal\" });\n    } else {\n      this.setState({ errorX: \"\" });\n      const updatedValue = event.floatValue;\n\n      if (!this.props.inverseAxis) {\n        // publish the new value so all other transformations and the marker is updated\n        this.localObserver.publish(\"newCoordinates\", {\n          coordinates: [updatedValue, this.state.coordinateYFloat],\n          proj: this.props.transformation.code,\n          force: false,\n        });\n      } else {\n        // publish the new value so all other transformations and the marker is updated\n        this.localObserver.publish(\"newCoordinates\", {\n          coordinates: [this.state.coordinateXFloat, updatedValue],\n          proj: this.props.transformation.code,\n          force: false,\n        });\n      }\n    }\n  }\n\n  handleInputY(event) {\n    if (\n      (!this.props.inverseAxis && event.value === this.state.coordinateY) ||\n      (this.props.inverseAxis && event.value === this.state.coordinateX)\n    ) {\n      // Nothing was changed so do nothing, this happens since the value is\n      // changed multiple times during formatting and we do not want to create\n      // infinite loops\n      return;\n    }\n    if (!this.props.inverseAxis) {\n      // Validate that the changed data is a finite number\n      this.setState({\n        coordinateY: event.value,\n        coordinateYFloat: event.floatValue,\n        wasModified: true,\n      });\n    } else {\n      this.setState({\n        coordinateX: event.value,\n        coordinateXFloat: event.floatValue,\n        wasModified: true,\n      });\n    }\n    if (isNaN(event.floatValue) || !isFinite(event.floatValue)) {\n      this.setState({ errorY: \"Ange ett decimaltal\" });\n    } else {\n      this.setState({ errorY: \"\" });\n      const updatedValue = event.floatValue;\n\n      if (!this.props.inverseAxis) {\n        // publish the new value so all other transformations and the marker is updated\n        this.localObserver.publish(\"newCoordinates\", {\n          coordinates: [this.state.coordinateXFloat, updatedValue],\n          proj: this.props.transformation.code,\n          force: false,\n        });\n      } else {\n        // publish the new value so all other transformations and the marker is updated\n        this.localObserver.publish(\"newCoordinates\", {\n          coordinates: [updatedValue, this.state.coordinateYFloat],\n          proj: this.props.transformation.code,\n          force: false,\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    let xCoord = this.props.inverseAxis\n      ? this.state.coordinateY\n      : this.state.coordinateX;\n    let yCoord = this.props.inverseAxis\n      ? this.state.coordinateX\n      : this.state.coordinateY;\n\n    if (this.model.showFieldsOnStart || this.state.wasModified) {\n      return (\n        <Grid container item spacing={2} rowSpacing={1}>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\" style={{ fontWeight: 600 }}>\n              {this.transformation\n                ? this.transformation.title +\n                  \" (\" +\n                  this.transformation.code +\n                  \")\"\n                : \"\"}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <NumberFormat\n              label={this.props.transformation.xtitle}\n              margin=\"dense\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={xCoord}\n              name=\"numberformatX\"\n              type=\"text\"\n              onValueChange={(values) => {\n                this.handleInputX(values);\n              }}\n              axis={this.props.transformation.inverseAxis ? \"X\" : \"Y\"}\n              error={this.state.errorX !== \"\"}\n              helperText={this.state.errorX}\n              thousandSeparator={this.model.thousandSeparator ? \" \" : false}\n              customInput={TextField}\n              fullWidth={true}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <NumberFormat\n              label={this.props.transformation.ytitle}\n              margin=\"dense\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={yCoord}\n              name=\"numberformatY\"\n              type=\"text\"\n              onValueChange={(values) => {\n                this.handleInputY(values);\n              }}\n              axis={this.props.transformation.inverseAxis ? \"Y\" : \"X\"}\n              error={this.state.errorY !== \"\"}\n              helperText={this.state.errorY}\n              thousandSeparator={this.model.thousandSeparator ? \" \" : false}\n              customInput={TextField}\n              fullWidth={true}\n            />\n          </Grid>\n        </Grid>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nexport default withSnackbar(CoordinatesTransformRow);\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport CoordinatesTransformRow from \"./CoordinatesTransformRow.js\";\nimport { Divider, Tooltip } from \"@mui/material\";\n\nimport { withSnackbar } from \"notistack\";\n\nimport {\n  LOCATION_DENIED_SNACK_OPTIONS,\n  LOCATION_DENIED_SNACK_MESSAGE,\n} from \"plugins/Location/constants/index.js\";\n\nconst StyledGridContainer = styled(Grid)(({ theme }) => ({\n  padding: theme.spacing(2),\n}));\n\nclass CoordinatesView extends React.PureComponent {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.model = this.props.model;\n    this.snackbarKey = null;\n    this.localObserver = this.props.localObserver;\n\n    /**\n     * Setup listeners that will show/hide snackbar. The Model will publish\n     * the following events in order to show/hide Snackbar.\n     * Snackbar will show up to inform user to click in the map. When user has\n     * clicked, or changed to another tool, the snackbar will close.\n     */\n    this.localObserver.subscribe(\"showSnackbar\", () => {\n      this.snackbarKey = this.props.enqueueSnackbar(\n        \"Klicka i kartan för att välja position.\",\n        {\n          variant: \"info\",\n          persist: true,\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          },\n          sx: {\n            // Custom styling to follow Material Design guidelines for Snackbar.\n            // Placing the close button to the right of the text.\n            \".SnackbarItem-contentRoot\": {\n              flexWrap: \"inherit !important\",\n            },\n          },\n          action: (key) => (\n            <Button\n              aria-label=\"close\"\n              color=\"inherit\"\n              id={key}\n              onClick={() => {\n                this.props.model.closeSnackbar();\n              }}\n            >\n              Sluiten\n            </Button>\n          ),\n        }\n      );\n    });\n\n    this.localObserver.subscribe(\"hideSnackbar\", () => {\n      this.props.closeSnackbar(this.snackbarKey);\n    });\n\n    this.localObserver.subscribe(\"location-permissions-denied\", () => {\n      this.props.enqueueSnackbar(\n        LOCATION_DENIED_SNACK_MESSAGE,\n        LOCATION_DENIED_SNACK_OPTIONS\n      );\n    });\n  }\n\n  componentWillUnmount() {\n    this.model.deactivate();\n  }\n\n  renderProjections() {\n    return (\n      <>\n        {this.props.model.transformations.map((transformation, index) => (\n          <CoordinatesTransformRow\n            key={`${transformation.code}${index}-element`}\n            model={this.model}\n            transformation={transformation}\n            inverseAxis={transformation.inverseAxis}\n          />\n        ))}\n      </>\n    );\n  }\n\n  renderButtons() {\n    return (\n      <Grid\n        container\n        item\n        spacing={2}\n        rowSpacing={1}\n        sx={{ mb: { xs: 6, sm: 0, md: 0 } }}\n      >\n        <Grid item xs={12} md={6}>\n          <Tooltip title=\"Rensa fält\">\n            <Button\n              fullWidth={true}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.model.resetCoords();\n              }}\n            >\n              Rensa\n            </Button>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Tooltip title=\"Min position\">\n            <Button\n              fullWidth={true}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.model.goToUserLocation();\n              }}\n            >\n              Min position\n            </Button>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={12} sm={6} md={6}>\n          <Tooltip title=\"Panorera till markering\">\n            <Button\n              fullWidth={true}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.model.centerOnMarker();\n              }}\n            >\n              Panorera\n            </Button>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={12} sm={6} md={6}>\n          <Tooltip title=\"Zooma in till markering\">\n            <Button\n              fullWidth={true}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.model.zoomOnMarker();\n              }}\n            >\n              Zooma\n            </Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Grid container>\n        <StyledGridContainer container rowSpacing={2} columnSpacing={1}>\n          {this.renderProjections()}\n        </StyledGridContainer>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <StyledGridContainer container rowSpacing={2} columnSpacing={1}>\n          {this.renderButtons()}\n        </StyledGridContainer>\n      </Grid>\n    );\n  }\n}\n\nexport default withSnackbar(CoordinatesView);\n","export const LOCATION_DENIED_SNACK_MESSAGE =\n  \"Du behöver tillåta att applikationen visar din position. För datorer: De flesta webbläsare har en lås-ikon i adressfältet som du kan klicka på för att tillåta Plats/Position.\";\nexport const LOCATION_DENIED_SNACK_OPTIONS = Object.freeze({\n  variant: \"info\",\n  persist: false,\n  anchorOrigin: {\n    vertical: \"top\",\n    horizontal: \"center\",\n  },\n});\n"],"names":["CoordinatesTransformRow","React","constructor","props","super","state","errorX","errorY","coordinateX","coordinateY","coordinateXFloat","coordinateYFloat","wasLastChanged","wasModified","this","model","transformation","localObserver","subscribe","incomingCoords","code","transformedCoords","transform","setState","toFixed","precision","handleInputX","event","inverseAxis","value","floatValue","isNaN","isFinite","updatedValue","publish","coordinates","proj","force","handleInputY","componentWillUnmount","render","xCoord","yCoord","showFieldsOnStart","container","item","spacing","rowSpacing","xs","variant","style","fontWeight","title","md","label","xtitle","margin","size","name","type","onValueChange","values","axis","error","helperText","thousandSeparator","customInput","TextField","fullWidth","ytitle","withSnackbar","StyledGridContainer","styled","Grid","theme","padding","CoordinatesView","snackbarKey","enqueueSnackbar","persist","anchorOrigin","vertical","horizontal","sx","flexWrap","action","key","color","id","onClick","closeSnackbar","LOCATION_DENIED_SNACK_MESSAGE","LOCATION_DENIED_SNACK_OPTIONS","deactivate","renderProjections","transformations","map","index","renderButtons","mb","sm","resetCoords","goToUserLocation","centerOnMarker","zoomOnMarker","columnSpacing","Object","freeze"],"sourceRoot":""}