{"version":3,"file":"static/js/3530.b097f56d.chunk.js","mappings":"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","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Measure/Measure.js","plugins/Measure/MeasureModel.js","plugins/Measure/MeasureView.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/NativeSelect/NativeSelect.js","../node_modules/ol/Overlay.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts = {}) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // AppModel keeps track of recently shown plugins.\n    this.props.app.pushPluginIntoHistory({\n      type: this.type,\n      icon: this.props.custom.icon,\n      title: this.title,\n      description: this.description,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Always render a Drawer button unless its target is \"hidden\". \n              It's a backup for plugins render elsewhere: we hide \n              Widget and Control buttons on small screens and fall \n              back to Drawer button). */}\n        {target !== \"hidden\" && this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget and Control plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden\n        mdUp={\n          this.pluginIsWidget(this.props.options.target) ||\n          this.props.options.target === \"control\"\n        }\n      >\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      // Hide Control button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <PluginControlButton\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React from \"react\";\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\n\nimport SvgIcon from \"@mui/material/SvgIcon\";\n\nimport MeasureView from \"./MeasureView\";\nimport MeasureModel from \"./MeasureModel\";\nimport Observer from \"react-event-observer\";\n\nimport \"./measure.css\";\n\nfunction MeasureIcon(props) {\n  const d = `M732.1,10L500.9,241.3l84.9,84.9l-34,34l-84.9-84.9l-91,91l84.9,84.9l-34,34l-84.9-84.9l-99.3,99.3l84.9,84.9l-34,34l-84.9-84.9L10,732.1L267.9,990L990,267.9L732.1,10z M230.8,819.7c-13.9,13.9-36.5,13.9-50.4,0c-13.9-13.9-13.9-36.5,0-50.4c13.9-13.9,36.5-13.9,50.4,0C244.7,783.2,244.7,805.8,230.8,819.7z`;\n\n  return (\n    <SvgIcon {...props} width=\"20pt\" height=\"20pt\" viewBox=\"0 0 1000 1000\">\n      <path d={d} />\n    </SvgIcon>\n  );\n}\n\nclass Measure extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.localObserver = Observer();\n\n    this.model = new MeasureModel({\n      map: props.map,\n      app: props.app,\n      localObserver: this.localObserver,\n    });\n  }\n\n  onWindowShow = () => {\n    this.model.setActive(true);\n  };\n\n  onWindowHide = () => {\n    this.model.setActive(false);\n  };\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Measure\"\n        custom={{\n          icon: <MeasureIcon />,\n          title: \"Mät\",\n          description: \"Mät längder och ytor\",\n          height: \"dynamic\",\n          width: 300,\n          top: undefined,\n          left: undefined,\n          onWindowShow: this.onWindowShow,\n          onWindowHide: this.onWindowHide,\n        }}\n      >\n        <MeasureView\n          model={this.model}\n          app={this.props.app}\n          localObserver={this.localObserver}\n        />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Measure;\n","import { Circle as CircleStyle, Fill, Stroke, Style, Text } from \"ol/style.js\";\nimport { Vector as VectorSource } from \"ol/source.js\";\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport { LineString, Polygon, Circle } from \"ol/geom.js\";\nimport Draw from \"ol/interaction/Draw.js\";\n\nimport Overlay from \"ol/Overlay\";\n\nclass MeasureModel {\n  constructor(settings) {\n    this.map = settings.map;\n    this.app = settings.app;\n    this.localObserver = settings.localObserver;\n    this.source = new VectorSource();\n    this.vector = new VectorLayer({\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginMeasure\",\n      caption: \"Measure layer\",\n      source: this.source,\n      style: this.createStyle,\n    });\n    this.map.addLayer(this.vector);\n    this.type = \"LineString\";\n    this.createMeasureTooltip();\n  }\n\n  createStyle = (feature, resolution) => {\n    const fillColor = \"rgba(255, 255, 255, 0.3)\";\n    const strokeColor = \"rgba(0, 0, 0, 0.5)\";\n    return [\n      new Style({\n        fill: new Fill({\n          color: fillColor,\n        }),\n        stroke: new Stroke({\n          color: strokeColor,\n          width: 3,\n        }),\n        image: new CircleStyle({\n          radius: 5,\n          stroke: new Stroke({\n            color: strokeColor,\n          }),\n          fill: new Fill({\n            color: fillColor,\n          }),\n        }),\n        text: new Text({\n          textAlign: \"center\",\n          textBaseline: \"middle\",\n          font: \"12pt sans-serif\",\n          fill: new Fill({ color: \"#FFF\" }),\n          text: this.getLabelText(feature),\n          overflow: true,\n          stroke: new Stroke({\n            color: strokeColor,\n            width: 3,\n          }),\n          offsetX: 0,\n          offsetY: -10,\n          rotation: 0,\n          scale: 1,\n        }),\n      }),\n    ];\n  };\n\n  clear = () => {\n    this.source.clear();\n    this.measureTooltip.setPosition(undefined);\n  };\n\n  handleDrawStart = (e) => {\n    e.feature.getGeometry().on(\"change\", (e) => {\n      var toolTip = \"\",\n        coord = undefined,\n        pointerCoord;\n\n      if (this.active) {\n        if (this.pointerPosition) {\n          pointerCoord = this.pointerPosition.coordinate;\n        }\n\n        if (e.target instanceof LineString) {\n          toolTip = this.formatLabel(\"length\", e.target.getLength());\n          coord = e.target.getLastCoordinate();\n        }\n\n        if (e.target instanceof Polygon) {\n          toolTip = this.formatLabel(\"area\", e.target.getArea());\n          coord = pointerCoord || e.target.getFirstCoordinate();\n        }\n\n        if (e.target instanceof Circle) {\n          toolTip = this.formatLabel(\"circle\", e.target.getRadius());\n          coord = pointerCoord || e.target.getFirstCoordinate();\n        }\n\n        this.measureTooltipElement.innerHTML = toolTip;\n        this.measureTooltip.setPosition(coord);\n      }\n    });\n  };\n\n  handleDrawEnd = (e) => {\n    this.setFeaturePropertiesFromGeometry(e.feature);\n    this.measureTooltip.setPosition(undefined);\n  };\n\n  setType(type) {\n    this.type = type;\n    this.removeInteraction();\n    this.addInteraction();\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  setFeaturePropertiesFromGeometry(feature) {\n    if (!feature) return;\n    var geom,\n      type = \"\",\n      length = 0,\n      radius = 0,\n      area = 0,\n      position = {\n        n: 0,\n        e: 0,\n      };\n    geom = feature.getGeometry();\n    type = geom.getType();\n    switch (type) {\n      case \"Point\":\n        position = {\n          n: Math.round(geom.getCoordinates()[1]),\n          e: Math.round(geom.getCoordinates()[0]),\n        };\n        break;\n      case \"LineString\":\n        if (geom.getLength() < 1000) {\n          length = Math.round(geom.getLength() * 10) / 10;\n        } else {\n          length = Math.round(geom.getLength());\n        }\n        break;\n      case \"Polygon\":\n        area = Math.round(geom.getArea());\n        break;\n      case \"Circle\":\n        radius = Math.round(geom.getRadius());\n        break;\n      default:\n        break;\n    }\n    feature.setProperties({\n      type: type,\n      length: length,\n      area: area,\n      radius: radius,\n      position: position,\n    });\n  }\n\n  formatLabel(type, value) {\n    let label;\n\n    if (type === \"point\") {\n      label = \"Nord: \" + value.n + \" Öst: \" + value.e;\n    }\n\n    if (typeof value === \"number\") {\n      if (type === \"length\" && value < 1000) {\n        value = Math.round(value * 10) / 10;\n      } else {\n        value = Math.round(value);\n      }\n    }\n\n    if (type === \"circle\") {\n      let unit = \" m\";\n      let squareUnit = \" m²\";\n      if (value >= 1000) {\n        unit = \" km\";\n        value = value / 1000;\n      }\n      label =\n        \"R = \" +\n        Number(value).toLocaleString() +\n        unit +\n        \" \\nA = \" +\n        (Math.round(value * value * Math.PI * 1000) / 1000).toLocaleString() +\n        squareUnit;\n    }\n\n    if (type === \"area\") {\n      if (value > 100000) {\n        label =\n          Number(Math.round((value / 1000000) * 100) / 100).toLocaleString() +\n          \" km²\";\n      } else {\n        label = Number(Math.round(value * 100) / 100).toLocaleString() + \" m²\";\n      }\n    }\n\n    if (type === \"length\") {\n      let unit = \" m\";\n      if (value >= 1000) {\n        unit = \" km\";\n        value = value / 1000;\n      }\n      label = Number(value).toLocaleString() + unit;\n    }\n\n    return label;\n  }\n\n  createMeasureTooltip() {\n    if (this.measureTooltipElement) {\n      this.measureTooltipElement.parentNode.removeChild(\n        this.measureTooltipElement\n      );\n    }\n    this.measureTooltipElement = document.createElement(\"div\");\n    this.measureTooltipElement.className = \"tooltip-draw tooltip-measure\";\n    this.measureTooltip = new Overlay({\n      element: this.measureTooltipElement,\n      offset: [0, -15],\n      positioning: \"bottom-center\",\n    });\n    this.map.addOverlay(this.measureTooltip);\n  }\n\n  getLabelText(feature) {\n    const props = feature.getProperties();\n    const type = feature.getProperties().type;\n    switch (type) {\n      case \"Point\":\n        return this.formatLabel(\"point\", props.position);\n      case \"LineString\":\n        return this.formatLabel(\"length\", props.length);\n      case \"Circle\":\n        return this.formatLabel(\"circle\", props.radius);\n      case \"Polygon\":\n        return this.formatLabel(\"area\", props.area);\n      default:\n        return \"\";\n    }\n  }\n\n  addInteraction() {\n    this.draw = new Draw({\n      source: this.source,\n      type: this.type,\n      style: new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.2)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          lineDash: [10, 10],\n          width: 2,\n        }),\n        image: new CircleStyle({\n          radius: 5,\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 0.7)\",\n          }),\n          fill: new Fill({\n            color: \"rgba(255, 255, 255, 0.2)\",\n          }),\n        }),\n      }),\n    });\n    this.draw.on(\"drawstart\", this.handleDrawStart);\n    this.draw.on(\"drawend\", this.handleDrawEnd);\n    this.map.addInteraction(this.draw);\n\n    // Add snap interactions AFTER measure source has been added\n    // this will allow us to snap to the newly added source too\n    this.map.snapHelper.add(\"measure\");\n  }\n\n  removeInteraction() {\n    this.measureTooltip.setPosition(undefined);\n    this.map.snapHelper.delete(\"measure\");\n    this.map.removeInteraction(this.draw);\n  }\n\n  eventHandler = (event) => {\n    const key = event.key; // Or const {key} = event; in ES6+\n    if (key === \"Escape\") {\n      this.draw.finishDrawing();\n    }\n  };\n\n  setActive(active) {\n    if (active && !this.active) {\n      document.addEventListener(\"keydown\", this.eventHandler);\n      this.addInteraction();\n      this.map.clickLock.add(\"measure\");\n    }\n    if (active === false) {\n      document.removeEventListener(\"keydown\", this.eventHandler);\n      this.removeInteraction();\n      this.map.clickLock.delete(\"measure\");\n    }\n    this.active = active;\n  }\n\n  getMap() {\n    return this.map;\n  }\n}\n\nexport default MeasureModel;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { withSnackbar } from \"notistack\";\nimport { Typography } from \"@mui/material\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  marginTop: theme.spacing(1),\n}));\n\nclass MeasureView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.model = props.model;\n    this.app = props.app;\n    this.localObserver = props.localObserver;\n    this.state = {\n      shape: this.model.getType(),\n    };\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    this.model.setType(event.target.value);\n  };\n\n  render() {\n    return (\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            Vid ritning av sträckor och arealer är det möjligt att hålla ner\n            Shift-tangenten. Då kan man rita sträckan/arealen på fri hand.\n            <br />\n            <br />\n            För att avsluta en mätning, klicka igen på sista punkten eller tryck\n            på Esc-tangenten.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"measure-native-helper\">\n              Typ av mätning\n            </InputLabel>\n            <NativeSelect\n              value={this.state.shape}\n              onChange={this.handleChange(\"shape\")}\n              input={<Input name=\"shape\" id=\"measure-native-helper\" />}\n            >\n              <option value=\"Point\">Punkt</option>\n              <option value=\"LineString\">Sträcka</option>\n              <option value=\"Circle\">Cirkel</option>\n              <option value=\"Polygon\">Areal</option>\n            </NativeSelect>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <StyledButton\n            variant=\"contained\"\n            fullWidth\n            onClick={this.model.clear}\n          >\n            Rensa mätning\n          </StyledButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withSnackbar(MeasureView);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"],\n  _excluded2 = [\"root\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport NativeSelectInput from './NativeSelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getNativeSelectUtilityClasses } from './nativeSelectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n  const {\n      className,\n      children,\n      classes: classesProp = {},\n      IconComponent = ArrowDropDownIcon,\n      input = defaultInput,\n      inputProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  const ownerState = _extends({}, props, {\n    classes: classesProp\n  });\n  const classes = useUtilityClasses(ownerState);\n  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded2);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(input, _extends({\n      // Most of the logic is implemented in `NativeSelectInput`.\n      // The `Select` component is a simple API wrapper to expose something better to play with.\n      inputComponent: NativeSelectInput,\n      inputProps: _extends({\n        children,\n        classes: otherClasses,\n        IconComponent,\n        variant: fcs.variant,\n        type: undefined\n      }, inputProps, input ? input.props.inputProps : {}),\n      ref\n    }, other, {\n      className: clsx(classes.root, input.props.className, className)\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","React","state","open","render","abstract","icon","onClick","title","this","props","avatar","subheader","defaultProps","BaseWindowPlugin","constructor","super","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","pushPluginIntoHistory","custom","description","windowVisible","onWindowOpen","setState","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","componentDidUpdate","prevProps","pluginIsWidget","target","includes","renderWindow","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","MeasureIcon","SvgIcon","viewBox","d","Measure","model","setActive","localObserver","Observer","MeasureModel","top","left","MeasureView","settings","createStyle","feature","resolution","fillColor","strokeColor","Style","fill","Fill","stroke","Stroke","image","CircleStyle","radius","Text","textAlign","textBaseline","font","getLabelText","overflow","offsetX","offsetY","rotation","scale","clear","source","measureTooltip","setPosition","handleDrawStart","getGeometry","on","pointerCoord","toolTip","coord","active","pointerPosition","coordinate","LineString","formatLabel","getLength","getLastCoordinate","Polygon","getArea","getFirstCoordinate","Circle","getRadius","measureTooltipElement","innerHTML","handleDrawEnd","setFeaturePropertiesFromGeometry","eventHandler","event","key","draw","finishDrawing","VectorSource","vector","VectorLayer","layerType","zIndex","name","caption","style","addLayer","createMeasureTooltip","setType","removeInteraction","addInteraction","getType","geom","length","area","n","Math","round","getCoordinates","setProperties","value","label","unit","squareUnit","Number","toLocaleString","PI","parentNode","removeChild","createElement","className","Overlay","element","offset","positioning","addOverlay","getProperties","Draw","lineDash","snapHelper","add","delete","addEventListener","clickLock","removeEventListener","getMap","StyledButton","Button","marginTop","handleChange","shape","container","item","xs","variant","fullWidth","htmlFor","onChange","input","withSnackbar","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","ButtonBase","overridesResolver","styles","root","display","cardActionAreaClasses","opacity","vars","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","pointerEvents","right","bottom","backgroundColor","transition","transitions","create","duration","short","inProps","ref","useThemeProps","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible","_jsx","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","CardHeaderContent","content","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","as","getCardUtilityClass","CardRoot","Paper","raised","elevation","_excluded2","defaultInput","Input","NativeSelect","classesProp","IconComponent","ArrowDropDownIcon","inputProps","muiFormControl","useFormControl","fcs","formControlState","states","getNativeSelectUtilityClasses","otherClasses","inputComponent","NativeSelectInput","muiName","Property","BaseObject","once","un","insertFirst","stopEvent","CLASS_SELECTABLE","autoPan","rendered","transform_","visible","mapPostrenderListenerKey","addChangeListener","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","getElement","get","getId","getOffset","getPosition","getPositioning","removeChildren","appendChild","removeNode","unlistenByKey","listen","MapEventType","updatePixelPosition","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","set","setMap","panIntoView","panIntoViewOptions","getTargetElement","mapRect","getRect","getSize","overlayRect","outerWidth","outerHeight","myMargin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","abs","center","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animation","animateInternal","getCoordinateFromPixelInternal","easing","size","box","getBoundingClientRect","window","pageXOffset","pageYOffset","setVisible","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","x","y","posX","posY","transform","getOptions"],"sourceRoot":""}