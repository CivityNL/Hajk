{"version":3,"file":"static/js/1344.ce73cb48.chunk.js","mappings":"wLAMA,MAAMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,QAAC,MAAEE,GAAH,QAAgB,CAClDC,OAAQ,EAD0B,IAI9BC,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,EAAc,QAAC,MAAEE,GAAH,QAAgB,CAChDI,SAAU,QACVC,WAAY,QAFoB,IAK5BC,GAAoBR,EAAAA,EAAAA,IAAO,MAAPA,EAAc,QAAC,MAAEE,GAAH,QAAgB,CACtDO,QAAS,OACTC,SAAU,OAF4B,IAWxC,MAAMC,UAAiBC,EAAAA,UAAW,cAAD,yBAC/BC,MAAQ,CACNC,eAAe,EACfC,UAAW,eAHkB,KAQ/BC,MAASC,IACP,MAAM,QAAEC,GAAYC,KAAKC,MACrBF,GAASA,GAAS,CAVO,CAY/BG,oBACMF,KAAKC,MAAME,gBACbH,KAAKC,MAAME,eAAeC,UAAU,wBAAyBC,IAC3DL,KAAKM,SACH,CACEV,UAAW,UAEb,KACEI,KAAKM,SAAS,CACZV,UAAW,eADb,GALJ,GAYL,CAEDW,SACE,IAAI,SAAEC,EAAF,SAAYC,EAAZ,KAAsBJ,GAASL,KAAKC,MACxC,MAAM,UAAEL,GAAcI,KAAKN,WACdgB,IAATL,IACFA,GAAO,GAET,MAAMM,EAAKN,EAAO,uBAAyB,KAC3C,OACE,SAACzB,EAAD,CACE+B,GAAIA,EACJN,KAAMA,EACNI,SAAUA,EACVb,UAAWA,EAJb,UAME,UAACX,EAAD,YACE,SAAC,UAAD,CACE2B,MAAOZ,KAAKC,MAAMW,MAClBb,QAASC,KAAKH,MACdgB,aAAa,EACbC,WAAY,OACZC,WAAY,UAEd,SAAC1B,EAAD,UAAoBmB,QAI3B,EAGH,W","sources":["components/PopPanel.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Popper from \"@mui/material/Popper\";\nimport Paper from \"@mui/material/Paper\";\nimport PanelHeader from \"./PanelHeader\";\n\nconst StyledPopper = styled(Popper)(({ theme }) => ({\n  zIndex: 4,\n}));\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  maxWidth: \"400px\",\n  background: \"white\",\n}));\n\nconst ChildrenContainer = styled(\"div\")(({ theme }) => ({\n  padding: \"15px\",\n  overflow: \"auto\",\n}));\n\n/**\n * @summary Currently not implemented popup for infoclick. Similar to how  it worked in Hajk2.\n *\n * @class PopPanel\n * @extends {Component}\n */\nclass PopPanel extends Component {\n  state = {\n    panelPosition: false,\n    placement: \"right-start\",\n  };\n\n  // TODO: Implement. Add propTypes.\n\n  close = (e) => {\n    const { onClose } = this.props;\n    if (onClose) onClose();\n  };\n  componentDidMount() {\n    if (this.props.globalObserver) {\n      this.props.globalObserver.subscribe(\"core.toolbarExpanded\", (open) => {\n        this.setState(\n          {\n            placement: \"right\",\n          },\n          () => {\n            this.setState({\n              placement: \"right-start\",\n            });\n          }\n        );\n      });\n    }\n  }\n\n  render() {\n    var { children, anchorEl, open } = this.props;\n    const { placement } = this.state;\n    if (open === undefined) {\n      open = false;\n    }\n    const id = open ? \"no-transition-popper\" : null;\n    return (\n      <StyledPopper\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        placement={placement}\n      >\n        <StyledPaper>\n          <PanelHeader\n            title={this.props.title}\n            onClose={this.close}\n            maximizable={false}\n            onMaximize={() => {}}\n            onMinimize={() => {}}\n          />\n          <ChildrenContainer>{children}</ChildrenContainer>\n        </StyledPaper>\n      </StyledPopper>\n    );\n  }\n}\n\nexport default PopPanel;\n"],"names":["StyledPopper","styled","Popper","theme","zIndex","StyledPaper","Paper","maxWidth","background","ChildrenContainer","padding","overflow","PopPanel","Component","state","panelPosition","placement","close","e","onClose","this","props","componentDidMount","globalObserver","subscribe","open","setState","render","children","anchorEl","undefined","id","title","maximizable","onMaximize","onMinimize"],"sourceRoot":""}