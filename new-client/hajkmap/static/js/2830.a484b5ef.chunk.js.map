{"version":3,"file":"static/js/2830.a484b5ef.chunk.js","mappings":"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","sources":["plugins/Draw/DrawView.js","plugins/Draw/components/Symbology.js","../node_modules/@mui/icons-material/FolderOpen.js","../node_modules/@mui/icons-material/SaveAlt.js","../node_modules/@mui/material/NativeSelect/NativeSelect.js"],"sourcesContent":["import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { withSnackbar } from \"notistack\";\nimport Dialog from \"../../components/Dialog/Dialog\";\nimport Symbology from \"./components/Symbology.js\";\n\n// The css-file is only targeting the ol-draw-interaction, and styles the tooltip.\n// TODO: Remove?\nimport \"./draw.css\";\n\nconst StyledFormControl = styled(FormControl)(() => ({\n  width: \"100%\",\n}));\n\nconst Row = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  marginBottom: theme.spacing(1),\n}));\n\nconst StyledDivider = styled(Divider)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(1),\n}));\n\nclass DrawView extends React.PureComponent {\n  state = {\n    shape: \"LineString\",\n    drawMethod: \"add\",\n    displayText: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.model = this.props.model;\n    this.localObserver = this.props.localObserver;\n    this.globalObserver = this.props.globalObserver;\n    this.snackbarKey = null;\n    this.localObserver.subscribe(\"dialog\", (feature) => {\n      this.setState({\n        feature: feature,\n        dialog: true,\n        dialogPrompt: true,\n        dialogText: \"\",\n        dialogButtonText: \"OK\",\n        dialogAbortText: \"Annuleren\",\n        dialogCloseCallback: this.onCloseTextDialog,\n        dialogAbortCallback: this.onAbortTextDialog,\n      });\n    });\n    this.addMapDropListeners();\n  }\n\n  addMapDropListeners = () => {\n    const mapDiv = document.getElementById(\"map\");\n    [\"drop\", \"dragover\", \"dragend\", \"dragleave\", \"dragenter\"].forEach(\n      (eventName) => {\n        mapDiv.addEventListener(\n          eventName,\n          this.preventDefaultDropBehavior,\n          false\n        );\n      }\n    );\n    mapDiv.addEventListener(\"dragenter\", this.handleDragEnter, false);\n    mapDiv.addEventListener(\"drop\", this.handleDrop, false);\n  };\n\n  handleDragEnter = (e) => {\n    this.snackbarKey = this.props.enqueueSnackbar(\n      \"Släpp en KML-fil i kartan för att importera!\",\n      { preventDuplicate: true }\n    );\n  };\n\n  handleDrop = (e) => {\n    try {\n      const file = e.dataTransfer.files[0];\n      if (file) {\n        const fileType = file.type ? file.type : file.name.split(\".\").pop();\n        //Not sure about filetype for kml... Qgis- and Hajk-generated kml:s does not contain any information about type.\n        //The application/vnd... is a guess.\n        if (\n          fileType === \"kml\" ||\n          fileType === \"application/vnd.google-earth.kml+xml\"\n        ) {\n          this.globalObserver.publish(\"draw.showWindow\", {\n            hideOtherPlugins: false,\n          });\n          this.addDroppedKmlToMap(file);\n        }\n      }\n    } catch (error) {\n      this.props.enqueueSnackbar(\"KML-filen kunde inte importeras.\", {\n        variant: \"error\",\n      });\n      console.error(`Error importing KML-file... ${error}`);\n    }\n  };\n\n  addDroppedKmlToMap = (file) => {\n    const { model } = this.props;\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      model.import(reader.result, (error) => {\n        this.handleImportError(error);\n      });\n      this.props.closeSnackbar(this.snackbarKey);\n      this.snackbarKey = null;\n    };\n\n    reader.readAsText(file);\n  };\n\n  handleImportError = (error) => {\n    if (error === \"no-features-found\") {\n      this.props.enqueueSnackbar(\"Inga ritobjekt hittades i KML-filen.\", {\n        variant: \"warning\",\n      });\n    } else {\n      throw error;\n    }\n  };\n\n  preventDefaultDropBehavior = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  handleChange = (name) => (event) => {\n    this.setState({ [name]: event.target.value });\n    if (name === \"shape\") {\n      this.props.model.setType(event.target.value);\n    }\n    if (name === \"drawMethod\") {\n      this.props.model.setDrawMethod(event.target.value);\n    }\n  };\n\n  onAbortTextDialog = () => {\n    this.setState({\n      dialog: false,\n    });\n  };\n\n  onCloseTextDialog = (text) => {\n    this.props.model.openDialog(false);\n\n    const { feature } = this.state;\n    feature.set(\"type\", \"Text\");\n    feature.set(\"text\", text);\n    feature.setStyle(this.props.model.getStyle(feature));\n    this.setState({\n      dialog: false,\n    });\n    this.props.model.redraw();\n  };\n\n  renderDialog() {\n    if (this.state.dialog) {\n      this.props.model.openDialog(true);\n\n      return createPortal(\n        <Dialog\n          options={{\n            text: this.state.dialogText,\n            prompt: this.state.dialogPrompt,\n            headerText: this.state.dialogHeaderText || \"Ange text\",\n            buttonText: this.state.dialogButtonText || \"OK\",\n            abortText: this.state.dialogAbortText,\n            useLegacyNonMarkdownRenderer: true,\n          }}\n          open={this.state.dialog}\n          onClose={this.state.dialogCloseCallback}\n          onAbort={this.state.dialogAbortCallback}\n        />,\n        document.getElementById(\"map\")\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderForm() {\n    const { drawMethod } = this.state;\n\n    if (drawMethod === \"add\") {\n      return (\n        <>\n          <Row>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\" htmlFor=\"shape-native-helper\">\n                Typ av ritobjekt\n              </InputLabel>\n              <NativeSelect\n                value={this.state.shape}\n                onChange={this.handleChange(\"shape\")}\n                input={<Input name=\"shape\" id=\"shape-native-helper\" />}\n              >\n                <option value=\"LineString\">Linje</option>\n                <option value=\"Text\">Text</option>\n                <option value=\"Polygon\">Yta</option>\n                <option value=\"Square\">Rektangel</option>\n                <option value=\"Circle\">Cirkel</option>\n                <option value=\"Point\">Punkt</option>\n              </NativeSelect>\n            </StyledFormControl>\n          </Row>\n          <StyledDivider>Ritmanér</StyledDivider>\n          <Row>\n            <Symbology type={this.state.shape} model={this.props.model} />\n          </Row>\n        </>\n      );\n    }\n\n    if (drawMethod === \"edit\") {\n      return (\n        <>\n          <Typography>\n            Klik op het object op de kaart dat u wilt bewerken. U kunt uw eigen\n            tekenobjecten bewerken. Gebruik het bewerkingshulpmiddel om andere\n            objecten te bewerken.\n          </Typography>\n        </>\n      );\n    }\n\n    if (drawMethod === \"remove\") {\n      return (\n        <>\n          <Typography>\n            Klik op een tekenobject op de kaart dat u wilt verwijderen. U kunt\n            uw eigen tekenobjecten verwijderen. Gebruik het bewerkingshulpmiddel\n            om andere items te verwijderen.\n          </Typography>\n        </>\n      );\n    }\n\n    if (drawMethod === \"move\") {\n      return (\n        <>\n          <Typography>\n            Klicka på det ritobjekt i kartan som du vill flytta för att aktivera\n            flyttläge, dra därefter objektet till ny position. Du kan flytta\n            dina egna ritobjekt. För att flytta andra objekt använd\n            editeraverktyget.\n          </Typography>\n        </>\n      );\n    }\n\n    if (drawMethod === \"import\") {\n      return (\n        <>\n          <div>\n            <Button sx={{ width: \"100%\" }} onClick={this.openUploadDialog}>\n              <FolderOpenIcon />\n              &nbsp; Importera ritobjekt\n            </Button>\n          </div>\n          <div>\n            <Button sx={{ width: \"100%\" }} onClick={this.props.model.export}>\n              <SaveAltIcon />\n              &nbsp; Exportera ritobjekt\n            </Button>\n          </div>\n        </>\n      );\n    }\n  }\n\n  openUploadDialog = (e) => {\n    this.setState({\n      dialog: true,\n      dialogPrompt: false,\n      dialogHeaderText: \"Ladda upp innehåll\",\n      dialogText: this.renderImport(),\n      dialogButtonText: \"Annuleren\",\n      dialogCloseCallback: this.onCloseUploadDialog,\n    });\n  };\n\n  onCloseUploadDialog = () => {\n    this.setState({\n      dialog: false,\n    });\n    return;\n  };\n\n  renderImport() {\n    return (\n      <div>\n        <Typography>Välj KML-fil att importera:</Typography>\n        <Row>\n          <input\n            type=\"file\"\n            name=\"files[]\"\n            accept=\".kml\"\n            multiple={false}\n            id=\"file-uploader\"\n          />\n        </Row>\n        <Row>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            value=\"Ladda upp\"\n            onClick={() => {\n              var fileUploader = document.getElementById(\"file-uploader\");\n              var file = fileUploader.files[0];\n              var reader = new FileReader();\n              reader.onload = () => {\n                this.onCloseUploadDialog();\n                this.props.model.import(reader.result, (error) => {\n                  try {\n                    this.handleImportError(error);\n                  } catch (error) {\n                    console.error(`Error importing KML-file... ${error}`);\n                  }\n                });\n              };\n              if (file) {\n                reader.readAsText(file);\n              }\n            }}\n          >\n            Ladda upp\n          </Button>\n        </Row>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Row>\n            <Button\n              variant=\"contained\"\n              sx={{ width: \"100%\" }}\n              onClick={this.props.model.clear}\n            >\n              <DeleteIcon />\n              Verwijder alle objecten\n            </Button>\n          </Row>\n          <Row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={this.state.displayText}\n                  onChange={() => {\n                    this.setState({\n                      displayText: !this.state.displayText,\n                    });\n                    this.model.displayText = !this.model.displayText;\n                    this.localObserver.publish(\"update\");\n                  }}\n                  color=\"primary\"\n                />\n              }\n              label=\"Visa mått på ritobjekt\"\n            />\n          </Row>\n          <StyledDivider>Inställningar</StyledDivider>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"drawMethod-native-helper\">\n              Aktivitet\n            </InputLabel>\n            <NativeSelect\n              value={this.state.drawMethod}\n              onChange={this.handleChange(\"drawMethod\")}\n              input={<Input name=\"drawMethod\" id=\"drawMethod-native-helper\" />}\n            >\n              <option value=\"abort\">Nee</option>\n              <option value=\"add\">Voeg object toe</option>\n              <option value=\"remove\">Verwijder object</option>\n              <option value=\"edit\">Bewerk object</option>\n              <option value=\"move\">Verplaats object</option>\n              <option value=\"import\">Importeren/exporteren</option>\n            </NativeSelect>\n          </StyledFormControl>\n        </Row>\n        {this.renderForm()}\n        {this.renderDialog()}\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(DrawView);\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { CompactPicker as ColorPicker } from \"react-color\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  width: \"100%\",\n  marginBottom: theme.spacing(1),\n}));\n\nconst Row = styled(\"div\")(({ theme }) => ({\n  width: \"100%\",\n  marginBottom: theme.spacing(1),\n}));\n\nclass Symbology extends React.PureComponent {\n  state = {\n    shape: \"LineString\",\n  };\n\n  componentDidMount() {\n    const { model } = this.props;\n    this.setState({\n      fontSize: model.fontSize,\n      fontTextColor: model.fontTextColor,\n      fontBackColor: model.fontBackColor,\n      fontStroke: model.fontStroke,\n      pointText: model.pointText,\n      pointColor: model.pointColor,\n      pointRadius: model.pointRadius,\n      lineColor: model.lineColor,\n      lineWidth: model.lineWidth,\n      lineStyle: model.lineStyle,\n      circleFillColor: model.circleFillColor,\n      circleLineColor: model.circleLineColor,\n      circleFillOpacity: model.circleFillOpacity,\n      circleLineStyle: model.circleLineStyle,\n      circleLineWidth: model.circleLineWidth,\n      circleRadius: model.circleRadius,\n      polygonLineColor: model.polygonLineColor,\n      polygonLineWidth: model.polygonLineWidth,\n      polygonLineStyle: model.polygonLineStyle,\n      polygonFillColor: model.polygonFillColor,\n      polygonFillOpacity: model.polygonFillOpacity,\n      squareFillColor: model.squareFillColor,\n      squareLineColor: model.squareLineColor,\n      squareFillOpacity: model.squareFillOpacity,\n      squareLineStyle: model.squareLineStyle,\n      squareLineWidth: model.squareLineWidth,\n      pointSettings: model.pointSettings,\n    });\n  }\n\n  update = (prop) => (e) => {\n    var value = e.hex ? e.hex : e.target.value,\n      state = {};\n\n    if (e.target && e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n\n    if (typeof value === \"string\") {\n      value = !Number.isNaN(parseFloat(value))\n        ? parseFloat(value)\n        : !Number.isNaN(parseInt(value))\n        ? parseInt(value)\n        : value;\n    }\n    state[prop] = value;\n    this.setState(state);\n    this.props.model[prop] = value;\n  };\n\n  renderPointSettings() {\n    switch (this.state.pointSettings) {\n      case \"point\":\n        return (\n          <Row>\n            <StyledFormControl>\n              <div>Färg</div>\n              <ColorPicker\n                color={this.state.pointColor}\n                onChange={this.update(\"pointColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Storlek</InputLabel>\n              <NativeSelect\n                value={this.state.pointRadius}\n                onChange={this.update(\"pointRadius\")}\n              >\n                <option value=\"4\">Liten</option>\n                <option value=\"7\">Normal</option>\n                <option value=\"14\">Stor</option>\n                <option value=\"20\">Större</option>\n              </NativeSelect>\n            </StyledFormControl>\n          </Row>\n        );\n      case \"symbol\":\n        return <Row>Val av ikon är ännu inte tillgängligt.</Row>;\n      default:\n        return undefined;\n    }\n  }\n\n  render() {\n    const { type } = this.props;\n    switch (type) {\n      case \"Text\":\n        if (this.state.fontStroke === undefined) {\n          return <Row />;\n        }\n        return (\n          <div>\n            <Row>\n              <StyledFormControl>\n                <InputLabel variant=\"standard\">Textstorlek</InputLabel>\n                <NativeSelect\n                  value={this.state.fontSize}\n                  onChange={this.update(\"fontSize\")}\n                >\n                  <option value=\"8\">8</option>\n                  <option value=\"10\">10</option>\n                  <option value=\"12\">12</option>\n                  <option value=\"14\">14</option>\n                  <option value=\"16\">16</option>\n                  <option value=\"18\">18</option>\n                  <option value=\"20\">20</option>\n                  <option value=\"30\">30</option>\n                  <option value=\"40\">40</option>\n                  <option value=\"60\">60</option>\n                  <option value=\"80\">100</option>\n                </NativeSelect>\n              </StyledFormControl>\n            </Row>\n            <Row>\n              <StyledFormControl>\n                <div>Textfärg</div>\n                <ColorPicker\n                  color={this.state.fontTextColor}\n                  onChange={this.update(\"fontTextColor\")}\n                />\n              </StyledFormControl>\n            </Row>\n            <Row>\n              <StyledFormControl>\n                <div>Bakgrundsfärg text</div>\n                <ColorPicker\n                  color={this.state.fontBackColor}\n                  onChange={this.update(\"fontBackColor\")}\n                />\n              </StyledFormControl>\n            </Row>\n            <Row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state.fontStroke}\n                    onChange={this.update(\"fontStroke\")}\n                    color=\"primary\"\n                  />\n                }\n                label=\"Ingen bakgrundsfärg\"\n              />\n            </Row>\n          </div>\n        );\n      case \"Point\":\n        return (\n          <div>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Välj typ</InputLabel>\n              <NativeSelect\n                value={this.state.pointSettings}\n                onChange={this.update(\"pointSettings\")}\n              >\n                <option key=\"point\" value=\"point\">\n                  Punkt\n                </option>\n                <option key=\"symbol\" value=\"symbol\">\n                  Symbol\n                </option>\n              </NativeSelect>\n            </StyledFormControl>\n            {this.renderPointSettings()}\n          </div>\n        );\n      case \"LineString\":\n        return (\n          <div>\n            <StyledFormControl>\n              <div>Färg</div>\n              <ColorPicker\n                color={this.state.lineColor}\n                onChange={this.update(\"lineColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Tjocklek</InputLabel>\n              <NativeSelect\n                value={this.state.lineWidth}\n                onChange={this.update(\"lineWidth\")}\n              >\n                <option value=\"1\">Tunn</option>\n                <option value=\"3\">Normal</option>\n                <option value=\"5\">Tjock</option>\n                <option value=\"8\">Tjockare</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Stil</InputLabel>\n              <NativeSelect\n                value={this.state.lineStyle}\n                onChange={this.update(\"lineStyle\")}\n              >\n                <option value=\"solid\">Heldragen</option>\n                <option value=\"dash\">Streckad</option>\n                <option value=\"dot\">Punktad</option>\n              </NativeSelect>\n            </StyledFormControl>\n          </div>\n        );\n      case \"Circle\":\n        if (this.state.circleRadius === undefined) {\n          return <div />;\n        }\n        return (\n          <div>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Ange radie: </InputLabel>\n              <Input\n                type=\"text\"\n                value={this.state.circleRadius}\n                onChange={this.update(\"circleRadius\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <div>Linjefärg</div>\n              <ColorPicker\n                color={this.state.circleLineColor}\n                onChange={this.update(\"circleLineColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <div>Fyllnadsfärg</div>\n              <ColorPicker\n                color={this.state.circleFillColor}\n                onChange={this.update(\"circleFillColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Opacitet</InputLabel>\n              <NativeSelect\n                value={this.state.circleFillOpacity}\n                onChange={this.update(\"circleFillOpacity\")}\n              >\n                <option value=\"0\">0% (genomskinlig)</option>\n                <option value=\"0.25\">25%</option>\n                <option value=\"0.5\">50%</option>\n                <option value=\"0.75\">75%</option>\n                <option value=\"1\">100% (fylld)</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Linjetjocklek</InputLabel>\n              <NativeSelect\n                value={this.state.circleLineWidth}\n                onChange={this.update(\"circleLineWidth\")}\n              >\n                <option value=\"1\">Tunn</option>\n                <option value=\"3\">Normal</option>\n                <option value=\"5\">Tjock</option>\n                <option value=\"8\">Tjockare</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Linjestil</InputLabel>\n              <NativeSelect\n                value={this.state.circleLineStyle}\n                onChange={this.update(\"circleLineStyle\")}\n              >\n                <option value=\"solid\">Heldragen</option>\n                <option value=\"dash\">Streckad</option>\n                <option value=\"dot\">Punktad</option>\n              </NativeSelect>\n            </StyledFormControl>\n          </div>\n        );\n      case \"Polygon\":\n        return (\n          <div>\n            <StyledFormControl>\n              <div>Linjefärg</div>\n              <ColorPicker\n                color={this.state.polygonLineColor}\n                onChange={this.update(\"polygonLineColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <div>Fyllnadsfärg</div>\n              <ColorPicker\n                color={this.state.polygonFillColor}\n                onChange={this.update(\"polygonFillColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Opacitet</InputLabel>\n              <NativeSelect\n                value={this.state.polygonFillOpacity}\n                onChange={this.update(\"polygonFillOpacity\")}\n              >\n                <option value=\"0\">0% (genomskinlig)</option>\n                <option value=\"0.25\">25%</option>\n                <option value=\"0.5\">50%</option>\n                <option value=\"0.75\">75%</option>\n                <option value=\"1\">100% (fylld)</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Linjetjocklek</InputLabel>\n              <NativeSelect\n                value={this.state.polygonLineWidth}\n                onChange={this.update(\"polygonLineWidth\")}\n              >\n                <option value=\"1\">Tunn</option>\n                <option value=\"3\">Normal</option>\n                <option value=\"5\">Tjock</option>\n                <option value=\"8\">Tjockare</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Linjestil</InputLabel>\n              <NativeSelect\n                value={this.state.polygonLineStyle}\n                onChange={this.update(\"polygonLineStyle\")}\n              >\n                <option value=\"solid\">Heldragen</option>\n                <option value=\"dash\">Streckad</option>\n                <option value=\"dot\">Punktad</option>\n              </NativeSelect>\n            </StyledFormControl>\n          </div>\n        );\n      case \"Square\":\n        return (\n          <div>\n            <StyledFormControl>\n              <div>Linjefärg</div>\n              <ColorPicker\n                color={this.state.squareLineColor}\n                onChange={this.update(\"squareLineColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <div>Fyllnadsfärg</div>\n              <ColorPicker\n                color={this.state.squareFillColor}\n                onChange={this.update(\"squareFillColor\")}\n              />\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Opacitet</InputLabel>\n              <NativeSelect\n                value={this.state.squareFillOpacity}\n                onChange={this.update(\"squareFillOpacity\")}\n              >\n                <option value=\"0\">0% (genomskinlig)</option>\n                <option value=\"0.25\">25%</option>\n                <option value=\"0.5\">50%</option>\n                <option value=\"0.75\">75%</option>\n                <option value=\"1\">100% (fylld)</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Linjetjocklek</InputLabel>\n              <NativeSelect\n                value={this.state.squareLineWidth}\n                onChange={this.update(\"squareLineWidth\")}\n              >\n                <option value=\"1\">Tunn</option>\n                <option value=\"3\">Normal</option>\n                <option value=\"5\">Tjock</option>\n                <option value=\"8\">Tjockare</option>\n              </NativeSelect>\n            </StyledFormControl>\n            <StyledFormControl>\n              <InputLabel variant=\"standard\">Linjestil</InputLabel>\n              <NativeSelect\n                value={this.state.squareLineStyle}\n                onChange={this.update(\"squareLineStyle\")}\n              >\n                <option value=\"solid\">Heldragen</option>\n                <option value=\"dash\">Streckad</option>\n                <option value=\"dot\">Punktad</option>\n              </NativeSelect>\n            </StyledFormControl>\n          </div>\n        );\n      default:\n        return <div />;\n    }\n  }\n}\n\nexport default Symbology;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"\n}), 'FolderOpen');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67 2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\", \"classes\", \"IconComponent\", \"input\", \"inputProps\", \"variant\"],\n  _excluded2 = [\"root\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport NativeSelectInput from './NativeSelectInput';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport Input from '../Input';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getNativeSelectUtilityClasses } from './nativeSelectClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n  const {\n      className,\n      children,\n      classes: classesProp = {},\n      IconComponent = ArrowDropDownIcon,\n      input = defaultInput,\n      inputProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  const ownerState = _extends({}, props, {\n    classes: classesProp\n  });\n  const classes = useUtilityClasses(ownerState);\n  const otherClasses = _objectWithoutPropertiesLoose(classesProp, _excluded2);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(input, _extends({\n      // Most of the logic is implemented in `NativeSelectInput`.\n      // The `Select` component is a simple API wrapper to expose something better to play with.\n      inputComponent: NativeSelectInput,\n      inputProps: _extends({\n        children,\n        classes: otherClasses,\n        IconComponent,\n        variant: fcs.variant,\n        type: undefined\n      }, inputProps, input ? input.props.inputProps : {}),\n      ref\n    }, other, {\n      className: clsx(classes.root, input.props.className, className)\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;"],"names":["StyledFormControl","styled","FormControl","width","Row","theme","marginBottom","spacing","StyledDivider","Divider","marginTop","DrawView","React","constructor","props","super","state","shape","drawMethod","displayText","addMapDropListeners","mapDiv","document","getElementById","forEach","eventName","addEventListener","this","preventDefaultDropBehavior","handleDragEnter","handleDrop","e","snackbarKey","enqueueSnackbar","preventDuplicate","file","dataTransfer","files","fileType","type","name","split","pop","globalObserver","publish","hideOtherPlugins","addDroppedKmlToMap","error","variant","console","model","reader","FileReader","onload","import","result","handleImportError","closeSnackbar","readAsText","stopPropagation","preventDefault","handleChange","event","setState","target","value","setType","setDrawMethod","onAbortTextDialog","dialog","onCloseTextDialog","text","openDialog","feature","set","setStyle","getStyle","redraw","openUploadDialog","dialogPrompt","dialogHeaderText","dialogText","renderImport","dialogButtonText","dialogCloseCallback","onCloseUploadDialog","localObserver","subscribe","dialogAbortText","dialogAbortCallback","renderDialog","createPortal","options","prompt","headerText","buttonText","abortText","useLegacyNonMarkdownRenderer","open","onClose","onAbort","renderForm","htmlFor","onChange","input","id","sx","onClick","export","accept","multiple","color","render","clear","control","checked","label","withSnackbar","Symbology","update","prop","hex","Number","isNaN","parseFloat","parseInt","componentDidMount","fontSize","fontTextColor","fontBackColor","fontStroke","pointText","pointColor","pointRadius","lineColor","lineWidth","lineStyle","circleFillColor","circleLineColor","circleFillOpacity","circleLineStyle","circleLineWidth","circleRadius","polygonLineColor","polygonLineWidth","polygonLineStyle","polygonFillColor","polygonFillOpacity","squareFillColor","squareLineColor","squareFillOpacity","squareLineStyle","squareLineWidth","pointSettings","renderPointSettings","undefined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","_excluded2","defaultInput","_jsx","Input","NativeSelect","inProps","ref","useThemeProps","className","children","classes","classesProp","IconComponent","ArrowDropDownIcon","inputProps","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","ownerState","composeClasses","root","getNativeSelectUtilityClasses","useUtilityClasses","_extends","otherClasses","inputComponent","NativeSelectInput","clsx","muiName"],"sourceRoot":""}