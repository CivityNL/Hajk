{"version":3,"file":"static/js/3833.88960c8a.chunk.js","mappings":"0RAiBA,MAAMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAa,MACxBE,QAAS,OACTC,SAAU,WAGNC,GAAoBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,EAAoB,QAAC,MAAEM,GAAH,QAAgB,CAC5DC,OAAQD,EAAME,QAAQ,GACtBC,MAAO,OAFqC,IAK9C,MAAMC,UAAuBC,EAAAA,cAAqB,cAAD,yBAC/CC,MAAQ,CACNC,SAAU,KACVC,gBAAgB,GAH6B,KAO/CC,uBAAyB,CACvB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WArB6C,KA4B/CC,wBAA2BC,IACzB,MAAM,aAAEC,GAAiBC,KAAKC,OACxB,MAAEC,GAAUJ,EAAEK,OAGV,iBAAVD,EACIH,EAAaD,GACbE,KAAKI,SAAS,CAAET,gBAAgB,GAFpC,EAjC6C,KAyC/CU,8BAAgC,KAC9B,MAAM,aAAEN,EAAF,OAAgBO,EAAhB,MAAwBC,GAAUP,KAAKC,MAM7CF,EAAa,CAAEI,OAAQ,CAAEK,KAAM,QAASN,MAJbI,EAAOG,QAAO,CAACC,EAAMC,IAC9CC,KAAKC,IAAIF,EAAOJ,GAASK,KAAKC,IAAIH,EAAOH,GAASI,EAAOD,OAK3DV,KAAKI,SAAS,CAAET,gBAAgB,GAAhC,EAlD6C,KAqD/CmB,wBAA0B,KACxB,MAAM,OAAEC,EAAF,aAAUhB,GAAiBC,KAAKC,MACtC,OACE,SAAC,IAAD,CACEe,QAAQ,WACRd,MAAOa,EACPE,SAAUlB,EACVmB,WAAY,CACVV,KAAM,SACNW,GAAI,UANR,SASGnB,KAAKC,MAAMmB,QAAQC,aAAaC,KAAI,CAACpB,EAAOqB,KAEzC,SAAC,IAAD,CAAuCrB,MAAOA,EAA9C,SACGA,EAAMsB,eADM,eAAiBD,MAZxC,EAvD6C,KA4E/CE,wBAA0B,KACxB,MAAM,UAAEC,EAAF,aAAa3B,GAAiBC,KAAKC,MACzC,OACE,UAAC,IAAD,CACEe,QAAQ,WACRd,MAAOwB,EACPT,SAAUlB,EACVmB,WAAY,CACVV,KAAM,YACNW,GAAI,aANR,WASE,SAAC,IAAD,CAAUjB,OAAO,EAAjB,iBACA,SAAC,IAAD,CAAUA,OAAO,EAAjB,mBAXJ,EA9E6C,KA8F/CyB,gCAAkC,KAChC,MAAM,UAAED,EAAF,qBAAaE,EAAb,aAAmC7B,GAAiBC,KAAKC,MAC/D,OACE,UAAC,IAAD,CACEe,QAAQ,WACRd,MAAO0B,EACPX,SAAUlB,EACV8B,UAAWH,EACXR,WAAY,CACVV,KAAM,uBACNW,GAAI,wBAPR,WAUE,SAAC,IAAD,CAAUjB,OAAO,EAAjB,iBACA,SAAC,IAAD,CAAUA,OAAO,EAAjB,mBAZJ,EAhG6C,KAiH/C4B,0BAA4B,KAC1B,MAAM,YAAEC,EAAF,aAAehC,GAAiBC,KAAKC,MAC3C,OACE,UAAC,IAAD,CACEe,QAAQ,WACRd,MAAO6B,EACPd,SAAUlB,EACVmB,WAAY,CACVV,KAAM,cACNW,GAAI,eANR,WASE,SAAC,IAAD,CAAUjB,MAAO,YAAjB,sBACA,SAAC,IAAD,CAAUA,MAAO,WAAjB,sBAXJ,EAnH6C,KAmI/C8B,oBAAsB,KACpB,MAAM,MAAEC,EAAF,OAAS3B,EAAT,MAAiBC,GAAUP,KAAKC,MAMhCiC,EAAuB,IACxB5B,EAAOgB,KAAKa,IACN,CAAEjC,MAAOiC,EAAGC,MAAOH,EAAMI,qBAAqBF,OAEvD,CAAEjC,MAAO,eAAgBkC,MAAO,8BAElC,OACE,SAAC,IAAD,CACEpB,QAAQ,WACRd,MAAOK,EACPU,SAAUjB,KAAKH,wBACfqB,WAAY,CACVV,KAAM,QACNW,GAAI,SANR,SASGe,EAAqBZ,KAAI,CAACf,EAAO+B,KAG9B,SAAC,IAAD,CAAkBpC,MAAOK,EAAML,MAA/B,SACGK,EAAM6B,OADME,MAbvB,EAhJ6C,KAsK/CC,iBAAmB,KAEf,SAAC,IAAD,CACErC,MAAOF,KAAKC,MAAMM,MAClBiC,KAAK,SACLC,gBAAgB,SAAC,IAAD,CAAgBC,SAAS,QAAzB,gBAChBC,cACE,SAAC,IAAD,CAAgBD,SAAS,MAAzB,UACE,SAAC,IAAD,CAASE,MAAM,4BAAf,UACE,SAAC,IAAD,CACE,aAAW,+BACXC,QAAS7C,KAAKK,8BAFhB,UAIE,SAAC,IAAD,UAKRa,WAAY,CACVV,KAAM,QACNW,GAAI,SAENF,SAAUjB,KAAKC,MAAMF,eA5LoB,KAiM/C+C,yBAA2B,KACzB,MAAM,WAAEC,EAAF,aAAchD,GAAiBC,KAAKC,MAC1C,OACE,UAAC,IAAD,CACEe,QAAQ,WACRd,MAAO6C,EACP9B,SAAUlB,EACVmB,WAAY,CACVV,KAAM,aACNW,GAAI,cANR,WASE,SAAC,IAAD,CAAUjB,MAAO,MAAjB,kBACA,SAAC,IAAD,CAAUA,MAAO,MAAjB,mBAXJ,CAnM6C,CAmN/C8C,SACE,MAAM,eAAEC,GAAmBjD,KAAKC,MAChC,OACE,+BACE,UAACrB,EAAD,YACE,UAACK,EAAD,YACE,SAAC,IAAD,CAAY+B,QAAQ,WAAWkC,QAAQ,SAAvC,qBAGClD,KAAKc,8BAER,UAAC7B,EAAD,YACE,SAAC,IAAD,CAAY+B,QAAQ,WAAWkC,QAAQ,YAAvC,4CAGClD,KAAKyB,8BAER,UAACxC,EAAD,YACE,SAAC,IAAD,CAAY+B,QAAQ,WAAWkC,QAAQ,YAAvC,4CAGClD,KAAK2B,sCAER,UAAC1C,EAAD,YACE,SAAC,IAAD,CAAY+B,QAAQ,WAAWkC,QAAQ,cAAvC,wBAGClD,KAAK8B,gCAER,UAAC7C,EAAD,CAAmBkE,OAAQF,EAA3B,WACE,SAAC,IAAD,CAAYjC,QAAQ,WAAWkC,QAAQ,QAAvC,oBAGClD,KAAKP,MAAME,eACRK,KAAKuC,mBACLvC,KAAKgC,uBACPiB,IACA,SAAC,IAAD,4HAMJ,UAAChE,EAAD,YACE,SAAC,IAAD,CAAY+B,QAAQ,WAAWkC,QAAQ,aAAvC,yBAGClD,KAAK8C,kCAKf,EAGH,WAAeM,EAAAA,EAAAA,IAAa7D,E,sBCnSxB8D,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+IACD,sBACJN,EAAQ,EAAUG,C,2KCVX,SAASI,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,EAClD,CAED,ICJIE,EDIJ,GAD8BC,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,sBCF5L,MAAMC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAkC5GC,GAAqBvF,EAAAA,EAAAA,IAAO,MAAO,CACvC2B,KAAM,oBACNuD,KAAM,OACNM,kBAvBwB,CAACpE,EAAOqE,KAChC,MAAM,WACJC,GACEtE,EACJ,MAAO,CAACqE,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWF,EAAW7B,aAAkD,IAApC6B,EAAWG,sBAAiCJ,EAAOI,qBAAsBJ,EAAOC,EAAWvD,SAAtK,GAgByBnC,EAIxB,QAAC,MACFM,EADE,WAEFoF,GAFC,SAGGI,EAAAA,EAAAA,GAAS,CACb5F,QAAS,OACT6F,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZC,OAAQ7F,EAAM8F,MAAQ9F,GAAO+F,QAAQC,OAAOC,QACpB,WAAvBb,EAAWvD,SAAwB,CAEpC,CAAC,KAAD,OAAMqE,EAAAA,cAAN,kBAAmDA,EAAAA,YAAnD,MAA0F,CACxFC,UAAW,KAEY,UAAxBf,EAAW7B,UAAwB,CAEpC6C,YAAa,GACY,QAAxBhB,EAAW7B,UAAsB,CAElC8C,WAAY,IACyB,IAApCjB,EAAWG,sBAAiC,CAE7Ce,cAAe,QAxBd,IAiIH,MAvGoCjG,EAAAA,YAAiB,SAAwBkG,EAASC,GACpF,MAAM1F,GAAQ2F,EAAAA,EAAAA,GAAc,CAC1B3F,MAAOyF,EACPlF,KAAM,uBAEF,SACFqF,EADE,UAEFC,EAFE,UAGFC,EAAY,MAHV,qBAIFrB,GAAuB,EAJrB,kBAKFsB,GAAoB,EALlB,SAMFtD,EACA1B,QAASiF,GACPhG,EACJiG,GAAQC,EAAAA,EAAAA,GAA8BlG,EAAOkE,GACzCiC,GAAiBC,EAAAA,EAAAA,MAAoB,CAAC,EAC5C,IAAIrF,EAAUiF,EACVA,GAAeG,EAAepF,QAO9BoF,IAAmBpF,IACrBA,EAAUoF,EAAepF,SAE3B,MAAMuD,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAG1E,EAAO,CACrCqG,YAAaF,EAAeE,YAC5BC,KAAMH,EAAeG,KACrB7B,uBACAhC,WACA1B,YAEIwF,EA9EkBjC,KACxB,MAAM,QACJiC,EADI,qBAEJ9B,EAFI,YAGJ4B,EAHI,SAIJ5D,EAJI,KAKJ6D,EALI,QAMJvF,GACEuD,EACEkC,EAAQ,CACZjC,KAAM,CAAC,OAAQE,GAAwB,uBAAwBhC,GAAY,WAAJ,QAAe+B,EAAAA,EAAAA,GAAW/B,IAAa1B,EAASsF,GAAe,cAAeC,GAAQ,OAAJ,QAAW9B,EAAAA,EAAAA,GAAW8B,MAEjL,OAAOG,EAAAA,EAAAA,GAAeD,EAAO3C,EAA+B0C,EAA5D,EAkEgBG,CAAkBpC,GAClC,OAAoBqC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,SAA6B,CACpD3G,MAAO,KACP2F,UAAuBe,EAAAA,EAAAA,KAAKxC,GAAoBO,EAAAA,EAAAA,GAAS,CACvDmC,GAAIf,EACJxB,WAAYA,EACZuB,WAAWiB,EAAAA,EAAAA,SAAKP,EAAQhC,KAAMsB,GAC9BH,IAAKA,GACJO,EAAO,CACRL,SAA8B,kBAAbA,GAA0BG,GAGzBgB,EAAAA,EAAAA,MAAMxH,EAAAA,SAAgB,CACtCqG,SAAU,CAAc,UAAbnD,EAA0GuB,IAAUA,GAAqB2C,EAAAA,EAAAA,KAAK,OAAQ,CAC/Jd,UAAW,cACXD,SAAU,YACN,KAAMA,MAP8De,EAAAA,EAAAA,KAAKK,EAAAA,EAAY,CAC3FjC,MAAO,iBACPa,SAAUA,QASjB,G","sources":["plugins/Print/GeneralOptions.js","../node_modules/@mui/icons-material/FormatListNumbered.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Input,\n  Tooltip,\n} from \"@mui/material\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n}));\n\nclass GeneralOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n    useCustomScale: false,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  // Handles interaction with the scale-selector. We cannot let the\n  // parent handler (handleChange) take care of this on its own since\n  // we have an extra vale (\"CUSTOM_SCALE\") that should not affect the selected\n  // scale, but instead update the state so that a scale-input is shown.\n  handleScaleSelectChange = (e) => {\n    const { handleChange } = this.props;\n    const { value } = e.target;\n    // If we're not dealing with a custom scale, just update the scale, otherwise\n    // update the local state so that the user can set a custom scale.\n    value !== \"CUSTOM_SCALE\"\n      ? handleChange(e)\n      : this.setState({ useCustomScale: true });\n  };\n\n  // Handles when the custom scale input is to be hidden, and the scale-selector\n  // is to be shown. We have to make sure to update the scale to the option closest\n  // to the current value.\n  handleDisableCustomScaleInput = () => {\n    const { handleChange, scales, scale } = this.props;\n    // First we'll have to grab the closest scale option\n    const closestScaleOption = scales.reduce((prev, curr) =>\n      Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev\n    );\n    // Then we'll update the scale to that value\n    handleChange({ target: { name: \"scale\", value: closestScaleOption } });\n    // And then we'll toggle the scale-input.\n    this.setState({ useCustomScale: false });\n  };\n\n  renderPaperSizeSelector = () => {\n    const { format, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={format}\n        onChange={handleChange}\n        inputProps={{\n          name: \"format\",\n          id: \"format\",\n        }}\n      >\n        {this.props.options.paperFormats.map((value, index) => {\n          return (\n            <MenuItem key={\"paperFormat_\" + index} value={value}>\n              {value.toUpperCase()}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderUseMarginSelector = () => {\n    const { useMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useMargin}\n        onChange={handleChange}\n        inputProps={{\n          name: \"useMargin\",\n          id: \"useMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nee</MenuItem>\n      </Select>\n    );\n  };\n\n  renderTextIconInMarginsSelector = () => {\n    const { useMargin, useTextIconsInMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useTextIconsInMargin}\n        onChange={handleChange}\n        disabled={!useMargin}\n        inputProps={{\n          name: \"useTextIconsInMargin\",\n          id: \"useTextIconsInMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nee</MenuItem>\n      </Select>\n    );\n  };\n\n  renderOrientationSelector = () => {\n    const { orientation, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={orientation}\n        onChange={handleChange}\n        inputProps={{\n          name: \"orientation\",\n          id: \"orientation\",\n        }}\n      >\n        <MenuItem value={\"landscape\"}>Liggend</MenuItem>\n        <MenuItem value={\"portrait\"}>Staand</MenuItem>\n      </Select>\n    );\n  };\n\n  renderScaleSelector = () => {\n    const { model, scales, scale } = this.props;\n    // We're gonna have to create a new array with an object for each scale-value.\n    // The objects contain the actual scale-value, along with a user-friendly label.\n    // For example, scale: 1000, label: 1:1 000\n    // We also add the extra option (\"CUSTOM_SCALE\"), allowing the user to select a\n    // a custom scale value.\n    const scaleSelectorOptions = [\n      ...scales.map((s) => {\n        return { value: s, label: model.getUserFriendlyScale(s) };\n      }),\n      { value: \"CUSTOM_SCALE\", label: \"Voer een andere schaal in\" },\n    ];\n    return (\n      <Select\n        variant=\"standard\"\n        value={scale}\n        onChange={this.handleScaleSelectChange}\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n      >\n        {scaleSelectorOptions.map((scale, i) => {\n          // Note: it is crucial to keep the scale value (in state) divided by 1000 from what is shown to user!\n          return (\n            <MenuItem key={i} value={scale.value}>\n              {scale.label}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderScaleInput = () => {\n    return (\n      <Input\n        value={this.props.scale}\n        type=\"number\"\n        startAdornment={<InputAdornment position=\"start\">1:</InputAdornment>}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <Tooltip title=\"Visa fördefinerade val\">\n              <IconButton\n                aria-label=\"toggle custom scale selector\"\n                onClick={this.handleDisableCustomScaleInput}\n              >\n                <FormatListNumberedIcon />\n              </IconButton>\n            </Tooltip>\n          </InputAdornment>\n        }\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n        onChange={this.props.handleChange}\n      />\n    );\n  };\n\n  renderSaveAsTypeSelector = () => {\n    const { saveAsType, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={saveAsType}\n        onChange={handleChange}\n        inputProps={{\n          name: \"saveAsType\",\n          id: \"saveAsType\",\n        }}\n      >\n        <MenuItem value={\"PDF\"}>PDF</MenuItem>\n        <MenuItem value={\"PNG\"}>PNG</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    const { printOptionsOk } = this.props;\n    return (\n      <>\n        <Root>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"format\">\n              Formaat\n            </InputLabel>\n            {this.renderPaperSizeSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Kantlijnen rond het kaartbeeld\n            </InputLabel>\n            {this.renderUseMarginSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Titeltekst enz. in de kantlijn\n            </InputLabel>\n            {this.renderTextIconInMarginsSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"orientation\">\n              Orientatie\n            </InputLabel>\n            {this.renderOrientationSelector()}\n          </StyledFormControl>\n          <StyledFormControl error={!printOptionsOk}>\n            <InputLabel variant=\"standard\" htmlFor=\"scale\">\n              Schaal\n            </InputLabel>\n            {this.state.useCustomScale\n              ? this.renderScaleInput()\n              : this.renderScaleSelector()}\n            {!printOptionsOk && (\n              <FormHelperText>\n                De afbeelding wordt niet correct afgedrukt. Probeer het eens met\n                een lagere resolutie of kleinere schaal.\n              </FormHelperText>\n            )}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"saveAsType\">\n              Opslaan als\n            </InputLabel>\n            {this.renderSaveAsTypeSelector()}\n          </StyledFormControl>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(GeneralOptions);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"\n}), 'FormatListNumbered');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["Root","styled","Grid","display","flexWrap","StyledFormControl","FormControl","theme","margin","spacing","width","GeneralOptions","React","state","anchorEl","useCustomScale","mapTextAvailableColors","handleScaleSelectChange","e","handleChange","this","props","value","target","setState","handleDisableCustomScaleInput","scales","scale","name","reduce","prev","curr","Math","abs","renderPaperSizeSelector","format","variant","onChange","inputProps","id","options","paperFormats","map","index","toUpperCase","renderUseMarginSelector","useMargin","renderTextIconInMarginsSelector","useTextIconsInMargin","disabled","renderOrientationSelector","orientation","renderScaleSelector","model","scaleSelectorOptions","s","label","getUserFriendlyScale","i","renderScaleInput","type","startAdornment","position","endAdornment","title","onClick","renderSaveAsTypeSelector","saveAsType","render","printOptionsOk","htmlFor","error","withSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","_extends","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}