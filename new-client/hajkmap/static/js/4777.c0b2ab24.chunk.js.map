{"version":3,"file":"static/js/4777.c0b2ab24.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/documentWindow/TextArea.js","plugins/DocumentHandler/utils/ContentComponentFactory.js"],"sourcesContent":["import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\n\nconst GridContainer = styled(Grid)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst GridContainerContent = styled(Grid)(({ theme }) => ({\n  //Need to manually change color when switching between dark/light-mode\n  backgroundColor:\n    theme.palette.mode === \"dark\"\n      ? theme.palette.grey[700]\n      : theme.palette.grey[200],\n}));\n\nconst GridTypographyContainer = styled(Grid)(({ theme }) => ({\n  padding: theme.spacing(1),\n}));\n\nconst StyledDivider = styled(Divider)(({ theme }) => ({\n  //Need to manually change color when switching between dark/light-mode\n  backgroundColor:\n    theme.palette.mode === \"dark\"\n      ? theme.palette.grey[200]\n      : theme.palette.grey[400],\n  height: \"2px\",\n}));\n\nclass TextArea extends React.PureComponent {\n  render() {\n    const { backgroundColor, dividerColor, textAreaContentArray } = this.props;\n\n    return (\n      <GridContainer id=\"text-area-content\" justifyContent=\"center\" container>\n        <GridContainerContent\n          xs={12}\n          style={{ backgroundColor: backgroundColor }}\n          item\n        >\n          <StyledDivider sx={{ backgroundColor: dividerColor }} />\n          <Grid justifyContent=\"center\" container>\n            <GridTypographyContainer component=\"blockquote\" xs={12} item>\n              {textAreaContentArray}\n            </GridTypographyContainer>\n          </Grid>\n          <StyledDivider sx={{ backgroundColor: dividerColor }} />\n        </GridContainerContent>\n      </GridContainer>\n    );\n  }\n}\n\nexport default TextArea;\n","import React, { useState } from \"react\";\nimport MapIcon from \"@mui/icons-material/Map\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport Box from \"@mui/material/Box\";\nimport TextArea from \"../documentWindow/TextArea\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  useTheme,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport {\n  Button,\n  Typography,\n  CardMedia,\n  List,\n  ListItem,\n  Grid,\n  Tooltip,\n} from \"@mui/material\";\n\nconst StyledAccordion = styled(Accordion)(\n  ({ backgroundcolor, dividercolor }) => ({\n    \"&:before\": {\n      backgroundColor: \"white\",\n    },\n    margin: \"0px 0px 10px 0px\",\n    borderRadius: \"5px\",\n    position: \"inherit\",\n    backgroundColor: backgroundcolor,\n    border: dividercolor && `solid 2px ${dividercolor}`,\n  })\n);\n\nconst StyledAccordionTypography = styled(Typography)({\n  marginBottom: \"0\",\n  fontSize: \"16px\",\n  whiteSpace: \"nowrap\",\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  maxWidth: \"100%\",\n  display: \"block\",\n});\n\nconst StyledAccordionButton = styled(Button)({\n  textAlign: \"inherit\",\n  padding: \"0\",\n  textTransform: \"inherit\",\n});\n\nconst StyledAccordionSummary = styled(AccordionSummary)(\n  ({ expanded, dividercolor }) => ({\n    width: \"100%\",\n    transition: \"opacity 0.2s ease-in-out\",\n    justifyContent: \"space-between\",\n    \"& .MuiAccordionSummary-content\": {\n      maxWidth: \"90%\",\n    },\n    opacity: expanded === \"true\" ? 0.6 : 1,\n    padding: dividercolor && \"0 15px\",\n  })\n);\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\n\n//Had to make some magic to be able to handle list in all different sizes.\n//Common problem to get second row indented in a good way and even more difficult\n//when you can change the font-size in theme.\nconst getIndentationValue = (fontSize, multiplier, negative) => {\n  let value = multiplier * fontSize.substring(0, fontSize.length - 3);\n  return negative ? `${value * -1}rem` : `${value}rem`;\n};\n\nconst renderChild = (child) => {\n  if (child.nodeType === TEXT_NODE) {\n    return child.data;\n  }\n\n  if (child.nodeType === ELEMENT_NODE) {\n    // Don't assume that callback exits\n    if (typeof child.callback === \"function\") {\n      return child.callback(child);\n    } else {\n      // If there's no callback, warn and render just\n      // the inner text portion of Element\n      console.warn(\n        \"Unsupported DOMElement encountered. Rendering only innerText\",\n        child\n      );\n      return child.innerText;\n    }\n  }\n};\n\nconst getFormattedComponentFromTag = (tag) => {\n  const childNodes = [...tag.childNodes];\n  return childNodes.map((child, index) => {\n    return <React.Fragment key={index}>{renderChild(child)}</React.Fragment>;\n  });\n};\n\nexport const Paragraph = ({ pTag }) => {\n  return (\n    <Typography variant=\"body1\">\n      {getFormattedComponentFromTag(pTag)}\n    </Typography>\n  );\n};\n\nconst ListUlList = styled(List)(({ theme }) => ({\n  listStyle: \"initial\",\n  listStylePosition: \"inside\",\n  overflowWrap: \"break-word\",\n  wordBreak: \"break-word\",\n  marginBottom: theme.spacing(1),\n  padding: theme.spacing(0),\n  paddingLeft: getIndentationValue(theme.typography.body1.fontSize, 1.375),\n  textIndent: getIndentationValue(theme.typography.body1.fontSize, 1.375, true),\n}));\n\nconst ListItemOlListItem = styled(ListItem)(({ theme }) => ({\n  padding: theme.spacing(0),\n}));\n\nconst TypographyOlListItem = styled(Typography)(({ theme }) => ({\n  padding: theme.spacing(0),\n}));\n\nconst ListOlList = styled(List)(({ theme }) => ({\n  padding: theme.spacing(0),\n  marginBottom: theme.spacing(1),\n}));\n\nconst TypographyHeading = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst TypographyImageText = styled(Typography)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst BoxImageInformationWrapper = styled(Box)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  maxWidth: \"100%\",\n}));\n\nexport const ULComponent = ({ ulComponent }) => {\n  let children = [...ulComponent.children];\n  return (\n    <ListUlList component=\"ul\">\n      {children.map((listItem, index) => {\n        return (\n          <Typography key={index} component=\"li\" variant=\"body1\">\n            {getFormattedComponentFromTag(listItem)}{\" \"}\n          </Typography>\n        );\n      })}\n    </ListUlList>\n  );\n};\n\nexport const OLComponent = ({ olComponent }) => {\n  let children = [...olComponent.children];\n  return (\n    <ListOlList component=\"ol\">\n      {children.map((listItem, index) => {\n        return (\n          <ListItemOlListItem disableGutters key={index}>\n            <Grid wrap=\"nowrap\" container>\n              <Grid\n                item\n                sx={{\n                  marginRight: (theme) =>\n                    getIndentationValue(\n                      theme.typography.body1.fontSize,\n                      index < 9 ? 1 : 0.5\n                    ),\n                  padding: 0,\n                  marginBottom: index < 9 ? 1 : \"inherit\",\n                }}\n              >\n                <Typography variant=\"body1\">{`${index + 1}.`}</Typography>\n              </Grid>\n              <Grid item>\n                <TypographyOlListItem variant=\"body1\">\n                  {getFormattedComponentFromTag(listItem)}\n                </TypographyOlListItem>\n              </Grid>\n            </Grid>\n          </ListItemOlListItem>\n        );\n      })}\n    </ListOlList>\n  );\n};\n\nexport const Heading = ({ headingTag }) => {\n  return (\n    <TypographyHeading variant={headingTag.tagName.toLowerCase()}>\n      {getFormattedComponentFromTag(headingTag)}\n    </TypographyHeading>\n  );\n};\n\nconst getTextArea = (tag, defaultColors) => {\n  const children = [...tag.childNodes];\n  let textAreaContentArray = children.map((element, index) => {\n    return <React.Fragment key={index}>{renderChild(element)}</React.Fragment>;\n  });\n\n  const backgroundColor =\n    tag.attributes.getNamedItem(\"data-background-color\")?.value ||\n    defaultColors?.textAreaBackgroundColor;\n\n  const dividerColor =\n    tag.attributes.getNamedItem(\"data-divider-color\")?.value ||\n    defaultColors?.textAreaDividerColor;\n\n  return (\n    <TextArea\n      backgroundColor={backgroundColor}\n      dividerColor={dividerColor}\n      textAreaContentArray={textAreaContentArray}\n    />\n  );\n};\n\nexport const BlockQuote = ({ blockQuoteTag, defaultColors }) => {\n  // Grab the theme to determine current light/dark mode\n\n  const theme = useTheme();\n  if (blockQuoteTag.attributes.getNamedItem(\"data-text-section\")) {\n    return getTextArea(\n      blockQuoteTag,\n      theme.palette.mode === \"light\" && defaultColors, // Only supply defaultColors if we're in light mode\n      false\n    );\n  } else {\n    return null;\n  }\n};\n\nconst getMediaPositionStyle = (position) => {\n  switch (position) {\n    case \"right\":\n      return {\n        alignItems: \"flex-end\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      };\n    case \"floatRight\":\n      return {\n        float: \"right\",\n        marginLeft: 1,\n      };\n    case \"left\":\n      return {\n        alignItems: \"flex-start\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      };\n    case \"floatLeft\":\n      return {\n        float: \"left\",\n        marginRight: 1,\n      };\n    case \"center\":\n      return {\n        alignItems: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      };\n    default:\n      return {};\n  }\n};\n\nconst getAccordionTextArea = (tag, defaultColors, expanded, setExpanded) => {\n  const children = [...tag.childNodes];\n  let textAreaContentArray = children.map((element, index) => {\n    return <React.Fragment key={index}>{renderChild(element)}</React.Fragment>;\n  });\n\n  let title = tag.attributes[\"data-accordion-title\"];\n  title = title\n    ? tag.attributes[\"data-accordion-title\"].value\n    : (tag.innerText || tag.textContent).substring(0, 100);\n\n  const backgroundColor =\n    tag.attributes.getNamedItem(\"data-background-color\")?.value ||\n    defaultColors?.textAreaBackgroundColor;\n\n  const dividerColor =\n    tag.attributes.getNamedItem(\"data-divider-color\")?.value ||\n    defaultColors?.textAreaBackgroundColor;\n\n  return (\n    <StyledAccordion\n      className=\"blockQuoteAccordion\"\n      backgroundcolor={backgroundColor}\n      dividercolor={dividerColor}\n    >\n      <StyledAccordionButton color=\"inherit\" fullWidth>\n        <StyledAccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          expanded={expanded.toString()}\n          onClick={() => setExpanded(!expanded)}\n          dividercolor={dividerColor}\n        >\n          <StyledAccordionTypography variant=\"body1\">\n            {title}\n          </StyledAccordionTypography>\n        </StyledAccordionSummary>\n      </StyledAccordionButton>\n      <AccordionDetails>{textAreaContentArray}</AccordionDetails>\n    </StyledAccordion>\n  );\n};\n\nexport const AccordionSection = ({ blockQuoteTag, defaultColors }) => {\n  const theme = useTheme();\n  const [expanded, setExpanded] = useState(false);\n\n  return getAccordionTextArea(\n    blockQuoteTag,\n    theme.palette.mode === \"light\" && defaultColors,\n    expanded,\n    setExpanded\n  );\n};\n\nexport const Figure = ({ figureTag }) => {\n  const children = [...figureTag.children];\n  return children.map((element, index) => {\n    return (\n      <React.Fragment key={index}>{element.callback(element)}</React.Fragment>\n    );\n  });\n};\n\n/**\n * The render function for the img-tag.\n * @param {string} imgTag The img-tag.\n *\n * @memberof Contents\n */\nexport const Img = ({ imgTag, localObserver, componentId, baseUrl }) => {\n  const tagIsPresent = (imgTag, attribute) => {\n    return imgTag.attributes.getNamedItem(attribute) == null ? false : true;\n  };\n\n  const getImageStyle = (image) => {\n    if (image.height && image.width) {\n      return {\n        objectFit: \"contain\",\n        objectPosition: \"left\",\n        ...(image.popup && { marginBottom: 1, cursor: \"pointer\" }),\n      };\n    } else {\n      return {\n        objectFit: \"contain\",\n        objectPosition: \"left\",\n        marginTop: 1,\n        width: \"100%\",\n        ...(image.popup && { marginBottom: 1, cursor: \"pointer\" }),\n      };\n    }\n  };\n\n  const getImageDescription = (image) => {\n    return (\n      <BoxImageInformationWrapper sx={{ width: image.width }}>\n        {image.caption && (\n          <Typography id={`image_${image.captionId}`} variant=\"subtitle2\">\n            {image.caption}\n          </Typography>\n        )}\n        {image.source && (\n          <TypographyImageText\n            id={`image_${image.sourceId}`}\n            variant=\"subtitle2\"\n          >\n            {image.source}\n          </TypographyImageText>\n        )}\n      </BoxImageInformationWrapper>\n    );\n  };\n\n  const image = {\n    caption: imgTag.attributes.getNamedItem(\"data-caption\")?.value,\n    popup: tagIsPresent(imgTag, \"data-image-popup\"),\n    source: imgTag.attributes.getNamedItem(\"data-source\")?.value,\n    url: imgTag.attributes.getNamedItem(\"src\")?.value,\n    altValue: imgTag.attributes.getNamedItem(\"alt\")?.value,\n    height: imgTag.attributes.getNamedItem(\"data-image-height\")?.value,\n    width: imgTag.attributes.getNamedItem(\"data-image-width\")?.value,\n    position: imgTag.attributes.getNamedItem(\"data-image-position\")?.value,\n    id: `image_${componentId}`,\n    captionId: `imagecaption_${componentId}`,\n    sourceId: `imagesource_${componentId}`,\n  };\n\n  let onClickCallback = image.popup\n    ? () => {\n        localObserver.publish(\"image-popup\", image);\n      }\n    : null;\n\n  const getDescribedByAttribute = () => {\n    let describedBy = [];\n    if (image.caption) {\n      describedBy.push(`${image.captionId}`);\n    }\n    if (image.source) {\n      describedBy.push(`${image.sourceId}`);\n    }\n    return describedBy.length > 0 ? describedBy.join(\" \") : null;\n  };\n\n  let imgUrl = image.url;\n  if (imgUrl.includes(\"../\")) {\n    imgUrl = image.url.replace(\"../\", baseUrl);\n  }\n\n  return (\n    <Box\n      key={`${image.id}`}\n      data-position={image.position}\n      sx={getMediaPositionStyle(image.position)}\n    >\n      <CardMedia\n        onClick={onClickCallback}\n        alt={image.altValue || \"\"}\n        aria-describedby={getDescribedByAttribute()}\n        component=\"img\"\n        image={imgUrl}\n        sx={{\n          ...getImageStyle(image),\n          ...(image.height &&\n            image.width && {\n              height: image.height,\n              width: image.width,\n            }),\n          \".MuiCardMedia-media\": {\n            width: \"auto\",\n            maxWidth: \"100%\",\n          },\n        }}\n      />\n      {getImageDescription(image)}\n    </Box>\n  );\n};\n\n/**\n * The render function for the video-tag as an img-tag.\n * @param {object} imgTag The video-tag as an img-tag.\n * @returns React.Fragment\n */\nexport const Video = ({ imgTag, componentId, baseUrl }) => {\n  const videoAttributes = {\n    caption: imgTag.dataset.caption,\n    height: imgTag.dataset.imageHeight,\n    width: imgTag.dataset.imageWidth,\n    position: imgTag.dataset.imagePosition,\n    source: imgTag.dataset.source,\n    url: imgTag.src,\n    id: `video_${componentId}`,\n  };\n\n  const getVideoDescription = (videoAttributes) => {\n    return (\n      <Box\n        sx={{\n          width: videoAttributes.width,\n          marginBottom: 1,\n          maxWidth: \"100%\",\n        }}\n      >\n        {videoAttributes.caption && (\n          <Typography\n            id={`video_${videoAttributes.captionId}`}\n            variant=\"subtitle2\"\n          >\n            {videoAttributes.caption}\n          </Typography>\n        )}\n        {videoAttributes.source && (\n          <Typography\n            id={`video_${videoAttributes.sourceId}`}\n            variant=\"subtitle2\"\n            sx={{ marginBottom: 1 }}\n          >\n            {videoAttributes.source}\n          </Typography>\n        )}\n      </Box>\n    );\n  };\n\n  let videoUrl = videoAttributes.url;\n  if (videoUrl.includes(\"../\")) {\n    videoUrl = videoAttributes.url.replace(\"../\", baseUrl);\n  }\n\n  return (\n    <React.Fragment key={videoAttributes.id}>\n      <Box sx={getMediaPositionStyle(videoAttributes.position)}>\n        <video\n          height={videoAttributes.height}\n          width={videoAttributes.width}\n          controls={\"controls\"}\n        >\n          <source src={videoUrl} type=\"video/mp4\"></source>\n        </video>\n        {getVideoDescription(videoAttributes)}\n      </Box>\n    </React.Fragment>\n  );\n};\n\n/**\n * The render function for the audio-tag as an img-tag.\n * @param {object} imgTag The audio-tag as an img-tag.\n * @returns React.Fragment\n */\nexport const Audio = ({ imgTag, componentId, baseUrl }) => {\n  const audioAttributes = {\n    caption: imgTag.attributes.getNamedItem(\"data-caption\")?.value,\n    position: imgTag.attributes.getNamedItem(\"data-image-position\")?.value,\n    source: imgTag.attributes.getNamedItem(\"data-source\")?.value,\n    url: imgTag.attributes.getNamedItem(\"src\")?.value,\n    width: imgTag.attributes.getNamedItem(\"data-image-width\")?.value,\n    id: `audio_${componentId}`,\n  };\n\n  const getAudioDescription = (audioAttributes) => {\n    return (\n      <Box\n        sx={{\n          width: audioAttributes.width,\n          marginBottom: 1,\n          maxWidth: \"100%\",\n        }}\n      >\n        {audioAttributes.caption && (\n          <Typography\n            id={`video_${audioAttributes.captionId}`}\n            variant=\"subtitle2\"\n          >\n            {audioAttributes.caption}\n          </Typography>\n        )}\n        {audioAttributes.source && (\n          <Typography\n            id={`video_${audioAttributes.sourceId}`}\n            variant=\"subtitle2\"\n            sx={{ marginBottom: 1 }}\n          >\n            {audioAttributes.source}\n          </Typography>\n        )}\n      </Box>\n    );\n  };\n\n  let audioUrl = audioAttributes.url;\n  if (audioUrl.includes(\"../\")) {\n    audioUrl = audioAttributes.url.replace(\"../\", baseUrl);\n  }\n\n  return (\n    <Box\n      key={audioAttributes.id}\n      sx={this.getMediaPositionStyle(audioAttributes.position)}\n    >\n      <audio controls={\"controls\"}>\n        <source src={imgTag.src} type=\"audio/mpeg\"></source>\n      </audio>\n      {getAudioDescription(audioAttributes)}\n    </Box>\n  );\n};\n\n/**\n * The render function for the source-tag.\n * @param {object} sourceTag The source-tag.\n * @returns React.Fragment\n */\nexport const Source = ({ sourceTag }) => {\n  const children = [...sourceTag.childNodes];\n  const src = sourceTag.src;\n  const type = sourceTag.type;\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <source src={src} type={type}></source>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <source src={src} type={type}></source>\n    </React.Fragment>,\n  ];\n};\n\nexport const Strong = ({ strongTag }) => {\n  const children = [...strongTag.childNodes];\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <strong key={index}>{renderChild(child)}</strong>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <strong>{strongTag.textContent}</strong>\n    </React.Fragment>,\n  ];\n};\n\nexport const Underline = ({ uTag }) => {\n  const children = [...uTag.childNodes];\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <u>{renderChild(child)}</u>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <u>{uTag.textContent}</u>\n    </React.Fragment>,\n  ];\n};\nexport const Italic = ({ emTag }) => {\n  const children = [...emTag.childNodes];\n  let array = [];\n  if (children.length > 0) {\n    children.forEach((child, index) => {\n      array.push(\n        <React.Fragment key={index}>\n          <em>{renderChild(child)}</em>\n        </React.Fragment>\n      );\n    });\n    return array;\n  }\n  return [\n    <React.Fragment key={0}>\n      <em>{emTag.textContent}</em>\n    </React.Fragment>,\n  ];\n};\n\n/**\n * The render function for the br-tag.\n * @param {string} brTag The br-tag.\n *\n * @memberof htmlToMaterialUiParser\n */\nexport const LineBreak = () => {\n  return <br />;\n};\n\n/**\n * Callback used to render different link-components from a-elements\n * @param {Element} aTag a-element.\n * @returns {<Link>} Returns materialUI component <Link>\n *\n * @memberof Contents\n */\nexport const CustomLink = ({ aTag, localObserver, bottomMargin }) => {\n  const getLinkDataPerType = (attributes) => {\n    const {\n      0: mapLink,\n      1: headerIdentifier,\n      2: documentLink,\n      3: externalLink,\n      4: hoverLink,\n    } = [\n      \"data-maplink\",\n      \"data-header-identifier\",\n      \"data-document\",\n      \"data-link\",\n      \"data-hover\",\n    ].map((attributeKey) => {\n      return attributes.getNamedItem(attributeKey)?.value;\n    });\n\n    return { mapLink, headerIdentifier, documentLink, externalLink, hoverLink };\n  };\n\n  const getHoverLink = (hoverLink, tagText) => {\n    return (\n      <Tooltip title={hoverLink}>\n        <abbr\n          style={{\n            cursor: \"text\",\n            textDecoration: \"underline dotted\",\n          }}\n        >\n          {tagText}\n        </abbr>\n      </Tooltip>\n    );\n  };\n\n  const getExternalLink = (externalLink) => {\n    return (\n      <Button\n        startIcon={\n          <OpenInNewIcon\n            sx={{\n              verticalAlign: \"middle\",\n            }}\n          />\n        }\n        sx={{\n          padding: 0,\n          color: \"info.main\",\n          \".MuiButton-startIcon\": {\n            marginLeft: 0,\n          },\n          ...(bottomMargin && { marginBottom: 1 }),\n        }}\n        target=\"_blank\"\n        component=\"a\"\n        key=\"external-link\"\n        href={externalLink}\n      >\n        <Box component=\"span\">{getFormattedComponentFromTag(aTag)}</Box>\n      </Button>\n    );\n  };\n\n  const getMapLink = (aTag, mapLinkOrg) => {\n    // Attempt to safely URI Decode the supplied string. If\n    // it fails, use it as-is.\n    // The reason we want probably want to decode is that the\n    // link is created using the Anchor plugin, which encodes\n    // the query string properly, see #831 and #838.\n    let mapLink = null;\n    try {\n      mapLink = decodeURIComponent(mapLinkOrg);\n    } catch (error) {\n      mapLink = mapLinkOrg;\n    }\n\n    return (\n      <Button\n        startIcon={\n          <MapIcon\n            sx={{\n              verticalAlign: \"middle\",\n            }}\n          />\n        }\n        sx={{\n          padding: 0,\n          color: \"info.main\",\n          ...(bottomMargin && { marginBottom: 1 }),\n          \".MuiButton-startIcon\": {\n            marginLeft: 0,\n          },\n        }}\n        target=\"_blank\"\n        href={externalLink}\n        key=\"map-link\"\n        component=\"button\"\n        onClick={() => {\n          localObserver.publish(\"document-maplink-clicked\", mapLink);\n        }}\n      >\n        <Box component=\"span\">{getFormattedComponentFromTag(aTag)}</Box>\n      </Button>\n    );\n  };\n\n  const getDocumentLink = (headerIdentifier, documentLink, isPrintMode) => {\n    return (\n      <Button\n        startIcon={\n          <DescriptionIcon\n            sx={{\n              verticalAlign: \"middle\",\n            }}\n          />\n        }\n        sx={{\n          padding: 0,\n          color: \"info.main\",\n          \".MuiButton-startIcon\": {\n            marginLeft: 0,\n          },\n          ...(bottomMargin && { marginBottom: 1 }),\n        }}\n        key=\"document-link\"\n        component={isPrintMode ? \"span\" : \"a\"}\n        underline=\"hover\"\n        onClick={() => {\n          localObserver.publish(\"document-link-clicked\", {\n            documentName: documentLink,\n            headerIdentifier: headerIdentifier,\n          });\n        }}\n      >\n        <Box component=\"span\">{getFormattedComponentFromTag(aTag)}</Box>\n      </Button>\n    );\n  };\n\n  const { mapLink, headerIdentifier, documentLink, externalLink, hoverLink } =\n    getLinkDataPerType(aTag.attributes);\n\n  if (documentLink) {\n    const isPrintMode = Boolean(aTag.attributes.printMode);\n    return getDocumentLink(headerIdentifier, documentLink, isPrintMode);\n  }\n\n  if (mapLink) {\n    return getMapLink(aTag, mapLink, localObserver);\n  }\n\n  if (externalLink) {\n    return getExternalLink(externalLink);\n  }\n\n  if (hoverLink) {\n    const tagText = aTag.text;\n    return getHoverLink(hoverLink, tagText);\n  }\n\n  // If we got this far it seems that _we've been trying to parse an A tag that didn't\n  // have any of the data-* attributes_. One possible reason why this has happened is that\n  // some mobile browsers (iOS on Safari…) auto-creates A tags from number sequencies, as\n  // it thinks that the number is a phone number. We don't want this to happen, but we\n  // don't want to lose the number sequence either. So we must parse this auto-inserted\n  // A tag. See also #1098 for details.\n  if (aTag.href?.startsWith(\"tel:\")) {\n    return getFormattedComponentFromTag(aTag);\n  }\n\n  return null;\n};\n"],"names":["GridContainer","styled","Grid","theme","marginBottom","spacing","GridContainerContent","backgroundColor","palette","mode","grey","GridTypographyContainer","padding","StyledDivider","Divider","height","TextArea","React","render","dividerColor","textAreaContentArray","this","props","id","justifyContent","container","xs","style","item","sx","component","StyledAccordion","Accordion","backgroundcolor","dividercolor","margin","borderRadius","position","border","StyledAccordionTypography","Typography","fontSize","whiteSpace","overflow","textOverflow","maxWidth","display","StyledAccordionButton","Button","textAlign","textTransform","StyledAccordionSummary","AccordionSummary","expanded","width","transition","opacity","getIndentationValue","multiplier","negative","value","substring","length","renderChild","child","nodeType","data","callback","console","warn","innerText","getFormattedComponentFromTag","tag","childNodes","map","index","Paragraph","pTag","variant","ListUlList","List","listStyle","listStylePosition","overflowWrap","wordBreak","paddingLeft","typography","body1","textIndent","ListItemOlListItem","ListItem","TypographyOlListItem","ListOlList","TypographyHeading","TypographyImageText","BoxImageInformationWrapper","Box","ULComponent","ulComponent","children","listItem","OLComponent","olComponent","disableGutters","wrap","marginRight","Heading","headingTag","tagName","toLowerCase","BlockQuote","blockQuoteTag","defaultColors","useTheme","attributes","getNamedItem","element","textAreaBackgroundColor","textAreaDividerColor","getTextArea","getMediaPositionStyle","alignItems","flexDirection","float","marginLeft","AccordionSection","setExpanded","useState","title","textContent","className","color","fullWidth","expandIcon","toString","onClick","getAccordionTextArea","Figure","figureTag","Img","imgTag","localObserver","componentId","baseUrl","image","caption","popup","attribute","tagIsPresent","source","url","altValue","captionId","sourceId","onClickCallback","publish","imgUrl","includes","replace","alt","describedBy","push","join","getDescribedByAttribute","objectFit","objectPosition","cursor","marginTop","getImageStyle","getImageDescription","Video","videoAttributes","dataset","imageHeight","imageWidth","imagePosition","src","videoUrl","controls","type","getVideoDescription","Audio","audioAttributes","audioUrl","getAudioDescription","Source","sourceTag","array","forEach","Strong","strongTag","Underline","uTag","Italic","emTag","LineBreak","CustomLink","aTag","bottomMargin","mapLink","headerIdentifier","documentLink","externalLink","hoverLink","attributeKey","getLinkDataPerType","isPrintMode","startIcon","verticalAlign","underline","documentName","getDocumentLink","Boolean","printMode","mapLinkOrg","decodeURIComponent","error","target","href","getMapLink","getExternalLink","tagText","textDecoration","getHoverLink","text","startsWith"],"sourceRoot":""}