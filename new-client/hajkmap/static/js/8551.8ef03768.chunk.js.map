{"version":3,"file":"static/js/8551.8ef03768.chunk.js","mappings":"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","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Export/Export.js","plugins/Export/ExportModel.js","plugins/Export/components/ExportPdfSettings.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts = {}) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // AppModel keeps track of recently shown plugins.\n    this.props.app.pushPluginIntoHistory({\n      type: this.type,\n      icon: this.props.custom.icon,\n      title: this.title,\n      description: this.description,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Always render a Drawer button unless its target is \"hidden\". \n              It's a backup for plugins render elsewhere: we hide \n              Widget and Control buttons on small screens and fall \n              back to Drawer button). */}\n        {target !== \"hidden\" && this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget and Control plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden\n        mdUp={\n          this.pluginIsWidget(this.props.options.target) ||\n          this.props.options.target === \"control\"\n        }\n      >\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      // Hide Control button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <PluginControlButton\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\n\nimport PrintIcon from \"@mui/icons-material/Print\";\n\nimport ExportPdfSettings from \"./components/ExportPdfSettings.js\";\nimport ExportModel from \"./ExportModel\";\nimport Observer from \"react-event-observer\";\n\nclass Export extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.localObserver = Observer();\n\n    this.exportModel = new ExportModel({\n      map: props.map,\n      app: props.app,\n      localObserver: this.localObserver,\n      options: props.options,\n    });\n  }\n\n  onWindowShow = () => {\n    this.localObserver.publish(\"showPreviewLayer\");\n  };\n\n  onWindowHide = () => {\n    this.localObserver.publish(\"hidePreviewLayer\");\n  };\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Export\"\n        custom={{\n          icon: <PrintIcon />,\n          title: \"Exportera\",\n          description: \"Exportera kartan till andra format\",\n          height: \"dynamic\",\n          width: 315,\n          onWindowShow: this.onWindowShow,\n          onWindowHide: this.onWindowHide,\n        }}\n      >\n        {/**\n          * In the future, when we develop export for other formats,\n          * such as TIFF, we can use ExportView here. ExportView \n          * will have tab buttons that will select between the different\n          * export modes. But for now, we can as well just render the\n          * PDF exporter here.\n        \n        <ExportView\n          model={this.exportModel}\n          localObserver={this.localObserver}\n        /> */}\n        <ExportPdfSettings\n          model={this.exportModel}\n          localObserver={this.localObserver}\n        />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Export;\n","import Vector from \"ol/layer/Vector.js\";\nimport VectorSource from \"ol/source/Vector.js\";\nimport { Style, Stroke, Fill, Icon, Circle } from \"ol/style.js\";\nimport { getCenter } from \"ol/extent.js\";\nimport Polygon from \"ol/geom/Polygon\";\nimport Feature from \"ol/Feature.js\";\nimport Tile from \"ol/layer/Tile\";\nimport Image from \"ol/layer/Image\";\nimport TileWMS from \"ol/source/TileWMS\";\nimport ImageWMS from \"ol/source/ImageWMS\";\n//import ImageVector from \"ol/source/ImageVector\";\nimport { Translate } from \"ol/interaction.js\";\nimport WMTS from \"ol/source/WMTS\";\nimport TileArcGISRest from \"ol/source/TileArcGISRest\";\nimport Collection from \"ol/Collection\";\nimport { hfetch } from \"utils/FetchWrapper\";\n\nvar toHex = function (str) {\n  if (/^#/.test(str)) return str;\n  var hex =\n    \"#\" +\n    str\n      .match(/\\d+(\\.\\d+)?/g)\n      .splice(0, 3)\n      .map((i) => {\n        var v = parseInt(i, 10).toString(16);\n        if (parseInt(i) < 16) {\n          v = \"0\" + v;\n        }\n        return v;\n      })\n      .join(\"\");\n  return hex;\n};\n\nvar toOpacity = function (str) {\n  return parseFloat(str.match(/\\d+(\\.\\d+)?/g).splice(3, 1)[0]);\n};\n\nclass ExportModel {\n  constructor(settings) {\n    this.map = settings.map;\n    this.app = settings.app;\n    this.localObserver = settings.localObserver;\n    this.exportUrl = settings.options.exportUrl;\n    this.scales = this.validateScales(settings.options.scales);\n    this.copyright = \"© Lantmäteriverket i2009/00858\";\n    this.autoScale = false;\n    this.instruction = \"\";\n    this.addPreviewLayer();\n  }\n\n  validateScales(s) {\n    if (typeof s == \"string\" && /(\\d+)(,\\s*\\d+)*/.test(s)) {\n      return s.split(\",\").map((s) => Number(s));\n    } else {\n      return [250, 500, 1000, 2500, 5000, 10000, 25000, 50000, 100000, 250000];\n    }\n  }\n\n  addPreviewLayer() {\n    this.previewLayer = new Vector({\n      source: new VectorSource(),\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginExport\",\n      caption: \"Export plugin\",\n      style: new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.7)\",\n          width: 2,\n        }),\n        fill: new Fill({\n          color: \"rgba(255, 145, 20, 0.4)\",\n        }),\n      }),\n    });\n    this.map.addLayer(this.previewLayer);\n  }\n\n  removePreview() {\n    this.previewFeature = undefined;\n    this.previewLayer.getSource().clear();\n    this.map.removeInteraction(this.translate);\n  }\n\n  getPreviewFeature() {\n    return this.previewFeature;\n  }\n\n  getPreviewCenter() {\n    var extent = this.getPreviewFeature().getGeometry().getExtent();\n    return getCenter(extent);\n  }\n\n  addPreview(scale, paper, center) {\n    var dpi = 25.4 / 0.28,\n      ipu = 39.37,\n      sf = 1,\n      w = (((paper.width / dpi / ipu) * scale) / 2) * sf,\n      y = (((paper.height / dpi / ipu) * scale) / 2) * sf,\n      coords = [\n        [\n          [center[0] - w, center[1] - y],\n          [center[0] - w, center[1] + y],\n          [center[0] + w, center[1] + y],\n          [center[0] + w, center[1] - y],\n          [center[0] - w, center[1] - y],\n        ],\n      ],\n      feature = new Feature({\n        geometry: new Polygon(coords),\n      });\n\n    this.removePreview();\n    this.previewFeature = feature;\n    this.previewLayer.getSource().addFeature(feature);\n    this.translate = new Translate({\n      features: new Collection([feature]),\n    });\n    this.map.addInteraction(this.translate);\n  }\n\n  findWMS() {\n    /**\n     * @summary Only allow export of layers according to some specific conditions.\n     * @param {object} layer\n     */\n    const exportable = (layer) =>\n      (layer instanceof Tile || layer instanceof Image) &&\n      (layer.getSource() instanceof TileWMS ||\n        layer.getSource() instanceof ImageWMS) &&\n      layer.getVisible();\n\n    return this.map\n      .getLayers()\n      .getArray()\n      .filter(exportable)\n      .map((layer, i) => {\n        // Depending on type of LAYERS, either split the String or use Array directly.\n        const layers =\n          typeof layer.getSource().getParams().LAYERS === \"string\"\n            ? layer.getSource().getParams().LAYERS.split(\",\")\n            : layer.getSource().getParams().LAYERS;\n        return {\n          url: layer.getSource().get(\"url\"),\n          layers: layers,\n          zIndex: i,\n          workspacePrefix: null,\n          coordinateSystemId: this.map\n            .getView()\n            .getProjection()\n            .getCode()\n            .split(\":\")[1],\n        };\n      });\n  }\n\n  findVector() {\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    }\n\n    function rgbToHex(rgbString) {\n      const matches = /rgb(a)?\\((\\d+), (\\d+), (\\d+)(, [\\d.]+)?\\)/.exec(\n        rgbString\n      );\n      if (matches !== null) {\n        let r = parseInt(matches[2]);\n        let g = parseInt(matches[3]);\n        let b = parseInt(matches[4]);\n        let a = parseInt(matches[5]);\n        return a\n          ? null\n          : \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n      } else {\n        return null;\n      }\n    }\n\n    function asObject(style) {\n      function olColorToHex(olColor) {\n        var colorString = olColor.join(\", \");\n        var hex = rgbToHex(`rgba(${colorString})`);\n        return hex;\n      }\n\n      if (!style) return null;\n\n      if (Array.isArray(style)) {\n        if (style.length === 2) {\n          style = style[1];\n        }\n        if (style.length === 1) {\n          style = style[0];\n        }\n      }\n\n      var fillColor = \"#FC345C\",\n        fillOpacity = 0.5,\n        strokeColor = \"#FC345C\",\n        strokeOpacity = 1,\n        strokeWidth = 3,\n        strokeLinecap = \"round\",\n        strokeDashstyle = \"solid\",\n        pointRadius = 10,\n        pointFillColor = \"#FC345C\",\n        pointSrc = \"\",\n        labelAlign = \"cm\",\n        labelOutlineColor = \"white\",\n        labelOutlineWidth = 3,\n        fontSize = \"16\",\n        fontColor = \"#FFFFFF\",\n        fontBackColor = \"#000000\";\n\n      if (\n        style.getText &&\n        style.getText() &&\n        style.getText().getFont &&\n        style.getText().getFont()\n      ) {\n        fontSize = style.getText().getFont().match(/\\d+/)[0];\n      }\n\n      if (\n        style.getText &&\n        style.getText() &&\n        style.getText().getFill &&\n        style.getText().getFill()\n      ) {\n        if (typeof style.getText().getFill().getColor() === \"string\") {\n          fontColor = style.getText().getFill().getColor();\n        } else if (Array.isArray(style.getText().getFill().getColor())) {\n          fontColor = olColorToHex(style.getText().getFill().getColor());\n        }\n      }\n\n      if (\n        style.getText &&\n        style.getText() &&\n        style.getText().getStroke &&\n        style.getText().getStroke()\n      ) {\n        if (typeof style.getText().getFill().getColor() === \"string\") {\n          fontBackColor = style.getText().getStroke().getColor();\n        } else if (Array.isArray(style.getText().getStroke().getColor())) {\n          fontBackColor = olColorToHex(style.getText().getStroke().getColor());\n        }\n      }\n\n      if (fontColor && /^rgb/.test(fontColor)) {\n        fontColor = rgbToHex(fontColor);\n      }\n\n      if (fontBackColor) {\n        if (/^rgb\\(/.test(fontBackColor)) {\n          fontBackColor = rgbToHex(fontBackColor);\n        } else {\n          fontBackColor = null;\n        }\n      }\n\n      if (style.getFill && style.getFill() && style.getFill().getColor()) {\n        if (toHex(style.getFill().getColor())) {\n          fillColor = toHex(style.getFill().getColor());\n          fillOpacity = toOpacity(style.getFill().getColor());\n        } else if (Array.isArray(style.getFill().getColor())) {\n          fillColor = olColorToHex(style.getFill().getColor());\n          fillOpacity = style.getFill().getColor()[\n            style.getFill().getColor().length - 1\n          ];\n        }\n      }\n\n      if (style.getFill && style.getStroke()) {\n        if (toHex(style.getStroke().getColor())) {\n          strokeColor = toHex(style.getStroke().getColor());\n        } else if (Array.isArray(style.getStroke().getColor())) {\n          strokeColor = olColorToHex(style.getStroke().getColor());\n        }\n\n        strokeWidth = style.getStroke().getWidth() || 3;\n        strokeLinecap = style.getStroke().getLineCap() || \"round\";\n        strokeDashstyle = style.getStroke().getLineDash()\n          ? style.getStroke().getLineDash()[0] === 12\n            ? \"dash\"\n            : \"dot\"\n          : \"solid\";\n      }\n\n      if (style.getImage && style.getImage()) {\n        if (style.getImage() instanceof Icon) {\n          pointSrc = style.getImage().getSrc();\n        }\n        if (style.getImage() instanceof Circle) {\n          pointRadius = style.getImage().getRadius();\n          pointFillColor = toHex(style.getImage().getFill().getColor());\n        }\n      }\n\n      return {\n        fillColor: fillColor,\n        fillOpacity: fillOpacity,\n        strokeColor: strokeColor,\n        strokeOpacity: strokeOpacity,\n        strokeWidth: strokeWidth,\n        strokeLinecap: strokeLinecap,\n        strokeDashstyle: strokeDashstyle,\n        pointRadius: pointRadius,\n        pointFillColor: pointFillColor,\n        pointSrc: pointSrc,\n        labelAlign: labelAlign,\n        labelOutlineColor: labelOutlineColor,\n        labelOutlineWidth: labelOutlineWidth,\n        fontSize: fontSize,\n        fontColor: fontColor,\n        fontBackColor: fontBackColor,\n      };\n    }\n\n    function as2DPairs(coordinates, type) {\n      switch (type) {\n        case \"Point\":\n          return [coordinates];\n        case \"LineString\":\n          return coordinates;\n        case \"Polygon\":\n          return coordinates[0];\n        case \"MultiPolygon\":\n          return coordinates[0][0];\n        case \"Circle\":\n          return [coordinates[0], coordinates[1]];\n        default:\n          break;\n      }\n    }\n\n    function translateVector(features, layer) {\n      function getText(feature) {\n        var text = \"\";\n\n        if (\n          feature.getProperties() &&\n          feature.getProperties().type === \"Text\"\n        ) {\n          if (feature.getProperties().description) {\n            text = feature.getProperties().description;\n          } else if (feature.getProperties().name) {\n            text = feature.getProperties().name;\n          } else {\n            text = \"\";\n          }\n          return text;\n        }\n\n        if (\n          feature.getStyle &&\n          Array.isArray(feature.getStyle()) &&\n          feature.getStyle()[1] &&\n          feature.getStyle()[1].getText() &&\n          feature.getStyle()[1].getText().getText()\n        ) {\n          text = feature.getStyle()[1].getText().getText();\n        }\n\n        if (\n          feature.getStyle &&\n          feature.getStyle() &&\n          feature.getStyle().getText &&\n          feature.getStyle().getText()\n        ) {\n          text = feature.getStyle().getText().getText();\n        }\n\n        return text;\n      }\n\n      return {\n        features: features.map((feature) => {\n          var type = feature.getGeometry().getType(),\n            geom = feature.getGeometry(),\n            holes = null,\n            coords;\n\n          if (!feature.getStyle() && layer) {\n            let layerStyle = layer.getStyle()(feature)[0];\n            feature.setStyle(layerStyle);\n          }\n\n          coords =\n            type === \"Circle\"\n              ? as2DPairs([geom.getCenter(), [geom.getRadius(), 0]], \"Circle\")\n              : as2DPairs(geom.getCoordinates(), type);\n\n          if (type === \"MultiPolygon\") {\n            holes = geom\n              .getCoordinates()[0]\n              .slice(1, geom.getCoordinates()[0].length);\n          }\n\n          return {\n            type: type,\n            attributes: {\n              text: getText(feature),\n              style: asObject(feature.getStyle()),\n            },\n            coordinates: coords,\n            holes: holes,\n          };\n        }),\n      };\n    }\n\n    var layers,\n      vectorLayers,\n      //imageVectorLayers,\n      extent = this.previewLayer\n        .getSource()\n        .getFeatures()[0]\n        .getGeometry()\n        .getExtent();\n\n    layers = this.map.getLayers().getArray();\n\n    vectorLayers = layers.filter(\n      (layer) =>\n        layer instanceof Vector &&\n        layer.getVisible() &&\n        layer.get(\"name\") !== \"pluginExport\"\n    );\n\n    vectorLayers = vectorLayers\n      .map((layer) =>\n        translateVector(layer.getSource().getFeaturesInExtent(extent), layer)\n      )\n      .filter((layer) => layer.features.length > 0);\n    return vectorLayers;\n  }\n\n  findWMTS() {\n    var layers = this.map.getLayers().getArray();\n    return layers\n      .filter(\n        (layer) => layer.getSource() instanceof WMTS && layer.getVisible()\n      )\n      .map((layer) => {\n        var s = layer.getSource();\n        return {\n          url: Array.isArray(s.getUrls()) ? s.getUrls()[0] : s.get(\"url\"),\n          axisMode: \"natural\",\n        };\n      });\n  }\n\n  findArcGIS() {\n    function getArcGISLayerContract(layer) {\n      var url = layer.getSource().get(\"url\"),\n        extent = layer.get(\"extent\") || [],\n        layers = [],\n        projection = layer.get(\"projection\");\n\n      if (typeof layer.getSource().getParams(\"params\")[\"LAYERS\"] === \"string\") {\n        layers = layer\n          .getSource()\n          .getParams(\"params\")\n          .LAYERS.replace(\"show:\", \"\")\n          .split(\",\");\n      }\n\n      if (typeof projection === \"string\") {\n        projection = projection.replace(\"EPSG:\", \"\");\n      }\n\n      return {\n        url: url,\n        layers: layers,\n        spatialReference: projection,\n        extent: {\n          left: extent[0],\n          bottom: extent[1],\n          right: extent[2],\n          top: extent[3],\n        },\n      };\n    }\n\n    function visibleArcGISLayer(layer) {\n      return layer.getSource() instanceof TileArcGISRest && layer.getVisible();\n    }\n\n    return this.map\n      .getLayers()\n      .getArray()\n      .filter(visibleArcGISLayer)\n      .map(getArcGISLayerContract);\n  }\n\n  exportPDF(options, callback) {\n    var extent = this.previewLayer\n        .getSource()\n        .getFeatures()[0]\n        .getGeometry()\n        .getExtent(),\n      left = extent[0],\n      right = extent[2],\n      bottom = extent[1],\n      top = extent[3],\n      url = this.exportUrl,\n      data = {\n        wmsLayers: [],\n        vectorLayers: [],\n        size: null,\n        resolution: options.resolution,\n        bbox: null,\n      };\n\n    data.vectorLayers = this.findVector() || [];\n    data.wmsLayers = this.findWMS() || [];\n    data.wmtsLayers = this.findWMTS() || [];\n    data.arcgisLayers = this.findArcGIS() || [];\n\n    data.size = [\n      parseInt(options.size.width * options.resolution),\n      parseInt(options.size.height * options.resolution),\n    ];\n\n    data.bbox = [left, right, bottom, top];\n    data.orientation = options.orientation;\n    data.format = options.format;\n    data.scale = options.scale;\n\n    hfetch(url, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        data: JSON.stringify(data),\n      }),\n    })\n      .then((response) => {\n        response.text().then((fileUrl) => {\n          if (callback) {\n            callback(fileUrl);\n          }\n        });\n      })\n      .catch((error) => {\n        alert(\"Det gick inte att exportera kartan. \" + error);\n        console.error(error);\n      });\n  }\n\n  resolutionToScale(dpi, resolution) {\n    var inchesPerMeter = 39.37;\n    return resolution * dpi * inchesPerMeter;\n  }\n\n  getMap() {\n    return this.map;\n  }\n}\n\nexport default ExportModel;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport { Paper, FormControl, Button, Input } from \"@mui/material\";\nimport { Grid, InputLabel, NativeSelect, LinearProgress } from \"@mui/material\";\nimport ArrowDownward from \"@mui/icons-material/ArrowDownward\";\nimport PictureAsPdf from \"@mui/icons-material/PictureAsPdf\";\n\nimport { getCenter } from \"ol/extent.js\";\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  marginBottom: theme.spacing(2),\n}));\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  opacity: 1,\n  transition: \"opacity 2s ease-in\",\n  marginBottom: theme.spacing(2),\n}));\n\nclass ExportPdfSettings extends React.PureComponent {\n  static propTypes = {\n    localObserver: propTypes.object.isRequired,\n    model: propTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.resolutions = [72, 96, 150, 200, 300];\n    this.paperFormats = [\"A2\", \"A3\", \"A4\"];\n    this.state = {\n      selectFormat: \"A4\",\n      selectOrientation: \"S\",\n      selectScale:\n        props.model.scales[Math.floor(props.model.scales.length / 2)], // Start with the scale in the middle of array\n      manualScale: \"10000\",\n      selectResolution: \"72\",\n      center: props.model.getPreviewFeature()\n        ? props.model.getPreviewCenter()\n        : props.model.map.getView().getCenter(),\n      loading: false,\n      previewLayerVisible: false,\n    };\n\n    props.localObserver.subscribe(\"showPreviewLayer\", () => {\n      this.setState({ previewLayerVisible: true });\n      this.addPreview(props.model.map);\n    });\n\n    props.localObserver.subscribe(\"hidePreviewLayer\", () => {\n      this.setState({ previewLayerVisible: false });\n      this.removePreview();\n    });\n  }\n\n  getPaperMeasures() {\n    var pageSize = (format) => {\n      switch (format) {\n        case \"A4\":\n          return {\n            width: this.getOrientation() === \"L\" ? 297 : 210,\n            height: this.getOrientation() === \"L\" ? 210 : 297,\n          };\n        case \"A3\":\n          return {\n            width: this.getOrientation() === \"L\" ? 420 : 297,\n            height: this.getOrientation() === \"L\" ? 297 : 420,\n          };\n        case \"A2\":\n          return {\n            width: this.getOrientation() === \"L\" ? 594 : 420,\n            height: this.getOrientation() === \"L\" ? 420 : 594,\n          };\n        default: {\n          return {\n            width: 0,\n            height: 0,\n          };\n        }\n      }\n    };\n\n    var width = pageSize(this.getFormat()).width,\n      height = pageSize(this.getFormat()).height;\n\n    return {\n      width: width / 25.4,\n      height: height / 25.4,\n    };\n  }\n\n  getPreviewPaperMeasures() {\n    var size = this.getPaperMeasures(),\n      inchInMillimeter = 25.4,\n      defaultPixelSizeInMillimeter = 0.28,\n      dpi = inchInMillimeter / defaultPixelSizeInMillimeter; // ~90\n    return {\n      width: size.width * dpi,\n      height: size.height * dpi,\n    };\n  }\n\n  getScale() {\n    return this.state.selectScale === \"other\"\n      ? !Number.isNaN(Number(this.state.manualScale))\n        ? this.state.manualScale\n        : 0\n      : this.state.selectScale;\n  }\n\n  getResolution() {\n    return this.state.selectResolution;\n  }\n\n  getOrientation() {\n    return this.state.selectOrientation;\n  }\n\n  getFormat() {\n    return this.state.selectFormat;\n  }\n\n  setFormat = (e) => {\n    this.setState({\n      selectFormat: e.target.value,\n    });\n  };\n\n  setResolution = (e) => {\n    this.setState({\n      selectResolution: e.target.value,\n    });\n  };\n\n  setScale = (e) => {\n    this.setState({\n      selectScale: e.target.value,\n    });\n  };\n\n  setCenter = (val) => {\n    this.setState({\n      center: val,\n    });\n  };\n\n  setManualScale = (e) => {\n    var v = e.target.value.startsWith(\"1:\")\n      ? e.target.value.split(\":\")[1]\n      : e.target.value;\n    this.setState({\n      manualScale: v,\n    });\n  };\n\n  setOrientation = (e) => {\n    this.setState({\n      selectOrientation: e.target.value,\n    });\n  };\n\n  removePreview() {\n    this.props.model.removePreview();\n  }\n\n  addPreview(map) {\n    var scale = this.getScale(),\n      paper = this.getPreviewPaperMeasures(),\n      center = this.props.model.getPreviewFeature()\n        ? getCenter(\n            this.props.model.getPreviewFeature().getGeometry().getExtent()\n          )\n        : map.getView().getCenter();\n\n    this.props.model.addPreview(scale, paper, center);\n\n    var preScale = undefined;\n\n    switch (scale) {\n      case \"250\":\n        preScale = 6;\n        break;\n      case \"500\":\n        preScale = 6;\n        break;\n      case \"1000\":\n        preScale = 5;\n        break;\n      case \"2500\":\n        preScale = 4;\n        break;\n      case \"5000\":\n        preScale = 3;\n        break;\n      case \"10000\":\n        preScale = 2;\n        break;\n      case \"25000\":\n        preScale = 1;\n        break;\n      case \"50000\":\n        preScale = 1;\n        break;\n      case \"100000\":\n        preScale = 0;\n        break;\n      case \"250000\":\n        preScale = 0;\n        break;\n      default:\n        preScale = map.getView().getZoom();\n        break;\n    }\n\n    if (this.props.model.autoScale && preScale < map.getView().getZoom()) {\n      map.getView().setZoom(preScale);\n    }\n  }\n\n  exportPDF = (e) => {\n    this.setState({\n      url: false,\n      loading: true,\n    });\n    var options = {\n      size: this.getPaperMeasures(),\n      format: this.getFormat(),\n      orientation: this.getOrientation(),\n      scale: this.getScale(),\n      resolution: this.getResolution(),\n    };\n\n    this.props.model.exportPDF(options, (pdfUrl) => {\n      let newState = {\n        loading: false,\n      };\n\n      // Set URL in state only if respons ends with \".pdf\"\n      if (pdfUrl.trimEnd().substr(-4) === \".pdf\") {\n        newState[\"url\"] = pdfUrl;\n      } else {\n        this.props.enqueueSnackbar(\n          \"Utskriften kunde inte skapas. Prova med lägre upplösning, mindre område eller färre lager i kartan.\",\n          {\n            variant: \"error\",\n          }\n        );\n      }\n\n      this.setState(newState);\n    });\n  };\n\n  render() {\n    var scales = this.props.model.scales;\n\n    const scalesOptions = scales.map((s, i) => (\n      <option key={i} value={s}>\n        1:\n        {s}\n      </option>\n    ));\n\n    const resolutionOptions = this.resolutions.map((s, i) => {\n      if (this.state.selectFormat === \"A2\") {\n        return s !== 300 ? (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        ) : (\n          <option key={i} value={s} disabled>\n            {s}\n          </option>\n        );\n      } else {\n        return (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        );\n      }\n    });\n\n    const paperFormatOptions = this.paperFormats.map((s, i) => {\n      if (this.state.selectResolution === \"300\") {\n        return s !== \"A2\" ? (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        ) : (\n          <option key={i} value={s} disabled>\n            {s}\n          </option>\n        );\n      } else {\n        return (\n          <option key={i} value={s}>\n            {s}\n          </option>\n        );\n      }\n    });\n\n    if (this.state.previewLayerVisible === true) {\n      this.addPreview(this.props.model.map);\n    } else {\n      this.removePreview();\n    }\n\n    return (\n      <Grid container>\n        {this.state.loading && (\n          <Grid item xs={12}>\n            <StyledPaper>\n              <LinearProgress />\n            </StyledPaper>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"paper-size-native-helper\">\n              Pappersstorlek\n            </InputLabel>\n            <NativeSelect\n              onChange={this.setFormat}\n              value={this.state.selectFormat}\n              input={<Input name=\"format\" id=\"paper-size-native-helper\" />}\n            >\n              {paperFormatOptions}\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"orientation-native-helper\">\n              Orientering\n            </InputLabel>\n            <NativeSelect\n              onChange={this.setOrientation}\n              value={this.state.selectOrientation}\n              input={\n                <Input name=\"orientation\" id=\"orientation-native-helper\" />\n              }\n            >\n              <option value=\"P\">stående</option>\n              <option value=\"L\">liggande</option>\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"scale-native-helper\">\n              Skala\n            </InputLabel>\n            <NativeSelect\n              onChange={this.setScale}\n              value={this.state.selectScale}\n              input={<Input name=\"scale\" id=\"scale-native-helper\" />}\n            >\n              {scalesOptions}\n              <option key={\"other\"} value={\"other\"}>\n                Annan skala\n              </option>\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n        {this.state.selectScale === \"other\" && (\n          <Grid item xs={12}>\n            <StyledFormControl fullWidth>\n              <Input\n                type=\"text\"\n                onChange={this.setManualScale}\n                value={this.state.manualScale}\n              />\n            </StyledFormControl>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <StyledFormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"resolution-native-helper\">\n              Upplösning\n            </InputLabel>\n            <NativeSelect\n              value={this.state.selectResolution}\n              onChange={this.setResolution}\n              input={<Input name=\"resolution\" id=\"resolution-native-helper\" />}\n            >\n              {resolutionOptions}\n            </NativeSelect>\n          </StyledFormControl>\n        </Grid>\n\n        <StyledFormControl fullWidth>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth={true}\n            onClick={this.exportPDF}\n          >\n            <PictureAsPdf sx={{ marginRight: 1 }} /> Skapa PDF\n          </Button>\n        </StyledFormControl>\n        {this.state.url && (\n          <StyledFormControl fullWidth>\n            <Button\n              variant=\"contained\"\n              fullWidth={true}\n              target=\"_blank\"\n              href={this.state.url}\n            >\n              <ArrowDownward sx={{ marginRight: 1 }} /> Ladda ner\n            </Button>\n          </StyledFormControl>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default withSnackbar(ExportPdfSettings);\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","React","state","open","render","abstract","icon","onClick","title","this","props","avatar","subheader","defaultProps","BaseWindowPlugin","constructor","super","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","pushPluginIntoHistory","custom","description","windowVisible","onWindowOpen","setState","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","componentDidUpdate","prevProps","pluginIsWidget","target","includes","renderWindow","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","Export","localObserver","Observer","exportModel","ExportModel","model","toHex","str","test","match","splice","i","v","parseInt","toString","join","settings","exportUrl","scales","validateScales","copyright","autoScale","instruction","addPreviewLayer","s","split","Number","previewLayer","Vector","source","VectorSource","layerType","zIndex","name","caption","style","Style","stroke","Stroke","fill","Fill","addLayer","removePreview","previewFeature","getSource","clear","removeInteraction","translate","getPreviewFeature","getPreviewCenter","extent","getGeometry","getExtent","getCenter","addPreview","scale","paper","center","dpi","w","y","coords","feature","Feature","geometry","Polygon","addFeature","Translate","features","Collection","addInteraction","findWMS","getLayers","getArray","filter","layer","Tile","Image","TileWMS","ImageWMS","getVisible","layers","getParams","LAYERS","url","get","workspacePrefix","coordinateSystemId","getView","getProjection","getCode","findVector","componentToHex","c","hex","length","rgbToHex","rgbString","matches","exec","r","g","b","asObject","olColorToHex","olColor","colorString","Array","isArray","fillColor","fillOpacity","strokeColor","strokeWidth","strokeLinecap","strokeDashstyle","pointRadius","pointFillColor","pointSrc","fontSize","fontColor","fontBackColor","getText","getFont","getFill","getColor","getStroke","parseFloat","getWidth","getLineCap","getLineDash","getImage","Icon","getSrc","Circle","getRadius","strokeOpacity","labelAlign","labelOutlineColor","labelOutlineWidth","as2DPairs","coordinates","getFeatures","getProperties","getStyle","getType","geom","holes","layerStyle","setStyle","getCoordinates","slice","attributes","translateVector","getFeaturesInExtent","findWMTS","WMTS","getUrls","axisMode","findArcGIS","TileArcGISRest","projection","replace","spatialReference","left","bottom","right","top","exportPDF","callback","data","wmsLayers","vectorLayers","size","resolution","bbox","wmtsLayers","arcgisLayers","orientation","format","hfetch","method","credentials","headers","body","JSON","stringify","then","response","fileUrl","catch","error","alert","console","resolutionToScale","getMap","StyledFormControl","FormControl","StyledPaper","Paper","opacity","transition","ExportPdfSettings","setFormat","selectFormat","value","setResolution","selectResolution","setScale","selectScale","setCenter","val","setManualScale","startsWith","manualScale","setOrientation","selectOrientation","loading","getPaperMeasures","getFormat","getOrientation","getScale","getResolution","pdfUrl","newState","trimEnd","substr","enqueueSnackbar","variant","resolutions","paperFormats","Math","floor","previewLayerVisible","pageSize","getPreviewPaperMeasures","isNaN","preScale","getZoom","setZoom","scalesOptions","resolutionOptions","disabled","paperFormatOptions","container","item","xs","fullWidth","htmlFor","onChange","input","sx","marginRight","href","withSnackbar"],"sourceRoot":""}