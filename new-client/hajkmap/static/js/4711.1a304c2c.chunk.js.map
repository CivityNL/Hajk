{"version":3,"file":"static/js/4711.1a304c2c.chunk.js","mappings":"gOAAO,MAAMA,EAAwBC,GAC5BA,EAAaC,MAAM,KAAKC,KAAKC,GAC3BA,EAAOC,SAILC,EAAkBL,GACPD,EAAqBC,GACpBM,KAAK,KAAKL,MAAM,KAG5BM,EAAcC,GAClBA,EAAKC,MAAQD,EAAKC,KAAKC,OAAS,EAG5BC,EAAuBC,GAC3BA,EAASC,QAAO,CAACC,EAAKC,KAC3B,GAAIA,EAAQC,OAAQ,CAClB,IAAIC,EAAiC,IAAKF,GAC1CE,EAA+BL,SAAW,GAC1CE,EAAM,IAAIA,EAAKG,EAChB,CACD,OAAIF,EAAQH,UAAYG,EAAQH,SAASF,OAAS,EACzC,IAAII,KAAQH,EAAoBI,EAAQH,WAE1CE,CAAP,GACC,G,yFCvBL,MAAMI,EAAqBT,GAClBA,EAAKI,QAAO,CAACM,EAAaX,MAC3BD,EAAAA,EAAAA,YAAWC,KACbW,EAAc,IAAIA,KAAgBD,EAAkBV,EAAKC,QAEpD,IAAIU,EAAaX,EAAKY,MAC5B,IASQC,EAAyB,SACpCZ,GAII,IAHJa,EAGG,uDAHQ,KACXC,EAEG,uDAFK,EACRC,EACG,uDADS,GAERC,EAAqBhB,EAAKI,QAAO,CAACa,EAAOC,MAC3CA,EAAW,IACNA,EAEDL,WACAC,QACAK,YAAa,GACbT,YAAa,GACbU,WAAYL,EACZM,QAASC,EAAAA,cAIAtB,MAAQkB,EAASlB,KAAKC,OAAS,IAC1CiB,EAASR,YAAc,IAClBQ,EAASR,eACTD,EAAkBS,EAASlB,OAEhCkB,EAASC,YAAc,IAClBD,EAASC,eACTD,EAASlB,KAAKP,KAAKyB,GACbA,EAASP,MAIpBM,EAAQ,IACHA,KACAL,EAAuBM,EAASlB,KAAMkB,EAASP,GAAIG,EAAQ,EAAG,IAC5DC,EACHG,EAASP,OAIR,IAAKM,EAAY,CAACC,EAASP,IAAKO,KACtC,CAAC,GAIJ,OAHAK,OAAOC,OAAOR,GAAoBS,SAASC,WAClCA,EAAE1B,IAAT,IAEKgB,CACR,C","sources":["plugins/DocumentHandler/utils/helpers.js","plugins/DocumentHandler/utils/stateConverter.js"],"sourcesContent":["export const splitAndTrimOnCommas = (searchString) => {\n  return searchString.split(\",\").map((string) => {\n    return string.trim();\n  });\n};\n\nexport const getStringArray = (searchString) => {\n  let tempStringArray = splitAndTrimOnCommas(searchString);\n  return tempStringArray.join(\" \").split(\" \");\n};\n\nexport const hasSubMenu = (item) => {\n  return item.menu && item.menu.length > 0;\n};\n\nexport const flattenChaptersTree = (chapters) => {\n  return chapters.reduce((acc, chapter) => {\n    if (chapter.header) {\n      let chapterStrippedFromSubChapters = { ...chapter };\n      chapterStrippedFromSubChapters.chapters = [];\n      acc = [...acc, chapterStrippedFromSubChapters];\n    }\n    if (chapter.chapters && chapter.chapters.length > 0) {\n      return [...acc, ...flattenChaptersTree(chapter.chapters)];\n    }\n    return acc;\n  }, []);\n};\n","import React from \"react\";\nimport { hasSubMenu } from \"../utils/helpers\";\n\nconst getAllChildrenIds = (menu) => {\n  return menu.reduce((allChildren, item) => {\n    if (hasSubMenu(item)) {\n      allChildren = [...allChildren, ...getAllChildrenIds(item.menu)];\n    }\n    return [...allChildren, item.id];\n  }, []);\n};\n/**\n * Function takes the hierarchial menu and flattens it into a normalized state where\n * the objects key is the id of the menu-item. The structure is now flat and every\n * object has references to parents, children etc.\n * While we are normalizing, we are also setting internal properties we later use\n * to make items selected, colored etc.\n */\nexport const getNormalizedMenuState = (\n  menu,\n  parentId = null,\n  level = 0,\n  parentIds = []\n) => {\n  let normalizedItemList = menu.reduce((items, menuItem) => {\n    menuItem = {\n      ...menuItem,\n      ...{\n        parentId,\n        level,\n        menuItemIds: [],\n        allChildren: [],\n        allParents: parentIds,\n        itemRef: React.createRef(),\n      },\n    };\n\n    if (menuItem.menu && menuItem.menu.length > 0) {\n      menuItem.allChildren = [\n        ...menuItem.allChildren,\n        ...getAllChildrenIds(menuItem.menu),\n      ];\n      menuItem.menuItemIds = [\n        ...menuItem.menuItemIds,\n        ...menuItem.menu.map((menuItem) => {\n          return menuItem.id;\n        }),\n      ];\n\n      items = {\n        ...items,\n        ...getNormalizedMenuState(menuItem.menu, menuItem.id, level + 1, [\n          ...parentIds,\n          menuItem.id,\n        ]),\n      };\n    }\n    return { ...items, ...{ [menuItem.id]: menuItem } };\n  }, {});\n  Object.values(normalizedItemList).forEach((n) => {\n    delete n.menu;\n  });\n  return normalizedItemList;\n};\n"],"names":["splitAndTrimOnCommas","searchString","split","map","string","trim","getStringArray","join","hasSubMenu","item","menu","length","flattenChaptersTree","chapters","reduce","acc","chapter","header","chapterStrippedFromSubChapters","getAllChildrenIds","allChildren","id","getNormalizedMenuState","parentId","level","parentIds","normalizedItemList","items","menuItem","menuItemIds","allParents","itemRef","React","Object","values","forEach","n"],"sourceRoot":""}