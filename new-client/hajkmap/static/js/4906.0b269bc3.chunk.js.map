{"version":3,"file":"static/js/4906.0b269bc3.chunk.js","mappings":"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","sources":["plugins/Edit/EditModel.js"],"sourcesContent":["import { WFS } from \"ol/format\";\nimport { Style, Stroke, Fill, Circle, RegularShape } from \"ol/style\";\nimport { MultiPoint, Polygon } from \"ol/geom\";\nimport Vector from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { all as strategyAll } from \"ol/loadingstrategy\";\nimport { Select, Modify, Draw, Translate } from \"ol/interaction\";\nimport { never } from \"ol/events/condition\";\nimport X2JS from \"x2js\";\nimport { hfetch } from \"utils/FetchWrapper\";\n\nclass EditModel {\n  constructor(settings) {\n    console.log(\"Hello from EditModel: \" + settings.options.title);\n    this.map = settings.map;\n    this.app = settings.app;\n    this.observer = settings.observer;\n    this.options = settings.options;\n\n    this.activeServices = this.options.activeServices;\n    this.sources = this.options.sources;\n\n    this.vectorSource = undefined;\n    this.layer = undefined;\n    this.select = undefined;\n    this.modify = undefined;\n    this.key = undefined;\n    this.editFeature = undefined;\n    this.editFeatureBackup = undefined;\n    this.editSource = undefined;\n    this.removeFeature = undefined;\n    this.shell = undefined;\n    this.instruction = \"\";\n    this.filty = false;\n    this.removalToolMode = \"off\";\n\n    if (!this.options.sources || this.options.sources.length === 0) {\n      console.log(\"Fucking hell! Waarom?\");\n      this.options.sources = [\n        {\n          id: \"wat-een-ongelofelijke-klerezooi\",\n          url: \"http://localhost:81/geoserver/workspace_datastore_ckan_dataplatform_sandbox/ckan_geboorde-putten/ows\",\n          layers: [\n            \"workspace_datastore_ckan_dataplatform_sandbox:ckan_geboorde-putten\",\n          ],\n          projection: \"EPSG:28992\",\n          caption: \"Geboorde putten\",\n          uri: \"http://www.opengis.net/wfs\",\n        },\n      ];\n    } else {\n      console.log(\"Blub\");\n    }\n\n    // Normalize the sources that come from options.\n    this.options.sources = this.options.sources.map((s) => {\n      console.log(\"Godverdomme \" + s.caption);\n      // Namespace URI is required for insert. QGIS Server tends to accept this value.\n      if (s.uri.trim().length === 0) {\n        s.uri = \"http://www.opengis.net/wfs\";\n      }\n\n      // Get rid of the SERVICE=WFS attribute if existing: we will add it on the following requests\n      // while QGIS Server's WFS endpoint requires the SERVICE parameter to be preset. We'd\n      // end up with duplicate parameters, so the safest way around is to remove it, in a controlled\n      // manner, without disturbing the URL.\n      const url = new URL(s.url);\n      url.searchParams.delete(\"service\");\n      s.url = url.href;\n\n      return s;\n    });\n  }\n\n  write(features) {\n    var format = new WFS(),\n      lr = this.editSource.layers[0].split(\":\"),\n      fp = lr.length === 2 ? lr[0] : \"\",\n      ft = lr.length === 2 ? lr[1] : lr[0],\n      options = {\n        featureNS: this.editSource.uri,\n        featurePrefix: fp,\n        featureType: ft,\n        hasZ: false,\n        version: \"1.1.0\", // or \"1.0.0\"\n        srsName: this.editSource.projection,\n      };\n\n    return format.writeTransaction(\n      features.inserts,\n      features.updates,\n      features.deletes,\n      options\n    );\n  }\n\n  refreshLayer(layerName) {\n    var source,\n      foundLayer = this.map\n        .getLayers()\n        .getArray()\n        .find((layer) => {\n          var match = false;\n          if (layer.getSource().getParams) {\n            let params = layer.getSource().getParams();\n            if (typeof params === \"object\") {\n              // FIXME: Can be a bug here: we can't expect our edited layer to always be of index 0 if a LayerGroup (which gives Array so we must handle that as well)\n              let paramName = Array.isArray(params.LAYERS)\n                ? params.LAYERS[0].split(\":\")\n                : params.LAYERS.split(\":\");\n              let layerSplit = layerName.split(\":\");\n              if (paramName.length === 2 && layerSplit.length === 2) {\n                match = layerName === params.LAYERS;\n              }\n              if (paramName.length === 1) {\n                match = layerSplit[1] === params.LAYERS;\n              }\n            }\n          }\n          return match;\n        });\n\n    if (foundLayer) {\n      source = foundLayer.getSource();\n      source.changed();\n      source.updateParams({ time: Date.now() });\n      this.map.updateSize();\n    }\n  }\n\n  parseWFSTresponse(response) {\n    var str =\n      typeof response !== \"string\"\n        ? new XMLSerializer().serializeToString(response)\n        : response;\n    return new X2JS().xml2js(str);\n  }\n\n  transact(features, done) {\n    var node = this.write(features),\n      serializer = new XMLSerializer(),\n      src = this.editSource,\n      payload = node ? serializer.serializeToString(node) : undefined;\n\n    if (payload) {\n      hfetch(src.url, {\n        method: \"POST\",\n        body: payload,\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"text/xml\",\n        },\n      })\n        .then((response) => {\n          response.text().then((wfsResponseText) => {\n            const resXml = this.parseWFSTresponse(wfsResponseText);\n            if (resXml.ExceptionReport || !resXml.TransactionResponse) {\n              // do not delete the data so the user can submit it again\n              done(resXml);\n            } else {\n              this.refreshLayer(src.layers[0]);\n              this.vectorSource\n                .getFeatures()\n                .filter((f) => f.modification !== undefined)\n                .forEach((f) => (f.modification = undefined));\n              done(resXml);\n            }\n          });\n        })\n        .catch((response) => {\n          response.text().then((errorMessage) => {\n            done(errorMessage);\n          });\n        });\n    }\n  }\n\n  save(done) {\n    const find = (mode) =>\n      this.vectorSource\n        .getFeatures()\n        .filter((feature) => feature.modification === mode);\n\n    const features = {\n      updates: find(\"updated\").map((feature) => {\n        feature.unset(\"boundedBy\");\n        return feature;\n      }),\n      inserts: find(\"added\"),\n      deletes: find(\"removed\"),\n    };\n\n    if (\n      features.updates.length === 0 &&\n      features.inserts.length === 0 &&\n      features.deletes.length === 0\n    ) {\n      return done();\n    }\n\n    this.transact(features, done);\n  }\n\n  getSelectStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 255, 255, 1)\",\n          width: 3,\n        }),\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 255, 255, 1)\",\n            width: 2,\n          }),\n          radius: 3,\n        }),\n      }),\n      new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.2)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 1)\",\n            width: 2,\n          }),\n          points: 4,\n          radius: 8,\n          angle: Math.PI / 4,\n        }),\n        geometry: (feature) => {\n          var coordinates =\n            feature.getGeometry() instanceof Polygon\n              ? feature.getGeometry().getCoordinates()[0]\n              : feature.getGeometry().getCoordinates();\n          return new MultiPoint(coordinates);\n        },\n      }),\n    ];\n  }\n\n  getVectorStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 1)\",\n          width: 3,\n        }),\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 1)\",\n            width: 3,\n          }),\n          radius: 4,\n        }),\n      }),\n    ];\n  }\n\n  getHiddenStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0)\",\n          width: 0,\n        }),\n        fill: new Fill({\n          color: \"rgba(1, 2, 3, 0)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 0)\",\n            width: 0,\n          }),\n          radius: 0,\n        }),\n      }),\n    ];\n  }\n\n  getSketchStyle() {\n    return [\n      new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.5)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          width: 4,\n        }),\n        image: new Circle({\n          radius: 6,\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(255, 255, 255, 0.5)\",\n            width: 2,\n          }),\n        }),\n      }),\n    ];\n  }\n\n  filterByDefaultValue(features) {\n    return features.filter((feature) => {\n      return this.editSource.editableFields.some((field) => {\n        var value = feature.getProperties()[field.name];\n        if (field.hidden && value === field.defaultValue) {\n          return true;\n        }\n        return false;\n      });\n    });\n  }\n\n  loadDataSuccess = (data) => {\n    var format = new WFS();\n    var features;\n    try {\n      features = format.readFeatures(data);\n    } catch (e) {\n      alert(\"Fel: data kan inte läsas in. Kontrollera koordinatsystem.\");\n    }\n\n    // Make sure we have a name for geometry column. If there are features already,\n    // take a look at the first one and get geometry field's name from that first feature.\n    // If there are no features however, default to 'geom'. If we don't then OL will\n    // fallback to its own default geometry field name, which happens to be 'geometry' and not 'geom.\n    this.geometryName =\n      features.length > 0 ? features[0].getGeometryName() : \"geom\";\n\n    if (this.editSource.editableFields.some((field) => field.hidden)) {\n      features = this.filterByDefaultValue(features);\n    }\n\n    this.vectorSource.addFeatures(features);\n    this.vectorSource.getFeatures().forEach((feature) => {\n      feature.on(\"propertychange\", (e) => {\n        if (feature.modification === \"removed\") {\n          return;\n        }\n        if (feature.modification === \"added\") {\n          return;\n        }\n        feature.modification = \"updated\";\n      });\n      feature.on(\"change\", (e) => {\n        if (feature.modification === \"removed\") {\n          return;\n        }\n        if (feature.modification === \"added\") {\n          return;\n        }\n        feature.modification = \"updated\";\n      });\n    });\n  };\n\n  loadData(source, extent, done) {\n    // Prepare the URL for retrieving WFS data. We will want to set\n    // some search params later on, but we want to avoid any duplicates.\n    // The values we will set below should override any existing, if\n    // same key already exists in URL.\n    // To ensure it will happen, we read the possible current params…\n    const url = new URL(source.url);\n\n    // …and make sure that the keys are in UPPER CASE.\n    const existingSearchParams = {};\n    for (const [k, v] of url.searchParams.entries()) {\n      existingSearchParams[k.toUpperCase()] = v;\n    }\n\n    // Now we merge the possible existing params with the rest, defined\n    // below. We can be confident that we won't have duplicates and that\n    // our values \"win\", as they are defined last.\n    const mergedSearchParams = {\n      ...existingSearchParams,\n      SERVICE: \"WFS\",\n      VERSION: \"1.1.0\",\n      REQUEST: \"GetFeature\",\n      TYPENAME: source.layers[0],\n      SRSNAME: source.projection,\n    };\n\n    // Create a new URLSearchParams object from the merged object…\n    const searchParams = new URLSearchParams(mergedSearchParams);\n    // …and update our URL's search string with the new value\n    url.search = searchParams.toString();\n\n    // Send a String as HFetch doesn't currently accept true URL objects\n    hfetch(url.toString())\n      .then((response) => {\n        if (response.status !== 200) {\n          return done(\"data-load-error\");\n        }\n        response.text().then((data) => {\n          if (data.includes(\"ows:ExceptionReport\")) {\n            return done(\"data-load-error\");\n          }\n          this.loadDataSuccess(data);\n          return done(\"data-load-success\");\n        });\n      })\n      .catch((error) => {\n        console.warn(`Error loading vectorsource... ${error}`);\n        return done(\"data-load-error\");\n      });\n  }\n\n  editAttributes(feature) {\n    this.editFeature = feature;\n    this.observer.publish(\"editFeature\", feature);\n  }\n\n  featureSelected(event) {\n    if (event.selected.length === 0) {\n      this.editAttributes(null, null);\n    }\n\n    event.selected.forEach((feature) => {\n      if (!feature.getId() && feature.getProperties().user) {\n        this.select.getFeatures().remove(feature);\n      }\n      event.mapBrowserEvent.filty = true;\n      this.editAttributes(feature);\n    });\n  }\n\n  refreshEditingLayer() {\n    var mapLayers = this.map\n      .getLayers()\n      .getArray()\n      .filter(\n        (layer) => layer.getProperties().caption === this.editSource.caption\n      );\n\n    mapLayers.forEach((mapLayer) => {\n      if (mapLayer.getSource) {\n        let s = mapLayer.getSource();\n        if (s.clear) {\n          s.clear();\n        }\n        if (s.getParams) {\n          var params = s.getParams();\n          params.t = new Date().getMilliseconds();\n          s.updateParams(params);\n        }\n        if (s.changed) {\n          s.changed();\n        }\n      }\n    });\n  }\n\n  setLayer(serviceId, done) {\n    this.source = this.sources.find((source) => source.id === serviceId);\n    if (!this.source) {\n      this.source = {\n        id: serviceId,\n        url: \"http://localhost:81/geoserver/workspace_datastore_ckan_dataplatform_sandbox/ckan_geboorde-putten/ows\",\n        layers: [\n          \"workspace_datastore_ckan_dataplatform_sandbox:ckan_geboorde-putten\",\n        ],\n        editPoint: true,\n        projection: \"EPSG:28992\",\n        caption: \"Geboorde putten\",\n        uri: \"http://workspace_datastore_ckan_dataplatform_sandbox\",\n        editableFields: [\n          {\n            alias: \"x_coordinaat\",\n            name: \"http://workspace_datastore_ckan_dataplatform_sandbox:x_coordinaat\",\n            dataType: \"text\", // int | integer | number | decimal | date | date-time | dateTime | boolean\n            textType: \"\", // heltal | nummer | datum | date-time | boolean\n          },\n        ],\n      };\n    }\n    this.filty = true;\n    this.vectorSource = new VectorSource({\n      loader: (extent) => this.loadData(this.source, extent, done),\n      strategy: strategyAll,\n      projection: this.source.projection,\n    });\n\n    this.layer = new Vector({\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginEdit\",\n      caption: \"Edit layer\",\n      source: this.vectorSource,\n      style: this.getVectorStyle(),\n    });\n\n    if (this.layer) {\n      this.map.removeLayer(this.layer);\n    }\n\n    this.map.addLayer(this.layer);\n    this.editSource = this.source;\n    this.editFeature = null;\n    this.observer.publish(\"editSource\", this.source);\n    this.observer.publish(\"editFeature\", null);\n    this.observer.publish(\"layerChanged\", this.layer);\n  }\n\n  activateModify() {\n    this.select = new Select({\n      style: this.getSelectStyle(),\n      toggleCondition: never,\n      layers: [this.layer],\n    });\n\n    this.select.on(\"select\", (event) => {\n      this.featureSelected(event, this.source);\n    });\n\n    this.modify = new Modify({\n      features: this.select.getFeatures(),\n    });\n    this.map.addInteraction(this.select);\n    this.map.addInteraction(this.modify);\n  }\n\n  activateAdd(geometryType) {\n    this.draw = new Draw({\n      source: this.vectorSource,\n      style: this.getSketchStyle(),\n      type: geometryType,\n      stopClick: true,\n      geometryName: this.geometryName,\n    });\n    this.draw.on(\"drawend\", (event) => {\n      event.feature.modification = \"added\";\n      this.editAttributes(event.feature);\n      // OpenLayers seems to have a problem stopping the clicks if\n      // the draw interaction is removed too early. This fix is not pretty,\n      // but it gets the job done. It seems to be enough to remove the draw\n      // interaction after one cpu-cycle.\n      // If this is not added, the user will get a zoom-event when closing\n      // a polygon drawing.\n      setTimeout(() => {\n        this.deactivateInteraction();\n      }, 1);\n    });\n    this.map.addInteraction(this.draw);\n    this.map.clickLock.add(\"edit\");\n  }\n\n  activateRemove() {\n    this.remove = true;\n    this.map.on(\"singleclick\", this.removeSelected);\n  }\n\n  activateMove() {\n    this.move = new Translate({\n      layers: [this.layer],\n    });\n    this.map.addInteraction(this.move);\n  }\n\n  activateInteraction(type, geometryType) {\n    if (type === \"add\") {\n      this.activateAdd(geometryType);\n    }\n    if (type === \"move\") {\n      this.activateMove();\n    }\n    if (type === \"modify\") {\n      this.activateModify();\n    }\n    if (type === \"remove\") {\n      this.map.clickLock.add(\"edit\");\n      this.activateRemove();\n    }\n\n    // Add snap after all interactions have been added\n    this.map.snapHelper.add(\"measure\");\n  }\n\n  removeSelected = (e) => {\n    this.map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      if (this.vectorSource.getFeatures().some((f) => f === feature)) {\n        if (feature.modification === \"added\") {\n          feature.modification = undefined;\n        } else {\n          feature.modification = \"removed\";\n        }\n        feature.setStyle(this.getHiddenStyle());\n      }\n    });\n  };\n\n  deactivateInteraction() {\n    // First remove the snap interaction\n    this.map.snapHelper.delete(\"measure\");\n\n    // Next, remove correct map interaction\n    if (this.select) {\n      this.map.removeInteraction(this.select);\n    }\n    if (this.modify) {\n      this.map.removeInteraction(this.modify);\n    }\n    if (this.draw) {\n      this.map.removeInteraction(this.draw);\n    }\n    if (this.move) {\n      this.map.removeInteraction(this.move);\n    }\n    if (this.remove) {\n      this.remove = false;\n      this.map.clickLock.delete(\"edit\");\n      this.map.un(\"singleclick\", this.removeSelected);\n    }\n  }\n\n  reset() {\n    this.editSource = undefined;\n    this.editFeature = undefined;\n    this.removeFeature = undefined;\n    this.removalToolMode = \"off\";\n    this.filty = false;\n    this.map.clickLock.delete(\"edit\");\n\n    if (this.layer) {\n      this.map.removeLayer(this.layer);\n      this.layer = undefined;\n    }\n    this.deactivateInteraction();\n  }\n\n  resetEditFeature = () => {\n    this.editFeatureBackup = this.editFeature;\n    this.editFeature = undefined;\n    this.observer.publish(\"editFeature\", this.editFeature);\n  };\n\n  deactivate() {\n    this.reset();\n    this.observer.publish(\"editFeature\", this.editFeature);\n    this.observer.publish(\"editSource\", this.editSource);\n    this.observer.publish(\"deactivate\");\n  }\n\n  getSources() {\n    return this.options.sources;\n  }\n}\n\nexport default EditModel;\n"],"names":["constructor","settings","loadDataSuccess","data","features","format","WFS","readFeatures","e","alert","this","geometryName","length","getGeometryName","editSource","editableFields","some","field","hidden","filterByDefaultValue","vectorSource","addFeatures","getFeatures","forEach","feature","on","modification","removeSelected","map","forEachFeatureAtPixel","pixel","f","undefined","setStyle","getHiddenStyle","resetEditFeature","editFeatureBackup","editFeature","observer","publish","console","log","options","title","app","activeServices","sources","layer","select","modify","key","removeFeature","shell","instruction","filty","removalToolMode","id","url","layers","projection","caption","uri","s","trim","URL","searchParams","delete","href","write","lr","split","fp","ft","featureNS","featurePrefix","featureType","hasZ","version","srsName","writeTransaction","inserts","updates","deletes","refreshLayer","layerName","source","foundLayer","getLayers","getArray","find","match","getSource","getParams","params","paramName","Array","isArray","LAYERS","layerSplit","changed","updateParams","time","Date","now","updateSize","parseWFSTresponse","response","str","XMLSerializer","serializeToString","X2JS","xml2js","transact","done","node","serializer","src","payload","hfetch","method","body","credentials","headers","then","text","wfsResponseText","resXml","ExceptionReport","TransactionResponse","filter","catch","errorMessage","save","mode","unset","getSelectStyle","Style","stroke","Stroke","color","width","fill","Fill","image","Circle","radius","RegularShape","points","angle","Math","PI","geometry","coordinates","getGeometry","Polygon","getCoordinates","MultiPoint","getVectorStyle","getSketchStyle","value","getProperties","name","defaultValue","loadData","extent","existingSearchParams","k","v","entries","toUpperCase","mergedSearchParams","SERVICE","VERSION","REQUEST","TYPENAME","SRSNAME","URLSearchParams","search","toString","status","includes","error","warn","editAttributes","featureSelected","event","selected","getId","user","remove","mapBrowserEvent","refreshEditingLayer","mapLayer","clear","t","getMilliseconds","setLayer","serviceId","editPoint","alias","dataType","textType","VectorSource","loader","strategy","strategyAll","Vector","layerType","zIndex","style","removeLayer","addLayer","activateModify","Select","toggleCondition","never","Modify","addInteraction","activateAdd","geometryType","draw","Draw","type","stopClick","setTimeout","deactivateInteraction","clickLock","add","activateRemove","activateMove","move","Translate","activateInteraction","snapHelper","removeInteraction","un","reset","deactivate","getSources"],"sourceRoot":""}
