{"version":3,"file":"static/js/4567.6f45344c.chunk.js","mappings":"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","sources":["plugins/Collector/components/Page.js","plugins/Collector/components/Toolbar.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Parser from \"html2json\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport NativeSelect from \"@mui/material/NativeSelect\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Slide from \"@mui/material/Slide\";\nimport Toolbar from \"./Toolbar.js\";\nimport { withSnackbar } from \"notistack\";\n\nconst PageContent = styled(\"div\")(() => ({\n  height: \"calc(100% - 60px)\",\n  overflowX: \"hidden\",\n  borderBottom: \"1px solid #ccc\",\n}));\n\nconst PageContentInner = styled(\"div\")(() => ({\n  paddingBottom: \"10px\",\n}));\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    if (props.page.text) {\n      var json = Parser.html2json(props.page.text);\n      this.state = {\n        json: json,\n        displayThankYou: false,\n      };\n      this.formErrors = {};\n    }\n  }\n\n  getError(field) {\n    return this.formErrors.hasOwnProperty(field.name) ? (\n      <div>{this.formErrors[field.name]}</div>\n    ) : null;\n  }\n\n  checkInteger(name, value) {\n    var formValues = Object.assign({}, this.props.model.formValues);\n    if (/^\\d+$/.test(value) || value === \"\") {\n      formValues[name] = value;\n    } else {\n      if (!this.props.model.formValues[name]) {\n        formValues[name] = \"\";\n      }\n    }\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  checkNumber(name, value) {\n    var formValues = Object.assign({}, this.props.model.formValues);\n    if (/^\\d+([.,](\\d+)?)?$/.test(value) || value === \"\") {\n      value = value.replace(\",\", \".\");\n      formValues[name] = value;\n    } else {\n      if (!this.props.model.formValues[name]) {\n        formValues[name] = \"\";\n      }\n    }\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  checkUrl(name, value) {\n    var regex =\n      /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|\\/|\\?)*)?$/i;\n    var valid = regex.test(value);\n    var formValues = Object.assign({}, this.props.model.formValues);\n    if (valid || value === \"\") {\n      formValues[name] = value;\n      delete this.formErrors[name];\n    } else {\n      formValues[name] = \"\";\n      this.formErrors[name] =\n        \"Ange en giltig url. t.ex. https://www.example.com\";\n    }\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  checkText(name, value) {\n    var formValues = Object.assign({}, this.props.model.formValues);\n    formValues[name] = value;\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  checkSelect(name, value) {\n    var formValues = Object.assign({}, this.props.model.formValues);\n    formValues[name] = value;\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  checkMultiple(name, checked, value, index) {\n    var formValues = Object.assign({}, this.props.model.formValues);\n    formValues[name][index].checked = checked;\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  checkDate(name, date) {\n    var formValues = Object.assign({}, this.props.model.formValues);\n    formValues[name] = date;\n    this.props.model.formValues = formValues;\n    this.forceUpdate();\n  }\n\n  getValueMarkup(field, label) {\n    if (!field) return null;\n\n    if (field.dataType === \"int\") {\n      field.textType = \"heltal\";\n    }\n\n    if (field.dataType === \"number\") {\n      field.textType = \"nummer\";\n    }\n\n    if (field.dataType === \"date\") {\n      field.textType = \"datum\";\n    }\n\n    var value = this.props.model.formValues[field.name];\n\n    if (value === undefined || value === null) {\n      value = \"\";\n    }\n\n    if (value === \"\" && field.initialRender) {\n      if (field.defaultValue !== null) {\n        value = field.defaultValue;\n      }\n    }\n\n    if (Array.isArray(label)) {\n      label = label.join(\" \");\n    }\n\n    switch (field.textType) {\n      case \"heltal\":\n        return (\n          <TextField\n            id={field.id}\n            label={label || field.name}\n            sx={{ minWidth: \"60%\" }}\n            margin=\"normal\"\n            value={value}\n            onChange={(e) => {\n              this.checkInteger(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n          />\n        );\n      case \"nummer\":\n        return (\n          <TextField\n            id={field.id}\n            label={label || field.name}\n            sx={{ minWidth: \"60%\" }}\n            margin=\"normal\"\n            value={value}\n            onChange={(e) => {\n              this.checkNumber(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n          />\n        );\n      case \"datum\":\n        return (\n          <TextField\n            id={field.id}\n            label={label || field.name}\n            sx={{ minWidth: \"60%\" }}\n            type=\"datetime-local\"\n            margin=\"normal\"\n            value={value}\n            onChange={(e) => {\n              this.checkDate(field.name, e.target.value);\n              field.initialRender = false;\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        );\n      case \"url\":\n      case \"fritext\":\n        return (\n          <>\n            <TextField\n              id={field.id}\n              multiline\n              label={label || field.name}\n              sx={{ minWidth: \"60%\" }}\n              margin=\"normal\"\n              value={value}\n              onChange={(e) => {\n                this.checkText(field.name, e.target.value);\n                field.initialRender = false;\n              }}\n              onBlur={(e) => {\n                if (field.textType === \"url\") {\n                  this.checkUrl(field.name, e.target.value);\n                }\n                field.initialRender = false;\n              }}\n            />\n            {this.getError(field)}\n          </>\n        );\n      case \"flerval\":\n        let defaultValues = [];\n        if (typeof field.defaultValue === \"string\") {\n          defaultValues = field.defaultValue.split(\",\");\n        }\n        if (field.initialRender) {\n          defaultValues.forEach((defaultValue) => {\n            value.forEach((val) => {\n              if (defaultValue === val.value) {\n                val.checked = true;\n              }\n            });\n          });\n        }\n\n        let checkboxes = field.values.map((val, i) => {\n          var id = field.name + i,\n            item = (Array.isArray(value) &&\n              value.find((item) => item.value === val)) || {\n              checked: false,\n            };\n\n          return (\n            <FormControlLabel\n              key={id}\n              control={\n                <Checkbox\n                  checked={item.checked}\n                  onChange={(e) => {\n                    this.checkMultiple(field.name, e.target.checked, val, i);\n                    field.initialRender = false;\n                  }}\n                />\n              }\n              label={val}\n            />\n          );\n        });\n        return (\n          <div>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">{label || field.name}</FormLabel>\n              <FormGroup>{checkboxes}</FormGroup>\n            </FormControl>\n          </div>\n        );\n      case \"lista\":\n        let options = [];\n        if (Array.isArray(field.values)) {\n          options = field.values.map((val, i) => (\n            <option key={i} value={val}>\n              {val}\n            </option>\n          ));\n          if (field.defaultValue === undefined || field.defaultValue === \"\") {\n            options.unshift(\n              <option key=\"-1\" value=\"\">\n                -Välj värde-\n              </option>\n            );\n          }\n        }\n\n        if ((!value || value === \"\") && field.defaultValue) {\n          value = field.defaultValue;\n          if (field.initialRender !== false) {\n            setTimeout(() => {\n              this.checkSelect(field.name, value);\n            }, 0);\n          }\n        }\n\n        return (\n          <div>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">{label || field.name}</FormLabel>\n              <NativeSelect\n                value={value}\n                input={<Input name={field.name} id={field.name} />}\n                onChange={(e) => {\n                  this.checkSelect(field.name, e.target.value);\n                  field.initialRender = false;\n                }}\n              >\n                {options}\n              </NativeSelect>\n            </FormControl>\n          </div>\n        );\n      case null:\n        return <span>{value}</span>;\n      default:\n        return <span>{value}</span>;\n    }\n  }\n\n  getFieldConfig(fieldName) {\n    return this.props.serviceConfig.editableFields.find(\n      (field) => field.name === fieldName\n    );\n  }\n\n  renderFromAttribute(attr) {\n    if (attr) {\n      if (attr.type && attr.type === \"toolbar\") {\n        return (\n          <Toolbar\n            ref=\"toolbar\"\n            field={attr.field}\n            geotype={attr.geotype}\n            serviceConfig={this.props.serviceConfig}\n            enabled={true}\n            model={this.props.model}\n            onChangeTool={() => {\n              if (window.innerWidth < 600) {\n                this.props.model.globalObserver.publish(\"core.minimizeWindow\");\n                this.props.enqueueSnackbar(\n                  \"Klicka i kartan för att rita objekt\"\n                );\n              }\n            }}\n          />\n        );\n      }\n      if (attr.field) {\n        return this.getValueMarkup(this.getFieldConfig(attr.field), attr.label);\n      }\n    } else {\n      return null;\n    }\n  }\n\n  renderFromJsonDom(json) {\n    if (json && json.child) {\n      return json.child.map((child, i) => {\n        if (child.node === \"element\") {\n          switch (child.tag) {\n            case \"div\":\n              return (\n                <div key={i}>\n                  {this.renderFromAttribute(child.attr)}\n                  {this.renderFromJsonDom(child)}\n                </div>\n              );\n            case \"p\":\n              return (\n                <p key={i}>\n                  {this.renderFromAttribute(child.attr)}\n                  {this.renderFromJsonDom(child)}\n                </p>\n              );\n            case \"label\":\n              return <label key={i}>{this.renderFromJsonDom(child)}</label>;\n            case \"h1\":\n              return (\n                <Typography variant=\"h1\" key={i}>\n                  {this.renderFromJsonDom(child)}\n                </Typography>\n              );\n            case \"h2\":\n              return (\n                <Typography variant=\"h2\" key={i}>\n                  {this.renderFromJsonDom(child)}\n                </Typography>\n              );\n            case \"h3\":\n              return (\n                <Typography variant=\"h3\" key={i}>\n                  {this.renderFromJsonDom(child)}\n                </Typography>\n              );\n            case \"h4\":\n              return (\n                <Typography variant=\"h4\" key={i}>\n                  {this.renderFromJsonDom(child)}\n                </Typography>\n              );\n            case \"h5\":\n              return (\n                <Typography variant=\"h5\" key={i}>\n                  {this.renderFromJsonDom(child)}\n                </Typography>\n              );\n            case \"h6\":\n              return (\n                <Typography variant=\"h6\" key={i}>\n                  {this.renderFromJsonDom(child)}\n                </Typography>\n              );\n            case \"a\":\n              return (\n                <a\n                  key={i}\n                  href={child.attr[\"href\"]}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  {this.renderFromJsonDom(child)}\n                </a>\n              );\n            case \"ul\":\n              return <ul key={i}>{this.renderFromJsonDom(child)}</ul>;\n            case \"li\":\n              return <li key={i}>{this.renderFromJsonDom(child)}</li>;\n            case \"br\":\n              return <br key={i} />;\n            case \"img\":\n              return (\n                <img\n                  key={i}\n                  src={child.attr[\"src\"]}\n                  width={child.attr[\"width\"]}\n                  height={child.attr[\"height\"]}\n                  alt={child.attr[\"alt\"]}\n                >\n                  {this.renderFromJsonDom(child)}\n                </img>\n              );\n            default:\n              return null;\n          }\n        }\n        if (child.node === \"text\") {\n          return <span key={i}>{child.text}</span>;\n        }\n        return null;\n      });\n    } else {\n      return null;\n    }\n  }\n\n  save = () => {\n    this.props.model.save(\n      (r) => {\n        if (\n          r &&\n          r.TransactionResponse &&\n          r.TransactionResponse.TransactionSummary &&\n          r.TransactionResponse.TransactionSummary.totalInserted\n        ) {\n          const ins =\n            r.TransactionResponse.TransactionSummary.totalInserted.toString();\n          if (Number(ins) > 0) {\n            if (this.props.options.showThankYou) {\n              this.setState({\n                displayThankYou: true,\n              });\n            } else {\n              this.setState(\n                {\n                  displayThankYou: true,\n                },\n                () => {\n                  this.props.model.observer.publish(\"abort\");\n                }\n              );\n            }\n          } else {\n            this.saveError();\n          }\n        } else {\n          this.saveError();\n        }\n      },\n      (error) => {\n        this.saveError();\n      }\n    );\n  };\n\n  saveError = () => {\n    this.props.model.globalObserver.publish(\n      \"core.alert\",\n      \"Det gick inte att spara, försök igen senare.\"\n    );\n  };\n\n  renderButtons() {\n    const { page, numPages, onPrevPage, onNextPage } = this.props;\n\n    const prevButton = (\n      <Button\n        variant=\"contained\"\n        sx={{ float: \"left\", margin: 1 }}\n        onClick={() => {\n          if (typeof this.refs.toolbar !== \"undefined\") {\n            this.refs.toolbar.storeValues();\n          }\n          onPrevPage();\n        }}\n      >\n        <ArrowBackIcon />\n      </Button>\n    );\n\n    const nextButton = (\n      <Button\n        variant=\"contained\"\n        sx={{ float: \"right\", margin: 1 }}\n        onClick={() => {\n          if (typeof this.refs.toolbar !== \"undefined\") {\n            this.refs.toolbar.storeValues();\n          }\n          onNextPage();\n        }}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    );\n\n    const sendButton = (\n      <Button\n        variant=\"contained\"\n        sx={{ float: \"right\", margin: 1 }}\n        onClick={this.save}\n      >\n        Skicka\n      </Button>\n    );\n\n    const okButton = (\n      <Button\n        variant=\"contained\"\n        sx={{ float: \"right\", margin: 1 }}\n        onClick={() => {\n          this.props.model.observer.publish(\"abort\");\n        }}\n      >\n        {this.props.options.collectAgain ? \"Tyck till igen\" : \"Stäng\"}\n      </Button>\n    );\n\n    const closeButton = (\n      <Button\n        variant=\"contained\"\n        sx={{ float: \"right\", margin: 1 }}\n        onClick={() => {\n          this.props.model.app.windows.forEach((window) => {\n            if (window.type === \"collector\") {\n              window.closeWindow();\n            }\n          });\n        }}\n      >\n        Sluiten\n      </Button>\n    );\n\n    if (this.state.displayThankYou) {\n      if (this.props.options.collectAgain) {\n        return (\n          <div>\n            {okButton}\n            {closeButton}\n          </div>\n        );\n      } else {\n        return <div>{okButton}</div>;\n      }\n    }\n\n    if (numPages === 1) {\n      return <div>{sendButton}</div>;\n    }\n    if (numPages > 1 && page.order === numPages - 1) {\n      return (\n        <div>\n          {prevButton}\n          {sendButton}\n        </div>\n      );\n    }\n    if (page.order > 0 && page.order < numPages - 1) {\n      return (\n        <div>\n          {prevButton}\n          {nextButton}\n        </div>\n      );\n    }\n    if (page.order === 0) {\n      return <div>{nextButton}</div>;\n    }\n\n    return null;\n  }\n\n  createMarkup = () => {\n    return {\n      __html: this.props.options.thankYou,\n    };\n  };\n\n  renderThankYou() {\n    return <div dangerouslySetInnerHTML={this.createMarkup()}></div>;\n  }\n\n  renderSlide() {\n    const { page } = this.props;\n    const { json } = this.state;\n    return (\n      <Slide\n        direction={this.props.direction || \"left\"}\n        in={true}\n        mountOnEnter\n        unmountOnExit\n        sx={{ height: \"100%\" }}\n      >\n        <div>\n          <Typography variant=\"h4\">{page.header}</Typography>\n          <PageContentInner>{this.renderFromJsonDom(json)}</PageContentInner>\n        </div>\n      </Slide>\n    );\n  }\n\n  render() {\n    const { displayThankYou } = this.state;\n    return (\n      this.props.active && (\n        <Box sx={{ height: \"100%\" }}>\n          <PageContent>\n            {displayThankYou ? this.renderThankYou() : this.renderSlide()}\n          </PageContent>\n          <div>{this.renderButtons()}</div>\n        </Box>\n      )\n    );\n  }\n}\n\nexport default withSnackbar(Page);\n","import React, { Component } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport ScatterPlotIcon from \"@mui/icons-material/ScatterPlot\";\nimport BorderStyleIcon from \"@mui/icons-material/BorderStyle\";\nimport LinearScaleIcon from \"@mui/icons-material/LinearScale\";\nimport Typography from \"@mui/material/Typography\";\nimport WKT from \"ol/format/WKT\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"115px\",\n}));\n\nconst ToolbarDiv = styled(\"div\")(({ theme }) => ({\n  margin: \"5px\",\n}));\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTool: undefined,\n    };\n    this.props.model.observer.subscribe(\"abortInteraction\", () => {\n      this.setState({\n        activeTool: undefined,\n      });\n    });\n\n    // Clear layer and attempt to read saved values\n    if (this.props.model.wkt) {\n      this.props.model.vectorSource.clear();\n\n      const format = new WKT();\n      const WKTString = this.props.model.formValues[this.props.field];\n      if (WKTString && WKTString.length > 0) {\n        let features = format.readFeatures(WKTString);\n        features.forEach((feature) => {\n          this.props.model.vectorSource.addFeature(feature);\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.model.observer.unsubscribe(\"abortInteraction\");\n    this.props.model.deactivateInteraction();\n  }\n\n  changeTool(type, geometryType) {\n    const { model } = this.props;\n    this.props.onChangeTool();\n    if (geometryType && this.state.activeTool === geometryType.toLowerCase()) {\n      model.deactivateInteraction();\n      return this.setState({\n        activeTool: undefined,\n      });\n    }\n    if (this.state.activeTool === type) {\n      model.deactivateInteraction();\n      return this.setState({\n        activeTool: undefined,\n      });\n    }\n    model.deactivateInteraction();\n\n    switch (type) {\n      case \"add\":\n        model.activateInteraction(\"add\", geometryType);\n        break;\n      case \"remove\":\n        model.activateInteraction(\"remove\");\n        break;\n      case \"modify\":\n        model.activateInteraction(\"modify\");\n        break;\n      case \"move\":\n        model.activateInteraction(\"move\");\n        break;\n      default:\n        break;\n    }\n  }\n\n  onAddPointClicked() {\n    this.setState({ activeTool: \"point\" });\n    this.changeTool(\"add\", \"Point\");\n  }\n\n  onAddLineClicked() {\n    this.setState({ activeTool: \"linestring\" });\n    this.changeTool(\"add\", \"LineString\");\n  }\n\n  onAddPolygonClicked() {\n    this.setState({ activeTool: \"polygon\" });\n    this.changeTool(\"add\", \"Polygon\");\n  }\n\n  getStatusMessage(data) {\n    if (!data) {\n      return (\n        <Typography>\n          Uppdateringen lyckades men det upptäcktes inte några ändringar.\n        </Typography>\n      );\n    }\n    if (data.ExceptionReport) {\n      return (\n        <Typography>\n          Uppdateringen misslyckades:{\" \"}\n          {data.ExceptionReport.Exception.ExceptionText.toString()}\n        </Typography>\n      );\n    }\n    if (\n      data.TransactionResponse &&\n      data.TransactionResponse.TransactionSummary\n    ) {\n      return (\n        <div>\n          <Typography>Uppdateringen lyckades.</Typography>\n          <Typography>\n            Antal skapade objekt:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalInserted.toString()}\n          </Typography>\n          <Typography>\n            Antal borttagna objekt:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalDeleted.toString()}\n          </Typography>\n          <Typography>\n            Antal uppdaterade objekt:{\" \"}\n            {data.TransactionResponse.TransactionSummary.totalUpdated.toString()}\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <Typography>\n          Status för uppdateringen kunde inte avläsas ur svaret från servern.\n        </Typography>\n      );\n    }\n  }\n\n  onSaveClicked() {\n    if (!this.props.model.editSource) {\n      return;\n    }\n    this.props.model.save((response) => {\n      this.props.model.filty = false;\n      this.props.model.refreshEditingLayer();\n      this.props.app.globalObserver.publish(\n        \"core.alert\",\n        this.getStatusMessage(response)\n      );\n    });\n  }\n\n  onCancelClicked() {\n    this.props.model.deactivate();\n    this.props.panel.setState({\n      checked: false,\n      enabled: false,\n      selectedSource: false,\n    });\n    this.setState({\n      activeTool: undefined,\n    });\n  }\n\n  getSelectedStyle(type) {\n    var style = {};\n    if (type === this.state.activeTool) {\n      style.backgroundColor = \"#ccc\";\n    }\n    return style;\n  }\n\n  storeValues() {\n    // Stores any potential features found on the map as WKT before taking the next or previous step.\n    //These are later pushed to the server on submission.\n    //They are also put on the map again if the user comes back to this step.\n    if (!this.props.model.wkt) {\n      return;\n    }\n    const format = new WKT();\n    let wkt = \"\";\n\n    if (this.props.model.vectorSource.getFeatures().length > 0) {\n      wkt = format.writeFeatures(this.props.model.vectorSource.getFeatures());\n    }\n\n    // Store the converted features in the model\n    let formValues = Object.assign({}, this.props.model.formValues);\n    formValues[this.props.field] = wkt;\n    this.props.model.formValues = formValues;\n    // Clear layer\n    this.props.model.vectorSource.clear();\n  }\n\n  render() {\n    const source = this.props.serviceConfig;\n    var disabled = !this.props.enabled,\n      editPoint = false,\n      editPolygon = false,\n      editLine = false;\n\n    if (this.props.model.wkt) {\n      // WKT gets the information from the tag since there is support for multiple toolbars\n      // Different toolbars can therefore support different types of geometries\n      editPoint = this.props.geotype.indexOf(\"point\") !== -1;\n      editPolygon = this.props.geotype.indexOf(\"polygon\") !== -1;\n      editLine = this.props.geotype.indexOf(\"line\") !== -1;\n    } else if (source) {\n      // Non-WKT only supports insertion of one geometry so it can be retrieved from the source\n      editPoint = source.editPoint;\n      editLine = source.editLine;\n      editPolygon = source.editPolygon;\n    }\n\n    return (\n      <div>\n        <ToolbarDiv>\n          <div>\n            <StyledButton\n              variant=\"contained\"\n              disabled={disabled === false ? !editPoint : disabled}\n              onClick={() => {\n                this.onAddPointClicked();\n              }}\n              type=\"button\"\n              title=\"Lägg till plats\"\n              style={this.getSelectedStyle(\"point\")}\n            >\n              Plats\n              <ScatterPlotIcon sx={{ marginLeft: 1 }} />\n            </StyledButton>\n            <StyledButton\n              variant=\"contained\"\n              disabled={disabled === false ? !editLine : disabled}\n              onClick={() => {\n                this.onAddLineClicked();\n              }}\n              type=\"button\"\n              title=\"Lägg till sträcka\"\n              style={this.getSelectedStyle(\"linestring\")}\n            >\n              Sträcka\n              <LinearScaleIcon sx={{ marginLeft: 1 }} />\n            </StyledButton>\n            <StyledButton\n              variant=\"contained\"\n              disabled={disabled === false ? !editPolygon : disabled}\n              onClick={() => {\n                this.onAddPolygonClicked();\n              }}\n              type=\"button\"\n              title=\"Lägg till område\"\n              style={this.getSelectedStyle(\"polygon\")}\n            >\n              Område\n              <BorderStyleIcon sx={{ marginLeft: 1 }} />\n            </StyledButton>\n          </div>\n        </ToolbarDiv>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n"],"names":["PageContent","styled","height","overflowX","borderBottom","PageContentInner","paddingBottom","Page","Component","constructor","props","super","save","this","model","r","TransactionResponse","TransactionSummary","totalInserted","ins","toString","Number","options","showThankYou","setState","displayThankYou","observer","publish","saveError","error","globalObserver","createMarkup","__html","thankYou","page","text","json","Parser","state","formErrors","getError","field","hasOwnProperty","name","checkInteger","value","formValues","Object","assign","test","forceUpdate","checkNumber","replace","checkUrl","valid","checkText","checkSelect","checkMultiple","checked","index","checkDate","date","getValueMarkup","label","dataType","textType","undefined","initialRender","defaultValue","Array","isArray","join","id","sx","minWidth","margin","onChange","e","target","type","InputLabelProps","shrink","multiline","onBlur","defaultValues","split","forEach","val","checkboxes","values","map","i","item","find","control","component","unshift","setTimeout","input","getFieldConfig","fieldName","serviceConfig","editableFields","renderFromAttribute","attr","ref","geotype","enabled","onChangeTool","window","innerWidth","enqueueSnackbar","renderFromJsonDom","child","node","tag","variant","href","rel","src","width","alt","renderButtons","numPages","onPrevPage","onNextPage","prevButton","float","onClick","refs","toolbar","storeValues","nextButton","sendButton","okButton","collectAgain","closeButton","app","windows","closeWindow","order","renderThankYou","dangerouslySetInnerHTML","renderSlide","direction","in","mountOnEnter","unmountOnExit","header","render","active","withSnackbar","StyledButton","Button","theme","spacing","ToolbarDiv","Toolbar","activeTool","subscribe","wkt","vectorSource","clear","format","WKT","WKTString","length","readFeatures","feature","addFeature","componentWillUnmount","unsubscribe","deactivateInteraction","changeTool","geometryType","toLowerCase","activateInteraction","onAddPointClicked","onAddLineClicked","onAddPolygonClicked","getStatusMessage","data","ExceptionReport","Exception","ExceptionText","totalDeleted","totalUpdated","onSaveClicked","editSource","response","filty","refreshEditingLayer","onCancelClicked","deactivate","panel","selectedSource","getSelectedStyle","style","backgroundColor","getFeatures","writeFeatures","source","disabled","editPoint","editPolygon","editLine","indexOf","title","marginLeft"],"sourceRoot":""}