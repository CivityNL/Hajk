{"version":3,"file":"static/js/3332.960aa3f1.chunk.js","mappings":"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","sources":["plugins/TimeSlider/TimeSliderView.js","plugins/TimeSlider/components/TimeSliderSettings.js","../node_modules/@mui/icons-material/ArrowForward.js","../node_modules/@mui/icons-material/Pause.js","../node_modules/@mui/icons-material/PlayArrow.js","../node_modules/@mui/icons-material/RotateLeftOutlined.js","../node_modules/@mui/icons-material/SettingsOutlined.js"],"sourcesContent":["import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { Slider, Button, Badge, Grid, Tooltip } from \"@mui/material\";\nimport { Vector as VectorLayer } from \"ol/layer\";\n\nimport TimeSliderSettings from \"./components/TimeSliderSettings.js\";\nimport Dialog from \"../../components/Dialog/Dialog\";\n\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport RotateLeftOutlinedIcon from \"@mui/icons-material/RotateLeftOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\n\nclass TimeSliderView extends React.PureComponent {\n  static propTypes = {\n    map: PropTypes.object.isRequired,\n    localObserver: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      resolution: this.props.defaultResolution || \"years\",\n      stepSize: this.getStepSize(this.props.defaultResolution || \"years\"),\n      loadingError: true,\n      layerStatus: this.validateLayers(),\n      settingsDialog: false,\n      sliderSpeed: 1000,\n    };\n\n    this.map = props.map;\n    this.layers = props.layers;\n    this.startTime = this.getTime(\"timeSliderStart\");\n    this.endTime = this.getTime(\"timeSliderEnd\");\n    this.marks = this.getMarks(5); //Prop is number of marks no the slider\n    this.markResolution = \"\";\n    this.localObserver = props.localObserver;\n    this.bindSubscriptions();\n  }\n\n  componentDidMount() {\n    if (this.props.visibleAtStart === true) {\n      this.initiateTimeSliderView();\n    }\n  }\n\n  bindSubscriptions = () => {\n    this.localObserver.subscribe(\"initiateTimeSliderView\", () => {\n      this.initiateTimeSliderView();\n    });\n\n    this.localObserver.subscribe(\"resetTimeSliderView\", () => {\n      this.resetTimeSliderView();\n    });\n\n    this.localObserver.subscribe(\"resetTimeSlider\", () => {\n      this.resetTimeSlider();\n    });\n\n    this.localObserver.subscribe(\"toggleSlider\", (enabled) => {\n      this.toggleSlider(enabled);\n    });\n  };\n\n  validateLayers = () => {\n    const { layers } = this.props;\n    const layerStatus = {\n      error: false,\n      errorType: \"\",\n      faultyLayers: [],\n    };\n\n    if (layers.length === 0) {\n      layerStatus.error = true;\n      layerStatus.errorType = \"layers_missing\";\n    }\n\n    layers.forEach((layer) => {\n      if (!layer.get(\"timeSliderStart\") || !layer.get(\"timeSliderEnd\")) {\n        layerStatus.error = true;\n        layerStatus.errorType = \"layer_error\";\n        layerStatus.faultyLayers.push({\n          layerId: layer.get(\"name\"),\n          layerError: \"date_missing\",\n        });\n      }\n      if (layer.get(\"timeSliderStart\") === layer.get(\"timeSliderEnd\")) {\n        layerStatus.error = true;\n        layerStatus.errorType = \"layer_error\";\n        layerStatus.faultyLayers.push({\n          layerId: layer.get(\"name\"),\n          layerError: \"date_start_equals_end\",\n        });\n      }\n    });\n\n    return layerStatus;\n  };\n\n  initiateTimeSliderView = () => {\n    this.setState(\n      {\n        currentUnixTime: this.startTime,\n      },\n      () => {\n        this.initiateTimeLineLayers();\n        this.refreshLayers();\n      }\n    );\n  };\n\n  resetTimeSliderView = () => {\n    this.resetTimeSlider();\n    this.resetTimeLineLayers();\n  };\n\n  resetTimeSlider = () => {\n    this.toggleSlider(false);\n\n    this.localObserver.publish(\"updateHeaderTitle\", \"\");\n    this.setState(\n      {\n        currentUnixTime: this.startTime,\n      },\n      () => {\n        this.refreshLayers();\n      }\n    );\n  };\n\n  initiateTimeLineLayers = () => {\n    this.layers.forEach((layer) => {\n      const source = layer.getSource();\n      if (layer instanceof VectorLayer) {\n        source.originalStyleFunction = layer.getStyleFunction();\n        source.on(\"addfeature\", this.handleFeatureAdded);\n        layer.setStyle(null);\n      } else {\n        source.updateParams({\n          TIME: new Date(this.state.currentUnixTime).toISOString(),\n        });\n      }\n      layer.setVisible(true);\n    });\n  };\n\n  resetTimeLineLayers = () => {\n    this.layers.forEach((layer) => {\n      const source = layer.getSource();\n      if (layer instanceof VectorLayer) {\n        source.un(\"addfeature\", this.handleFeatureAdded);\n        layer.setStyle(source.originalStyleFunction);\n        layer.setVisible(false);\n      } else {\n        source.updateParams({\n          TIME: undefined,\n        });\n        layer.setVisible(false);\n      }\n    });\n  };\n\n  handleFeatureAdded = (event) => {\n    const source = event.target;\n    const feature = event.feature;\n    this.getTimeSliderLayerStyle(feature, source.originalStyleFunction);\n  };\n\n  refreshLayers = () => {\n    this.layers.forEach((layer) => {\n      if (layer instanceof VectorLayer) {\n        layer.getSource().refresh();\n      } else {\n        layer.getSource().updateParams({\n          TIME: new Date(this.startTime).toISOString(),\n        });\n      }\n    });\n  };\n\n  getUnixTimeFromString = (str) => {\n    const y = str.substr(0, 4),\n      m = str.substr(4, 2),\n      d = str.substr(6, 2);\n\n    return new Date(`${y}-${m}-${d}`).getTime();\n  };\n\n  getTime = (type) => {\n    let time = undefined;\n    this.layers.forEach((layer) => {\n      const layerTime = layer.get(type);\n      if (layerTime) {\n        let layerUnixTime = this.getUnixTimeFromString(layerTime);\n        if (!time) time = layerUnixTime;\n\n        if (type === \"timeSliderStart\" && time > layerUnixTime) {\n          time = layerUnixTime;\n        } else if (type === \"timeSliderEnd\" && time < layerUnixTime) {\n          time = layerUnixTime;\n        }\n      }\n    });\n    return time;\n  };\n\n  shouldFeatureShow = (feature) => {\n    const { currentUnixTime } = this.state;\n    const featureStart = feature.get(\"start\");\n    const featureEnd = feature.get(\"end\");\n\n    if (!featureStart || !featureEnd) {\n      return false;\n    }\n    let startDate = new Date(featureStart);\n    let endDate = new Date(featureEnd);\n    if (!startDate.getTime() > 0 || !endDate.getTime() > 0) {\n      startDate = this.getUnixTimeFromString(featureStart);\n      endDate = this.getUnixTimeFromString(featureEnd);\n    }\n    if (startDate <= currentUnixTime && endDate >= currentUnixTime) {\n      return true;\n    }\n    return false;\n  };\n\n  getTimeSliderLayerStyle(feature, originalStyleFunction) {\n    if (this.shouldFeatureShow(feature)) {\n      feature.setStyle(originalStyleFunction);\n    } else {\n      feature.setStyle(null);\n    }\n  }\n\n  toggleSlider = (enabled) => {\n    this.setState({ playing: enabled });\n    this.localObserver.publish(\"toggleHeaderPlayButton\", enabled);\n    if (enabled) {\n      clearInterval(this.sliderTimer);\n      this.sliderTimer = null;\n      this.sliderTimer = setInterval(() => {\n        let nextUnixTime = this.state.currentUnixTime + this.state.stepSize;\n        if (nextUnixTime >= this.endTime) {\n          nextUnixTime = this.endTime;\n          clearInterval(this.sliderTimer);\n          this.localObserver.publish(\"toggleHeaderPlayButton\", false);\n          this.setState({ playing: false });\n        }\n        this.handleSliderChange(nextUnixTime);\n      }, this.state.sliderSpeed);\n    } else {\n      clearInterval(this.sliderTimer);\n    }\n  };\n\n  getStepSize = (resolution) => {\n    const day = 1000 * 60 * 60 * 24;\n    switch (resolution) {\n      case \"years\":\n        return day * 365;\n      case \"quarters\":\n        return day * 92; // Approx 92 days...\n      case \"months\":\n        return day * 31;\n      default:\n        return day;\n    }\n  };\n\n  // Handles when the user wants to step one step forwards.\n  // Sets the current time to the current time plus one step size\n  // If we've reached the end, we start from the beginning...\n  stepOnesForward = () => {\n    let nextUnixTime = this.state.currentUnixTime + this.state.stepSize;\n    if (nextUnixTime >= this.endTime) {\n      nextUnixTime = this.startTime;\n    }\n    this.handleSliderChange(nextUnixTime);\n  };\n\n  // Handles when the user wants to step one step backwards.\n  // Sets the current time to the current time minus one step size\n  // If we've reached the start, we \"jump\" to the end...\n  stepOnesBackward = () => {\n    let nextUnixTime = this.state.currentUnixTime - this.state.stepSize;\n    if (nextUnixTime <= this.startTime) {\n      nextUnixTime = this.endTime;\n    }\n    this.handleSliderChange(nextUnixTime);\n  };\n\n  setNextDate = (nextUnixTime) => {\n    const { currentUnixTime, resolution } = this.state;\n\n    const currentDate = new Date(currentUnixTime);\n    let nextDate = new Date(nextUnixTime);\n\n    if (resolution === \"years\") {\n      if (currentDate.getFullYear() === nextDate.getFullYear()) {\n        currentUnixTime <= nextUnixTime\n          ? nextDate.setFullYear(currentDate.getFullYear() + 1)\n          : nextDate.setFullYear(currentDate.getFullYear() - 1);\n      }\n    } else if (resolution === \"quarters\") {\n      // We always want the month to land on a \"quarter month\"...\n      // (Jan, April, July, October)\n      const quarterMonths = [0, 3, 6, 9];\n      if (!quarterMonths.includes(nextDate.getMonth())) {\n        const closestQuarterMonth = quarterMonths.reduce((prev, curr) =>\n          Math.abs(curr - nextDate.getMonth()) <\n          Math.abs(prev - nextDate.getMonth())\n            ? curr\n            : prev\n        );\n        nextDate.setMonth(closestQuarterMonth);\n        // We also want to start on the first of the month each time...\n        nextDate.setDate(1);\n      }\n    } else if (resolution === \"months\") {\n      if (currentDate.getMonth() === nextDate.getMonth()) {\n        currentUnixTime <= nextUnixTime\n          ? nextDate.setMonth(currentDate.getMonth() + 1)\n          : nextDate.setMonth(currentDate.getMonth() - 1);\n      }\n    } else {\n      if (currentDate.getDay() === nextDate.getDay()) {\n        currentUnixTime <= nextUnixTime\n          ? nextDate.setDate(currentDate.getDate() + 1)\n          : nextDate.setDate(currentDate.getDate() - 1);\n      }\n    }\n    return nextDate;\n  };\n\n  handleSliderChange = (nextUnixTime) => {\n    const nextDate = this.setNextDate(nextUnixTime);\n    this.setState({ currentUnixTime: nextDate.getTime() }, () => {\n      this.updateLayers();\n      this.updateHeader();\n    });\n  };\n\n  updateHeader = () => {\n    const { currentUnixTime, resolution } = this.state;\n    this.localObserver.publish(\n      \"updateHeaderTitle\",\n      this.getDateLabel(currentUnixTime, resolution)\n    );\n  };\n\n  getDateLabel = (unixTime, resolution) => {\n    let options = {};\n    const date = new Date(unixTime);\n\n    switch (resolution) {\n      case \"years\":\n        options = { year: \"numeric\" };\n        break;\n      case \"quarters\":\n      case \"months\":\n        options = { month: \"long\", year: \"numeric\" };\n        break;\n      default:\n        options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n        break;\n    }\n\n    return date.toLocaleString(\"default\", options);\n  };\n\n  getShortDateLabel = (unixTime, resolution) => {\n    let options = {};\n    const date = new Date(unixTime);\n\n    switch (resolution) {\n      case \"years\":\n        options = { year: \"numeric\" };\n        break;\n      case \"months\":\n        options = { month: \"short\", year: \"numeric\" };\n        break;\n      default:\n        options = { day: \"numeric\", month: \"short\" };\n        break;\n    }\n\n    return date.toLocaleString(\"default\", options);\n  };\n\n  updateLayers = () => {\n    const extent = this.map.getView().calculateExtent();\n    this.layers.map((layer) => {\n      const source = layer.getSource();\n      if (layer instanceof VectorLayer) {\n        return source.forEachFeatureInExtent(extent, (feature) => {\n          this.getTimeSliderLayerStyle(feature, source.originalStyleFunction);\n        });\n      } else {\n        return source.updateParams({\n          TIME: new Date(this.state.currentUnixTime).toISOString(),\n        });\n      }\n    });\n  };\n\n  createMarks = (totalTime, markResolution, numMarks) => {\n    let marks = [];\n    const stepSize = Math.floor(totalTime / (numMarks - 1)); //-1 since we want to include endDate\n\n    for (let i = 0; i < numMarks; i++) {\n      const markTime = this.startTime + stepSize * i;\n      marks.push({\n        value: markTime,\n        label: this.getShortDateLabel(markTime, markResolution),\n      });\n    }\n\n    return marks;\n  };\n\n  getMarks = (numMarks) => {\n    const totalTime = this.endTime - this.startTime;\n    const unixMsPerMonth = 2592000000;\n    const numMonths = Math.floor(totalTime / unixMsPerMonth);\n\n    if (numMonths >= numMarks * 12) {\n      this.markResolution = \"years\";\n    } else if (numMonths >= numMarks) {\n      this.markResolution = \"months\";\n    } else {\n      this.markResolution = \"days\";\n    }\n\n    return this.createMarks(totalTime, this.markResolution, numMarks);\n  };\n\n  handleResolutionChange = (value) => {\n    this.setState({ resolution: value, stepSize: this.getStepSize(value) });\n  };\n\n  handleSliderSpeedChange = (value) => {\n    this.setState({ sliderSpeed: value }, () => {\n      this.toggleSlider(this.state.playing);\n    });\n  };\n\n  renderSettingsDialog = () => {\n    const { settingsDialog, resolution, sliderSpeed, layerStatus } = this.state;\n    if (settingsDialog) {\n      return createPortal(\n        <Dialog\n          options={{\n            text: (\n              <TimeSliderSettings\n                layers={this.layers}\n                layerStatus={layerStatus}\n                resolution={resolution}\n                sliderSpeed={sliderSpeed}\n                handleResolutionChange={this.handleResolutionChange}\n                handleSliderSpeedChange={this.handleSliderSpeedChange}\n              />\n            ),\n            headerText: \"Tidslinjeinställningar\",\n            buttonText: \"OK\",\n            useLegacyNonMarkdownRenderer: true,\n          }}\n          open={settingsDialog}\n          onClose={() => {\n            this.setState({\n              settingsDialog: false,\n            });\n          }}\n        ></Dialog>,\n        document.getElementById(\"windows-container\")\n      );\n    } else {\n      return null;\n    }\n  };\n\n  renderSettingsButton = () => {\n    const { layerStatus } = this.state;\n    return (\n      <Badge\n        color=\"error\"\n        invisible={!layerStatus.error}\n        badgeContent={`${\n          layerStatus.faultyLayers.length > 0\n            ? layerStatus.faultyLayers.length\n            : 1\n        }`}\n      >\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            this.setState({ settingsDialog: !this.state.settingsDialog });\n          }}\n        >\n          <SettingsOutlinedIcon />\n        </Button>\n      </Badge>\n    );\n  };\n\n  render() {\n    const { currentUnixTime, stepSize, playing } = this.state;\n\n    if (currentUnixTime) {\n      return (\n        <Grid container sx={{ padding: 2 }}>\n          <>{this.renderSettingsDialog()}</>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              paddingLeft:\n                this.markResolution === \"years\"\n                  ? 2\n                  : this.markResolution === \"months\"\n                  ? 4\n                  : 6,\n              paddingRight:\n                this.markResolution === \"years\"\n                  ? 2\n                  : this.markResolution === \"months\"\n                  ? 4\n                  : 6,\n            }}\n          >\n            <Slider\n              size=\"small\"\n              value={currentUnixTime}\n              min={this.startTime}\n              max={this.endTime}\n              step={stepSize}\n              marks={this.marks}\n              onChange={(e, value) => {\n                if (value !== currentUnixTime) {\n                  this.handleSliderChange(value);\n                }\n              }}\n            />\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item align=\"center\" xs={2}>\n              <Tooltip disableInteractive title=\"Återställ tidslinjen\">\n                <Button variant=\"contained\" onClick={this.resetTimeSlider}>\n                  <RotateLeftOutlinedIcon />\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item align=\"center\" xs={2}>\n              <Tooltip\n                disableInteractive\n                title={\n                  playing\n                    ? \"Du kan inte hoppa bakåt när spelaren är aktiv.\"\n                    : \"Hoppa ett steg bakåt\"\n                }\n              >\n                <span>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                      this.stepOnesBackward();\n                    }}\n                    disabled={playing}\n                  >\n                    <ArrowBackIcon />\n                  </Button>\n                </span>\n              </Tooltip>\n            </Grid>\n            <Grid item align=\"center\" xs={2}>\n              <Tooltip\n                disableInteractive\n                title={playing ? \"Stoppa tidslinjen\" : \"Starta tidslinjen\"}\n              >\n                <Button\n                  variant=\"contained\"\n                  onClick={() => {\n                    this.toggleSlider(!playing);\n                  }}\n                >\n                  {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                </Button>\n              </Tooltip>\n            </Grid>\n            <Grid item align=\"center\" xs={2}>\n              <Tooltip\n                disableInteractive\n                title={\n                  playing\n                    ? \"Du kan inte hoppa framåt när spelaren är aktiv.\"\n                    : \"Hoppa ett steg framåt\"\n                }\n              >\n                <span>\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                      this.stepOnesForward();\n                    }}\n                    disabled={playing}\n                  >\n                    <ArrowForwardIcon />\n                  </Button>\n                </span>\n              </Tooltip>\n            </Grid>\n            <Grid item align=\"center\" xs={2}>\n              <Tooltip disableInteractive title=\"Inställningar\">\n                {this.renderSettingsButton()}\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={{ width: \"100%\", height: \"100%\" }}\n        >\n          <>{this.renderSettingsDialog()}</>\n          <Grid item>{this.renderSettingsButton()}</Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default TimeSliderView;\n","import React from \"react\";\nimport { Grid, Typography, Tooltip, Switch } from \"@mui/material\";\nimport { FormControl, FormHelperText, MenuItem, Select } from \"@mui/material\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@mui/material\";\n\nimport WarningIcon from \"@mui/icons-material/Warning\";\n\nclass TimeSliderSettings extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.layerStatus = props.layerStatus;\n  }\n\n  renderLayerList = () => {\n    const { layers, layerStatus } = this.props;\n\n    return (\n      <List>\n        {layers.map((layer, index) => {\n          const id = layer.get(\"name\");\n          const visible = layer.get(\"visible\");\n          let error = false;\n          let errorType = \"\";\n          layerStatus.faultyLayers\n            .filter((layer) => {\n              return layer.layerId === id;\n            })\n            .forEach((layer) => {\n              error = true;\n              errorType = layer.layerError;\n            });\n          return (\n            <ListItem\n              key={index}\n              sx={{\n                borderLeft: (theme) =>\n                  `${theme.spacing(0.5)} solid ${\n                    error\n                      ? theme.palette.error.main\n                      : theme.palette.success.main\n                  }`,\n              }}\n              disabled={!visible}\n            >\n              {error && (\n                <Tooltip\n                  disableInteractive\n                  key={`tt_${index}`}\n                  title={`${\n                    error\n                      ? errorType === \"date_start_equals_end\"\n                        ? \"Start- och slutdatumet på lagret har samma värde!\"\n                        : \"Start- eller slutdatumet på lagret saknas!\"\n                      : \"Lagret ser okej ut!\"\n                  }`}\n                >\n                  <ListItemIcon>\n                    <WarningIcon />\n                  </ListItemIcon>\n                </Tooltip>\n              )}\n\n              <ListItemText primary={layer.get(\"caption\")} />\n\n              <ListItemSecondaryAction>\n                <Tooltip\n                  disableInteractive\n                  title={visible ? \"Dölj lager\" : \"Visa lager\"}\n                >\n                  <Switch\n                    checked={visible}\n                    onChange={() => {\n                      layer.setVisible(!visible);\n                      this.setState({ time: new Date() });\n                    }}\n                    name=\"checkedA\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  };\n\n  renderSettingsContainer = () => {\n    const {\n      sliderSpeed,\n      resolution,\n      handleResolutionChange,\n      handleSliderSpeedChange,\n    } = this.props;\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <Select\n              variant=\"standard\"\n              labelId=\"select-stepSize-label\"\n              id=\"select-stepSize\"\n              value={sliderSpeed}\n              onChange={(e) => {\n                handleSliderSpeedChange(e.target.value);\n              }}\n            >\n              <MenuItem value={2000}>Långsam (0.5 Hz)</MenuItem>\n              <MenuItem value={1000}>Medium (1 Hz)</MenuItem>\n              <MenuItem value={500}>Snabb (2 Hz)</MenuItem>\n            </Select>\n            <FormHelperText>Ändra tidslinjens hastighet</FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <Select\n              variant=\"standard\"\n              labelId=\"select-resolution-label\"\n              id=\"select-resolution\"\n              value={resolution}\n              onChange={(e) => {\n                handleResolutionChange(e.target.value);\n              }}\n            >\n              <MenuItem value={\"days\"}>Dag</MenuItem>\n              <MenuItem value={\"months\"}>Månad</MenuItem>\n              <MenuItem value={\"quarters\"}>Kvartal</MenuItem>\n              <MenuItem value={\"years\"}>År</MenuItem>\n            </Select>\n          </FormControl>\n          <FormHelperText>Ändra tidslinjens upplösning</FormHelperText>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  render() {\n    const { layerStatus } = this.props;\n\n    if (layerStatus.errorType === \"layers_missing\") {\n      return (\n        <Grid container>\n          <Typography>\n            Inga tidslinje-lager kunde hittas. Kontakta systemadministratören.\n          </Typography>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid container>\n          <Grid item xs={12}>\n            <Typography>Lagerstatus: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderLayerList()}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>Inställningar: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            {this.renderSettingsContainer()}\n          </Grid>\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default TimeSliderSettings;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"\n}), 'RotateLeftOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.43 12.98c.04-.32.07-.64.07-.98 0-.34-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.09-.16-.26-.25-.44-.25-.06 0-.12.01-.17.03l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.06-.02-.12-.03-.18-.03-.17 0-.34.09-.43.25l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98 0 .33.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.09.16.26.25.44.25.06 0 .12-.01.17-.03l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.06.02.12.03.18.03.17 0 .34-.09.43-.25l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zm-1.98-1.71c.04.31.05.52.05.73 0 .21-.02.43-.05.73l-.14 1.13.89.7 1.08.84-.7 1.21-1.27-.51-1.04-.42-.9.68c-.43.32-.84.56-1.25.73l-1.06.43-.16 1.13-.2 1.35h-1.4l-.19-1.35-.16-1.13-1.06-.43c-.43-.18-.83-.41-1.23-.71l-.91-.7-1.06.43-1.27.51-.7-1.21 1.08-.84.89-.7-.14-1.13c-.03-.31-.05-.54-.05-.74s.02-.43.05-.73l.14-1.13-.89-.7-1.08-.84.7-1.21 1.27.51 1.04.42.9-.68c.43-.32.84-.56 1.25-.73l1.06-.43.16-1.13.2-1.35h1.39l.19 1.35.16 1.13 1.06.43c.43.18.83.41 1.23.71l.91.7 1.06-.43 1.27-.51.7 1.21-1.07.85-.89.7.14 1.13zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}), 'SettingsOutlined');\nexports.default = _default;"],"names":["TimeSliderView","React","constructor","props","super","bindSubscriptions","this","localObserver","subscribe","initiateTimeSliderView","resetTimeSliderView","resetTimeSlider","enabled","toggleSlider","validateLayers","layers","layerStatus","error","errorType","faultyLayers","length","forEach","layer","get","push","layerId","layerError","setState","currentUnixTime","startTime","initiateTimeLineLayers","refreshLayers","resetTimeLineLayers","publish","source","getSource","VectorLayer","originalStyleFunction","getStyleFunction","on","handleFeatureAdded","setStyle","updateParams","TIME","Date","state","toISOString","setVisible","un","undefined","event","target","feature","getTimeSliderLayerStyle","refresh","getUnixTimeFromString","str","y","substr","m","d","getTime","type","time","layerTime","layerUnixTime","shouldFeatureShow","featureStart","featureEnd","startDate","endDate","playing","clearInterval","sliderTimer","setInterval","nextUnixTime","stepSize","endTime","handleSliderChange","sliderSpeed","getStepSize","resolution","day","stepOnesForward","stepOnesBackward","setNextDate","currentDate","nextDate","getFullYear","setFullYear","quarterMonths","includes","getMonth","closestQuarterMonth","reduce","prev","curr","Math","abs","setMonth","setDate","getDay","getDate","updateLayers","updateHeader","getDateLabel","unixTime","options","date","year","month","toLocaleString","getShortDateLabel","extent","map","getView","calculateExtent","forEachFeatureInExtent","createMarks","totalTime","markResolution","numMarks","marks","floor","i","markTime","value","label","getMarks","numMonths","handleResolutionChange","handleSliderSpeedChange","renderSettingsDialog","settingsDialog","createPortal","text","headerText","buttonText","useLegacyNonMarkdownRenderer","open","onClose","document","getElementById","renderSettingsButton","color","invisible","badgeContent","variant","onClick","defaultResolution","loadingError","componentDidMount","visibleAtStart","render","container","sx","padding","item","xs","paddingLeft","paddingRight","size","min","max","step","onChange","e","direction","justifyContent","alignItems","spacing","align","disableInteractive","title","disabled","width","height","TimeSliderSettings","renderLayerList","index","id","visible","filter","borderLeft","theme","palette","main","success","primary","checked","name","inputProps","renderSettingsContainer","fullWidth","labelId","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}