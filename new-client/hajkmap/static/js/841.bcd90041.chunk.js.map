{"version":3,"file":"static/js/841.bcd90041.chunk.js","mappings":"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","sources":["plugins/Print/AdvancedOptions.js","plugins/Print/GeneralOptions.js","plugins/Print/PrintDialog.js","plugins/Print/PrintView.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  Badge,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Popover,\n  Tooltip,\n  IconButton,\n  InputAdornment,\n} from \"@mui/material\";\nimport PaletteIcon from \"@mui/icons-material/Palette\";\nimport { TwitterPicker as ColorPicker } from \"react-color\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst FormControlContainer = styled(Grid)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n  display: \"flex\",\n}));\n\nclass AdvancedOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  placementOverlaps = {\n    northArrow: false,\n    scaleBar: false,\n    logoType: false,\n  };\n\n  toggleColorPicker = (e) => {\n    this.setState({ anchorEl: e.currentTarget });\n  };\n\n  hideColorPicker = (e) => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleMapTextColorChangeComplete = (color) => {\n    this.hideColorPicker();\n    this.props.setMapTextColor(color);\n  };\n\n  allowBottomRightPlacement = () => {\n    if (\n      (this.props.options.copyright ?? \"\").length > 0 ||\n      (this.props.options.disclaimer ?? \"\").length > 0\n    ) {\n      // no! This placement is now reserved for copyright and/or disclaimer.\n      return false;\n    }\n    return true;\n  };\n\n  // Method for checking if any placement values are overlapping\n  hasPlacementOverlap() {\n    // We want to check if the selections are set to \"Enabled\", otherwise they are set to\n    // \"disabled\" and cannot overlap.\n    const northArrow = this.props.includeNorthArrow\n      ? this.props.northArrowPlacement\n      : \"northDisabled\";\n    const scaleBar = this.props.includeScaleBar\n      ? this.props.scaleBarPlacement\n      : \"scaleDisabled\";\n    const logo = this.props.includeLogo\n      ? this.props.logoPlacement\n      : \"logoDisabled\";\n\n    // We check if any given value is the same as the other two placement values.\n    // If so, they are stored as booleans in \"placementOverlaps\"\n    this.placementOverlaps.northArrow =\n      northArrow === scaleBar || northArrow === logo;\n    this.placementOverlaps.scaleBar =\n      scaleBar === northArrow || scaleBar === logo;\n    this.placementOverlaps.logoType = logo === northArrow || logo === scaleBar;\n\n    // If any placement values are the same we return true and use it to display\n    // error-message in render()\n    return (\n      this.placementOverlaps.northArrow ||\n      this.placementOverlaps.scaleBar ||\n      this.placementOverlaps.logoType\n    );\n  }\n\n  renderPlacementSelect = (value, name, changeHandler, disabled) => {\n    return (\n      <Select\n        variant=\"standard\"\n        value={value}\n        onChange={changeHandler}\n        disabled={disabled}\n        inputProps={{\n          name: name,\n          id: name,\n        }}\n      >\n        <MenuItem value={\"topLeft\"}>Linksboven</MenuItem>\n        <MenuItem value={\"topRight\"}>Rechtsboven</MenuItem>\n        {this.allowBottomRightPlacement() && (\n          <MenuItem value={\"bottomRight\"}>Rechtsonder</MenuItem>\n        )}\n        <MenuItem value={\"bottomLeft\"}>Linksonder</MenuItem>\n      </Select>\n    );\n  };\n\n  renderIncludeSelect = (value, name, changeHandler) => {\n    return (\n      <Select\n        variant=\"standard\"\n        value={value}\n        onChange={changeHandler}\n        inputProps={{\n          name: name,\n          id: name,\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nee</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    let showOverlapWarning = this.hasPlacementOverlap();\n    const {\n      resolution,\n      handleChange,\n      mapTextColor,\n      mapTitle,\n      printComment,\n      includeNorthArrow,\n      northArrowPlacement,\n      includeScaleBar,\n      scaleBarPlacement,\n      includeLogo,\n      logoPlacement,\n      printOptionsOk,\n    } = this.props;\n    return (\n      <>\n        <Root>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField\n                value={mapTitle}\n                fullWidth={true}\n                onChange={handleChange}\n                label=\"Optionele titel\"\n                placeholder=\"Kan leeggelaten worden\"\n                variant=\"standard\"\n                InputProps={{\n                  id: \"mapTitle\",\n                  name: \"mapTitle\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Badge\n                        sx={{\n                          \"& .MuiBadge-dot\": {\n                            backgroundColor: this.props.mapTextColor,\n                          },\n                        }}\n                        badgeContent=\" \"\n                        variant=\"dot\"\n                      >\n                        <Tooltip\n                          disableInteractive\n                          title=\"De titelkleur heeft geen invloed op de labels\n                          van de kaart, maar bepaalt alleen de kleur van\n                          omringende teksten, zoals titel, copyrighttekst, enz.\"\n                        >\n                          <IconButton\n                            id=\"mapTextColor\"\n                            onClick={this.toggleColorPicker}\n                            sx={{ marginRight: 0.5 }}\n                            edge=\"start\"\n                            size=\"small\"\n                          >\n                            <PaletteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </Badge>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField\n                value={printComment}\n                fullWidth={true}\n                onChange={handleChange}\n                label=\"Optionele toelichting\"\n                placeholder=\"Kan leggelaten worden\"\n                variant=\"standard\"\n                InputProps={{\n                  id: \"printComment\",\n                  name: \"printComment\",\n                }}\n              />\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true} error={!printOptionsOk}>\n              <InputLabel variant=\"standard\" htmlFor=\"resolution\">\n                Resolutie (DPI)\n              </InputLabel>\n              <Select\n                variant=\"standard\"\n                value={resolution}\n                onChange={handleChange}\n                inputProps={{\n                  name: \"resolution\",\n                  id: \"resolution\",\n                }}\n              >\n                {this.props.options.dpis.map((value, index) => {\n                  return (\n                    <MenuItem key={\"dpis_\" + index} value={value}>\n                      {value}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              {!printOptionsOk && (\n                <FormHelperText>\n                  De afbeelding wordt niet correct afgedrukt. Test met een\n                  lagere resolutie of kleinere schaal.\n                </FormHelperText>\n              )}\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeNorthArrow\">\n                  Noordpijl toevoegen\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeNorthArrow,\n                  \"includeNorthArrow\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl\n                fullWidth={true}\n                error={this.placementOverlaps.northArrow}\n              >\n                <InputLabel variant=\"standard\" htmlFor=\"northArrowPlacement\">\n                  Placering\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  northArrowPlacement,\n                  \"northArrowPlacement\",\n                  handleChange,\n                  !includeNorthArrow\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeScaleBar\">\n                  Schaalstol toevoegen\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeScaleBar,\n                  \"includeScaleBar\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl\n                fullWidth={true}\n                error={this.placementOverlaps.scaleBar}\n              >\n                <InputLabel variant=\"standard\" htmlFor=\"scaleBarPlacement\">\n                  Plaats schaalstok\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  scaleBarPlacement,\n                  \"scaleBarPlacement\",\n                  handleChange,\n                  !includeScaleBar\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeLogo\">\n                  Logo toevoegen\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeLogo,\n                  \"includeLogo\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl\n                fullWidth={true}\n                error={this.placementOverlaps.logoType}\n              >\n                <InputLabel variant=\"standard\" htmlFor=\"logoPlacement\">\n                  Plaats logo\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  logoPlacement,\n                  \"logoPlacement\",\n                  handleChange,\n                  !includeLogo\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              {showOverlapWarning && (\n                <FormHelperText error={true}>\n                  De afbeelding wordt niet correct afgedrukt. De locaties van de\n                  verschillende objecten overlappen.\n                </FormHelperText>\n              )}\n            </Grid>\n          </FormControlContainer>\n          <Popover\n            id=\"color-picker-menu\"\n            anchorEl={this.state.anchorEl}\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.hideColorPicker}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <ColorPicker\n              inputProps={{\n                id: \"mapTextColor\",\n                name: \"mapTextColor\",\n              }}\n              color={mapTextColor}\n              colors={this.mapTextAvailableColors}\n              onChangeComplete={this.handleMapTextColorChangeComplete}\n            />\n          </Popover>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(AdvancedOptions);\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Input,\n  Tooltip,\n} from \"@mui/material\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n}));\n\nclass GeneralOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n    useCustomScale: false,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  // Handles interaction with the scale-selector. We cannot let the\n  // parent handler (handleChange) take care of this on its own since\n  // we have an extra vale (\"CUSTOM_SCALE\") that should not affect the selected\n  // scale, but instead update the state so that a scale-input is shown.\n  handleScaleSelectChange = (e) => {\n    const { handleChange } = this.props;\n    const { value } = e.target;\n    // If we're not dealing with a custom scale, just update the scale, otherwise\n    // update the local state so that the user can set a custom scale.\n    value !== \"CUSTOM_SCALE\"\n      ? handleChange(e)\n      : this.setState({ useCustomScale: true });\n  };\n\n  // Handles when the custom scale input is to be hidden, and the scale-selector\n  // is to be shown. We have to make sure to update the scale to the option closest\n  // to the current value.\n  handleDisableCustomScaleInput = () => {\n    const { handleChange, scales, scale } = this.props;\n    // First we'll have to grab the closest scale option\n    const closestScaleOption = scales.reduce((prev, curr) =>\n      Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev\n    );\n    // Then we'll update the scale to that value\n    handleChange({ target: { name: \"scale\", value: closestScaleOption } });\n    // And then we'll toggle the scale-input.\n    this.setState({ useCustomScale: false });\n  };\n\n  renderPaperSizeSelector = () => {\n    const { format, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={format}\n        onChange={handleChange}\n        inputProps={{\n          name: \"format\",\n          id: \"format\",\n        }}\n      >\n        {this.props.options.paperFormats.map((value, index) => {\n          return (\n            <MenuItem key={\"paperFormat_\" + index} value={value}>\n              {value.toUpperCase()}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderUseMarginSelector = () => {\n    const { useMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useMargin}\n        onChange={handleChange}\n        inputProps={{\n          name: \"useMargin\",\n          id: \"useMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nee</MenuItem>\n      </Select>\n    );\n  };\n\n  renderTextIconInMarginsSelector = () => {\n    const { useMargin, useTextIconsInMargin, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={useTextIconsInMargin}\n        onChange={handleChange}\n        disabled={!useMargin}\n        inputProps={{\n          name: \"useTextIconsInMargin\",\n          id: \"useTextIconsInMargin\",\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nee</MenuItem>\n      </Select>\n    );\n  };\n\n  renderOrientationSelector = () => {\n    const { orientation, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={orientation}\n        onChange={handleChange}\n        inputProps={{\n          name: \"orientation\",\n          id: \"orientation\",\n        }}\n      >\n        <MenuItem value={\"landscape\"}>Liggend</MenuItem>\n        <MenuItem value={\"portrait\"}>Staand</MenuItem>\n      </Select>\n    );\n  };\n\n  renderScaleSelector = () => {\n    const { model, scales, scale } = this.props;\n    // We're gonna have to create a new array with an object for each scale-value.\n    // The objects contain the actual scale-value, along with a user-friendly label.\n    // For example, scale: 1000, label: 1:1 000\n    // We also add the extra option (\"CUSTOM_SCALE\"), allowing the user to select a\n    // a custom scale value.\n    const scaleSelectorOptions = [\n      ...scales.map((s) => {\n        return { value: s, label: model.getUserFriendlyScale(s) };\n      }),\n      { value: \"CUSTOM_SCALE\", label: \"Voer een andere schaal in\" },\n    ];\n    return (\n      <Select\n        variant=\"standard\"\n        value={scale}\n        onChange={this.handleScaleSelectChange}\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n      >\n        {scaleSelectorOptions.map((scale, i) => {\n          // Note: it is crucial to keep the scale value (in state) divided by 1000 from what is shown to user!\n          return (\n            <MenuItem key={i} value={scale.value}>\n              {scale.label}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    );\n  };\n\n  renderScaleInput = () => {\n    return (\n      <Input\n        value={this.props.scale}\n        type=\"number\"\n        startAdornment={<InputAdornment position=\"start\">1:</InputAdornment>}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <Tooltip title=\"Visa fördefinerade val\">\n              <IconButton\n                aria-label=\"toggle custom scale selector\"\n                onClick={this.handleDisableCustomScaleInput}\n              >\n                <FormatListNumberedIcon />\n              </IconButton>\n            </Tooltip>\n          </InputAdornment>\n        }\n        inputProps={{\n          name: \"scale\",\n          id: \"scale\",\n        }}\n        onChange={this.props.handleChange}\n      />\n    );\n  };\n\n  renderSaveAsTypeSelector = () => {\n    const { saveAsType, handleChange } = this.props;\n    return (\n      <Select\n        variant=\"standard\"\n        value={saveAsType}\n        onChange={handleChange}\n        inputProps={{\n          name: \"saveAsType\",\n          id: \"saveAsType\",\n        }}\n      >\n        <MenuItem value={\"PDF\"}>PDF</MenuItem>\n        <MenuItem value={\"PNG\"}>PNG</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    const { printOptionsOk } = this.props;\n    return (\n      <>\n        <Root>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"format\">\n              Formaat\n            </InputLabel>\n            {this.renderPaperSizeSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Kantlijnen rond het kaartbeeld\n            </InputLabel>\n            {this.renderUseMarginSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"useMargin\">\n              Titeltekst enz. in de kantlijn\n            </InputLabel>\n            {this.renderTextIconInMarginsSelector()}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"orientation\">\n              Orientatie\n            </InputLabel>\n            {this.renderOrientationSelector()}\n          </StyledFormControl>\n          <StyledFormControl error={!printOptionsOk}>\n            <InputLabel variant=\"standard\" htmlFor=\"scale\">\n              Schaal\n            </InputLabel>\n            {this.state.useCustomScale\n              ? this.renderScaleInput()\n              : this.renderScaleSelector()}\n            {!printOptionsOk && (\n              <FormHelperText>\n                De afbeelding wordt niet correct afgedrukt. Probeer het eens met\n                een lagere resolutie of kleinere schaal.\n              </FormHelperText>\n            )}\n          </StyledFormControl>\n          <StyledFormControl>\n            <InputLabel variant=\"standard\" htmlFor=\"saveAsType\">\n              Opslaan als\n            </InputLabel>\n            {this.renderSaveAsTypeSelector()}\n          </StyledFormControl>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(GeneralOptions);\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { withSnackbar } from \"notistack\";\n\nimport {\n  Button,\n  LinearProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n} from \"@mui/material\";\n\nclass PrintDialog extends React.PureComponent {\n  render() {\n    const { cancelPrint, open, saveAsType } = this.props;\n    return createPortal(\n      <Dialog disableEscapeKeyDown={true} open={open}>\n        <LinearProgress />\n        <DialogTitle>Uw {`${saveAsType}`} wordt gegenereerd</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Dit kan enige tijd duren, vooral als u een groot formaat (A2-A3) of\n            een hoge resolutie (>72 dpi) heeft gekozen. Zodra het\n            {`${saveAsType}`}-bestand beschikbaar is, wordt het naar uw computer\n            gedownload.\n            <br />\n            <br />\n            Als u niet langer wilt wachten kunt u het afdrukken annuleren door\n            op onderstaande knop te drukken.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={cancelPrint}>\n            Annuleren\n          </Button>\n        </DialogActions>\n      </Dialog>,\n      document.getElementById(\"root\")\n    );\n  }\n}\n\nexport default withSnackbar(PrintDialog);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport PrintDialog from \"./PrintDialog\";\nimport { AppBar, Tab, Tabs } from \"@mui/material\";\nimport PrintIcon from \"@mui/icons-material/Print\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { Tooltip, Button } from \"@mui/material\";\n\nimport GeneralOptions from \"./GeneralOptions\";\nimport AdvancedOptions from \"./AdvancedOptions\";\n\nconst Root = styled(\"div\")(() => ({\n  margin: -10,\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\",\n}));\n\nconst StyledAppBar = styled(AppBar)(() => ({\n  top: -10,\n}));\n\nconst TabContent = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  padding: theme.spacing(1),\n  width: \"100%\",\n  height: \"100%\",\n}));\n\nconst PrintButtonContainer = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(1),\n}));\n\nclass PrintView extends React.PureComponent {\n  static propTypes = {\n    model: PropTypes.object.isRequired,\n    localObserver: PropTypes.object.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n    closeSnackbar: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {};\n\n  state = {\n    format: \"a4\", // a0-a5\n    useMargin: this.props.options.useMargin ?? false, // User can choose to have a margin around the map-image\n    useTextIconsInMargin: this.props.options.useTextIconsInMargin ?? false,\n    orientation: \"landscape\",\n    resolution: 150, // 72, 150, 300,\n    scale: this.props.scales[Math.round((this.props.scales.length - 1) / 2)], // 10000 means scale of 1:10000\n    mapTitle: \"\", // User can set a title that will get printed on the map\n    printComment: \"\", // User can set a comment that will get printed on the map\n    mapTextColor: this.props.options.mapTextColor ?? \"#FFFFFF\", // Default color of text printed on the map\n    printInProgress: false,\n    previewLayerVisible: false,\n    activeTab: 0,\n    includeNorthArrow: this.props.options.includeNorthArrow ?? false,\n    northArrowPlacement: this.props.options.northArrowPlacement || \"topLeft\",\n    includeScaleBar: this.props.options.includeScaleBar ?? true,\n    scaleBarPlacement: this.props.options.scaleBarPlacement || \"bottomLeft\",\n    includeLogo: this.props.options.includeLogo ?? true,\n    logoPlacement: this.props.options.logoPlacement || \"topRight\",\n    saveAsType: \"PDF\",\n    printOptionsOk: false,\n  };\n\n  snackbarKey = null;\n\n  // Used to store some values that will be needed for resetting the map\n  valuesToRestoreFrom = {};\n\n  constructor(props) {\n    super(props);\n    this.model = this.props.model;\n    this.localObserver = this.props.localObserver;\n    this.dims = this.props.dims;\n\n    // Add the preview layer to map (it doesn't contain any features yet!)\n    this.model.addPreviewLayer();\n\n    // If plugin is visible at start, ensure we show the preview feature too\n    if (props.visibleAtStart === true) this.state.previewLayerVisible = true;\n\n    props.localObserver.subscribe(\"print-completed\", () => {\n      this.props.closeSnackbar(this.snackbarKey);\n      this.props.enqueueSnackbar(\"Din utskrift är klar!\", {\n        variant: \"success\",\n      });\n      this.setState({ printInProgress: false });\n    });\n\n    props.localObserver.subscribe(\"print-failed-to-save\", () => {\n      this.props.closeSnackbar(this.snackbarKey);\n      this.props.enqueueSnackbar(\n        \"Afdruk kan niet worden opgeslagen, neem contact op met uw systeembeheerder.\",\n        {\n          variant: \"error\",\n        }\n      );\n      this.setState({ printInProgress: false });\n    });\n\n    this.localObserver.subscribe(\"error-loading-logo-image\", () => {\n      this.props.enqueueSnackbar(\"Logo kan niet geladen worden.\", {\n        variant: \"warning\",\n      });\n    });\n\n    this.localObserver.subscribe(\"error-loading-arrow-image\", () => {\n      this.props.enqueueSnackbar(\"Noordpijl kan niet geladen worden.\", {\n        variant: \"warning\",\n      });\n    });\n\n    props.localObserver.subscribe(\"showPrintPreview\", () => {\n      const scale = this.model.getFittingScale();\n      this.setState({ previewLayerVisible: true, scale: scale }, () => {\n        this.handlePotentialPrintOptionError();\n      });\n    });\n\n    props.localObserver.subscribe(\"hidePrintPreview\", () => {\n      this.setState({ previewLayerVisible: false });\n    });\n  }\n\n  initiatePrint = (e) => {\n    // Print can be initiated by submitting the <form>. In that case, we must prevent default behavior.\n    e.preventDefault();\n    // Print starts, tell the user\n    this.setState({ printInProgress: true });\n    this.snackbarKey = this.props.enqueueSnackbar(\n      \"Bezig met afdrukken - een ogenblik geduld a.u.b…\",\n      {\n        variant: \"info\",\n        persist: true,\n      }\n    );\n\n    this.valuesToRestoreFrom = {\n      snackbarKey: this.snackbarKey,\n    };\n\n    const printOptions = this.getPrintOptions();\n    this.model.print(printOptions);\n  };\n\n  getPrintOptions = () => {\n    return {\n      useMargin: this.state.useMargin,\n      useTextIconsInMargin: this.state.useTextIconsInMargin,\n      format: this.state.format,\n      orientation: this.state.orientation,\n      resolution: this.state.resolution,\n      scale: this.state.scale,\n      mapTitle: this.state.mapTitle,\n      printComment: this.state.printComment,\n      mapTextColor: this.state.mapTextColor,\n      includeLogo: this.state.includeLogo,\n      logoPlacement: this.state.logoPlacement,\n      includeScaleBar: this.state.includeScaleBar,\n      scaleBarPlacement: this.state.scaleBarPlacement,\n      includeNorthArrow: this.state.includeNorthArrow,\n      northArrowPlacement: this.state.northArrowPlacement,\n      saveAsType: this.state.saveAsType,\n    };\n  };\n\n  /**\n   * @summary Make it possible to cancel a printout by clicking a button.\n   *\n   */\n  cancelPrint = () => {\n    this.model.cancelPrint();\n\n    // Print done, hide messages\n    this.props.closeSnackbar(this.valuesToRestoreFrom.snackbarKey);\n    this.props.enqueueSnackbar(\n      \"U heeft het afdrukken geannuleerd - er zijn geen gegevens opgeslagen\",\n      {\n        variant: \"warning\",\n      }\n    );\n    this.setState({ printInProgress: false });\n  };\n\n  handleChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        this.handlePotentialPrintOptionError();\n      }\n    );\n  };\n\n  handlePotentialPrintOptionError = () => {\n    const printOptions = this.getPrintOptions();\n    const printOptionsOk = this.model.desiredPrintOptionsOk(printOptions);\n    this.setState({ printOptionsOk: printOptionsOk });\n  };\n\n  setMapTextColor = (color) => {\n    this.setState({ mapTextColor: color.hex });\n  };\n\n  handleChangeTabs = (event, activeTab) => {\n    this.setState({ activeTab });\n  };\n\n  handleTabsMounted = (ref) => {\n    setTimeout(() => {\n      ref !== null && ref.updateIndicator();\n    }, 1);\n  };\n\n  renderGeneralOptions = () => {\n    const { scales } = this.props;\n    const {\n      scale,\n      useMargin,\n      useTextIconsInMargin,\n      format,\n      orientation,\n      resolution,\n      saveAsType,\n      printOptionsOk,\n    } = this.state;\n\n    return (\n      <GeneralOptions\n        scales={scales}\n        useMargin={useMargin}\n        useTextIconsInMargin={useTextIconsInMargin}\n        scale={scale}\n        format={format}\n        resolution={resolution}\n        orientation={orientation}\n        handleChange={(event) => {\n          this.handleChange(event);\n        }}\n        model={this.model}\n        saveAsType={saveAsType}\n        printOptionsOk={printOptionsOk}\n        options={this.props.options}\n      ></GeneralOptions>\n    );\n  };\n\n  renderAdvancedOptions = () => {\n    const {\n      resolution,\n      mapTitle,\n      printComment,\n      mapTextColor,\n      includeNorthArrow,\n      northArrowPlacement,\n      includeScaleBar,\n      scaleBarPlacement,\n      includeLogo,\n      logoPlacement,\n      printOptionsOk,\n    } = this.state;\n\n    return (\n      <AdvancedOptions\n        resolution={resolution}\n        mapTitle={mapTitle}\n        printComment={printComment}\n        mapTextColor={mapTextColor}\n        handleChange={(event) => {\n          this.handleChange(event);\n        }}\n        setMapTextColor={this.setMapTextColor}\n        includeNorthArrow={includeNorthArrow}\n        northArrowPlacement={northArrowPlacement}\n        includeScaleBar={includeScaleBar}\n        scaleBarPlacement={scaleBarPlacement}\n        includeLogo={includeLogo}\n        logoPlacement={logoPlacement}\n        printOptionsOk={printOptionsOk}\n        options={this.props.options}\n      ></AdvancedOptions>\n    );\n  };\n\n  a11yProps(index) {\n    return {\n      id: `print-tab-${index}`,\n      \"aria-controls\": `print-tab-${index}`,\n    };\n  }\n\n  render() {\n    const { windowVisible } = this.props;\n    const {\n      previewLayerVisible,\n      scale,\n      useMargin,\n      useTextIconsInMargin,\n      format,\n      orientation,\n      printInProgress,\n      saveAsType,\n      activeTab,\n      printOptionsOk,\n    } = this.state;\n\n    this.model.renderPreviewFeature(previewLayerVisible, {\n      scale: scale,\n      format: format,\n      orientation: orientation,\n      useMargin: useMargin,\n      useTextIconsInMargin: useTextIconsInMargin,\n    });\n\n    return (\n      <>\n        <Root>\n          <StyledAppBar position=\"sticky\" color=\"default\">\n            <Tabs\n              action={this.handleTabsMounted}\n              onChange={this.handleChangeTabs}\n              value={windowVisible ? activeTab : false} // If the window is not visible,\n              // we cannot send a proper value to the tabs-component. If we do, mui will throw an error.\n              // false is OK though, apparently.\n              variant=\"fullWidth\"\n              textColor=\"inherit\"\n            >\n              <Tooltip disableInteractive title=\"Generella inställningar\">\n                <Tab icon={<PrintIcon />} {...this.a11yProps(0)} />\n              </Tooltip>\n              <Tooltip disableInteractive title=\"Avancerade inställningar\">\n                <Tab icon={<SettingsIcon />} {...this.a11yProps(1)} />\n              </Tooltip>\n            </Tabs>\n          </StyledAppBar>\n          <TabContent>\n            {activeTab === 0 && this.renderGeneralOptions()}\n            {activeTab === 1 && this.renderAdvancedOptions()}\n            <PrintButtonContainer>\n              <Button\n                variant=\"contained\"\n                fullWidth={true}\n                color=\"primary\"\n                onClick={this.initiatePrint}\n                disabled={printInProgress || !printOptionsOk}\n              >\n                Afdrukken\n              </Button>\n            </PrintButtonContainer>\n          </TabContent>\n        </Root>\n        <PrintDialog\n          open={printInProgress}\n          saveAsType={saveAsType}\n          cancelPrint={this.cancelPrint}\n        />\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(PrintView);\n"],"names":["Root","styled","Grid","display","flexWrap","FormControlContainer","theme","margin","spacing","width","AdvancedOptions","React","state","anchorEl","mapTextAvailableColors","placementOverlaps","northArrow","scaleBar","logoType","toggleColorPicker","e","this","setState","currentTarget","hideColorPicker","handleMapTextColorChangeComplete","color","props","setMapTextColor","allowBottomRightPlacement","options","copyright","length","disclaimer","renderPlacementSelect","value","name","changeHandler","disabled","variant","onChange","inputProps","id","renderIncludeSelect","hasPlacementOverlap","includeNorthArrow","northArrowPlacement","includeScaleBar","scaleBarPlacement","logo","includeLogo","logoPlacement","render","showOverlapWarning","resolution","handleChange","mapTextColor","mapTitle","printComment","printOptionsOk","item","xs","fullWidth","label","placeholder","InputProps","endAdornment","position","sx","backgroundColor","badgeContent","disableInteractive","title","onClick","marginRight","edge","size","error","htmlFor","dpis","map","index","container","paddingRight","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","colors","onChangeComplete","withSnackbar","StyledFormControl","FormControl","GeneralOptions","useCustomScale","handleScaleSelectChange","target","handleDisableCustomScaleInput","scales","scale","reduce","prev","curr","Math","abs","renderPaperSizeSelector","format","paperFormats","toUpperCase","renderUseMarginSelector","useMargin","renderTextIconInMarginsSelector","useTextIconsInMargin","renderOrientationSelector","orientation","renderScaleSelector","model","scaleSelectorOptions","s","getUserFriendlyScale","i","renderScaleInput","type","startAdornment","renderSaveAsTypeSelector","saveAsType","PrintDialog","cancelPrint","createPortal","disableEscapeKeyDown","document","getElementById","flexDirection","height","StyledAppBar","AppBar","top","TabContent","justifyContent","padding","PrintButtonContainer","PrintView","constructor","super","round","printInProgress","previewLayerVisible","activeTab","snackbarKey","valuesToRestoreFrom","initiatePrint","preventDefault","enqueueSnackbar","persist","printOptions","getPrintOptions","print","closeSnackbar","event","handlePotentialPrintOptionError","desiredPrintOptionsOk","hex","handleChangeTabs","handleTabsMounted","ref","setTimeout","updateIndicator","renderGeneralOptions","renderAdvancedOptions","localObserver","dims","addPreviewLayer","visibleAtStart","subscribe","getFittingScale","a11yProps","windowVisible","renderPreviewFeature","action","textColor","icon","defaultProps"],"sourceRoot":""}