{"version":3,"file":"static/js/2197.1d76c0b8.chunk.js","mappings":"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","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Location/CustomControlButtonView.js","plugins/Location/Location.js","plugins/Location/LocationModel.js","plugins/Location/LocationView.js","plugins/Location/constants/index.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts = {}) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // AppModel keeps track of recently shown plugins.\n    this.props.app.pushPluginIntoHistory({\n      type: this.type,\n      icon: this.props.custom.icon,\n      title: this.title,\n      description: this.description,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Always render a Drawer button unless its target is \"hidden\". \n              It's a backup for plugins render elsewhere: we hide \n              Widget and Control buttons on small screens and fall \n              back to Drawer button). */}\n        {target !== \"hidden\" && this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget and Control plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden\n        mdUp={\n          this.pluginIsWidget(this.props.options.target) ||\n          this.props.options.target === \"control\"\n        }\n      >\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      // Hide Control button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <PluginControlButton\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React, { useEffect, useCallback } from \"react\";\nimport { useSnackbar } from \"notistack\";\n\nimport { Paper, Tooltip } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport LocationSearchingIcon from \"@mui/icons-material/LocationSearching\";\nimport LocationDisabledIcon from \"@mui/icons-material/LocationDisabled\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\n\nimport {\n  LOCATION_DENIED_SNACK_MESSAGE,\n  LOCATION_DENIED_SNACK_OPTIONS,\n} from \"./constants\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst StyledToggleButton = styled(ToggleButton)(() => ({\n  minWidth: \"unset\",\n  // ToggleButton have a different color when not selected,\n  // but we want to unset it so it looks just like other Buttons.\n  color: \"unset\",\n  paddingLeft: 7,\n  paddingRight: 7,\n  paddingTop: 6,\n  paddingBottom: 6,\n}));\n\nconst CustomControlButtonView = React.memo(\n  ({ onClick, defaultTooltip, model }) => {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [selected, setSelected] = React.useState(false);\n    const [tooltip, setTooltip] = React.useState(defaultTooltip);\n    const [currentIcon, setCurrentIcon] = React.useState(\n      <LocationSearchingIcon />\n    );\n\n    // Handler for the \"geoLocationChange\" event. Makes sure to format the raw input data\n    // and update state with nice looking messages.\n    const handleGeoLocationChange = useCallback((rawData) => {\n      // We must do some formatting (to limit the decimal precision on\n      // some values). Let's prepare an object.\n      const formattedData = {};\n\n      // Loop through the entries of rawData and limit precision to one\n      // decimal point on all numbers.\n      for (let k in rawData) {\n        formattedData[k] = Number.isFinite(rawData[k])\n          ? rawData[k].toFixed(1)\n          : rawData[k];\n      }\n\n      // Prepare an output array that contains end-user text\n      const output = [\n        ...(formattedData.accuracy\n          ? [`Nogranhet: ${formattedData.accuracy} m\\n`]\n          : []),\n        ...(formattedData.altitude && formattedData.altitudeAccuracy\n          ? [\n              `Höjd: ${formattedData.altitude} (+/- ${formattedData.altitudeAccuracy}) m\\n`,\n            ]\n          : []),\n        ...(formattedData.speed\n          ? [`Hastighet: ${formattedData.speed} km/h\\n`]\n          : []),\n        ...(formattedData.heading\n          ? [`Riktning: ${formattedData.heading} rad\\n`]\n          : []),\n      ];\n\n      // Create the actual string that will be rendered inside the Tooltip component.\n      // The 'display: block' part is important to create line breaks inside Tooltip.\n      const str = (\n        <React.Fragment>\n          {output.map((v, i) => {\n            return (\n              <div key={i} style={{ display: \"block\" }}>\n                {v}\n              </div>\n            );\n          })}\n        </React.Fragment>\n      );\n\n      setTooltip(str);\n    }, []);\n\n    // Handler for the \"locationStatus\" event. Makes sure to update the state according\n    // to the current location status.\n    const handleStatusChange = useCallback(\n      (status) => {\n        switch (status) {\n          case \"loading\":\n            setCurrentIcon(<CircularProgress size={24} />);\n            break;\n          case \"on\":\n            setCurrentIcon(<MyLocationIcon />);\n            break;\n          case \"error\":\n            setCurrentIcon(<LocationDisabledIcon />);\n            setTooltip(\"Positionera: position ej tillgänglig\");\n            break;\n          case \"off\":\n          default:\n            setCurrentIcon(<LocationSearchingIcon />);\n            setTooltip(defaultTooltip);\n            break;\n        }\n      },\n      [defaultTooltip]\n    );\n\n    // Handler for the \"locationError\" event. Makes sure to prompt the user with information\n    // regarding the error along with information on how to fix the error.\n    const handleLocationError = useCallback(\n      (error) => {\n        // If error code is 1 (User denied Geolocation), show Snackbar with instructions to enable it again\n        if (error.code === 1) {\n          enqueueSnackbar(\n            LOCATION_DENIED_SNACK_MESSAGE,\n            LOCATION_DENIED_SNACK_OPTIONS\n          );\n        } else {\n          enqueueSnackbar(\n            `Kunde inte fastställa din plats. Felkod: ${error.code}. Detaljer: \"${error.message}\".`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      },\n      [enqueueSnackbar]\n    );\n\n    // This effect makes sure to subscribe to all events that could be sent on the local-observer.\n    useEffect(() => {\n      // We are submitting events on the local-observer when the geoLocation-api emits changes.\n      // We have to catch the local-observer events and update the view accordingly.\n      const changeListener = model.localObserver.subscribe(\n        \"geolocationChange\",\n        handleGeoLocationChange\n      );\n\n      // We are submitting events on the local-observer when the geoLocation is toggled off/on etc.\n      // We have to catch the local-observer events and update the view accordingly.\n      const statusListener = model.localObserver.subscribe(\n        \"locationStatus\",\n        handleStatusChange\n      );\n\n      // We are submitting events on the local-observer if the geoLocation-api encounters some\n      // kind of error (for example if the user has denied use of location in the browser). These\n      // are caught here.\n      const errorListener = model.localObserver.subscribe(\n        \"geolocationError\",\n        handleLocationError\n      );\n\n      // We have to make sure to clean up all listeners on eventual effect trigger.\n      return () => {\n        changeListener.unsubscribe();\n        statusListener.unsubscribe();\n        errorListener.unsubscribe();\n      };\n    }, [\n      model,\n      handleGeoLocationChange,\n      handleStatusChange,\n      handleLocationError,\n    ]);\n\n    return (\n      <Tooltip disableInteractive title={tooltip}>\n        <StyledPaper>\n          <StyledToggleButton\n            aria-label={defaultTooltip}\n            onClick={onClick}\n            value=\"check\"\n            selected={selected}\n            onChange={() => {\n              selected ? model.disable() : model.enable();\n              setSelected(!selected);\n            }}\n          >\n            {currentIcon}\n          </StyledToggleButton>\n        </StyledPaper>\n      </Tooltip>\n    );\n  }\n);\n\nexport default CustomControlButtonView;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Observer from \"react-event-observer\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\n\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\nimport LocationModel from \"./LocationModel\";\nimport LocationView from \"./LocationView\";\nimport CustomControlButtonView from \"./CustomControlButtonView\";\n\nclass Location extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.localObserver = Observer();\n    this.model = new LocationModel({\n      ...this.props,\n      localObserver: this.localObserver,\n    });\n  }\n\n  // This custom renderer (used for Control button) will bypass\n  // the usual stuff that renders in BaseWindowPlugin, while still\n  // being an instance of it.\n  // The reason we do this is that none of the available rendering\n  // modes from BaseWindowPlugin satisfy our needs. We don't want\n  // a Drawer button, neither a Widget nor Control button. Instead\n  // we need a special Toggle Button that can be either on or off,\n  // and that will render next to the \"normal\" control buttons.\n  renderControlButton() {\n    return createPortal(\n      <CustomControlButtonView\n        defaultTooltip={`Positionera: Visa min position i kartan`}\n        model={this.model}\n      />,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Location\"\n        custom={{\n          icon: <MyLocationIcon />,\n          title: \"Positionera\",\n          description: \"Visa min position i kartan\",\n          height: 450,\n          width: 430,\n          top: undefined,\n          left: undefined,\n          model: this.model,\n          // Supply a custom renderer *if* admin wants to render this plugin\n          // as a Control button\n          render:\n            this.props.options.target === \"control\"\n              ? this.renderControlButton\n              : null,\n        }}\n      >\n        <LocationView map={this.props.map} model={this.model} />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Location;\n","import Geolocation from \"ol/Geolocation.js\";\nimport Feature from \"ol/Feature.js\";\nimport Point from \"ol/geom/Point.js\";\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport { Vector as VectorSource } from \"ol/source.js\";\nimport { easeOut } from \"ol/easing\";\nimport { getVectorContext } from \"ol/render\";\nimport { unByKey } from \"ol/Observable\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style.js\";\n\nclass LocationModel {\n  constructor(props) {\n    this.map = props.map;\n    this.localObserver = props.localObserver;\n    this.zoomToLocation = true;\n\n    // Create source and layer and add to map. Later on we'll draw features to this layer.\n    this.source = new VectorSource({ wrapX: false });\n    this.layer = new VectorLayer({\n      source: this.source,\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginLocation\",\n      caption: \"Location layer\",\n    });\n    this.map.addLayer(this.layer);\n\n    // Create two features: one for position (point) and\n    // another one for position accuracy (outer ring)\n    this.accuracyFeature = new Feature();\n    this.positionFeature = new Feature();\n    this.positionFeature.setStyle(\n      new Style({\n        image: new CircleStyle({\n          radius: 6,\n          fill: new Fill({\n            color: \"#3399CC\",\n          }),\n          stroke: new Stroke({\n            color: \"#fff\",\n            width: 2,\n          }),\n        }),\n      })\n    );\n\n    // Init geolocation layer where the point will be drawn to\n    this.geolocation = new Geolocation({\n      trackingOptions: {\n        enableHighAccuracy: true,\n      },\n      projection: this.map.getView().getProjection(),\n    });\n\n    // Set up some event handlers for our Geolocation object\n    this.geolocation.on(\"change\", this.handleGeolocationChange);\n    this.geolocation.on(\"error\", this.handleGeolocationError);\n    this.geolocation.on(\n      \"change:accuracyGeometry\",\n      this.handleGeolocationChangeAccuracy\n    );\n    this.geolocation.on(\n      \"change:position\",\n      this.handleGeolocationChangePosition\n    );\n  }\n\n  handleGeolocationChange = (e) => {\n    this.localObserver.publish(\"geolocationChange\", {\n      accuracy: e.target.getAccuracy(),\n      altitude: e.target.getAltitude(),\n      altitudeAccuracy: e.target.getAltitudeAccuracy(),\n      heading: e.target.getHeading(),\n      speed: e.target.getSpeed(),\n    });\n  };\n\n  handleGeolocationError = (error) => {\n    this.localObserver.publish(\"locationStatus\", \"error\");\n    // Yeah, it's clumsy but we want to send another event\n    // with the error object, so the first event is not enough.\n    this.localObserver.publish(\"geolocationError\", error);\n  };\n\n  handleGeolocationChangeAccuracy = (e) => {\n    this.accuracyFeature.setGeometry(e.target.getAccuracyGeometry());\n  };\n\n  handleGeolocationChangePosition = (e) => {\n    const coordinates = e.target.getPosition();\n    this.positionFeature.setGeometry(\n      coordinates ? new Point(coordinates) : null\n    );\n\n    // If we've got new coordinates, make sure to hide the loading indicator\n    this.localObserver.publish(\"locationStatus\", \"on\");\n\n    if (this.zoomToLocation) {\n      const maxZoom = this.map.getView().getMaxZoom();\n      const minZoom = this.map.getView().getMinZoom();\n      const zoom = Math.ceil((maxZoom - minZoom) * 0.5); // Let's end up in the middle zoom\n      this.map.getView().animate({ duration: 2500, center: coordinates, zoom });\n      this.zoomToLocation = false;\n    }\n  };\n\n  toggleTracking = (active) => {\n    // Inform the View components that we're loading\n    this.localObserver.publish(\"locationStatus\", active ? \"loading\" : \"off\");\n\n    this.geolocation.setTracking(active);\n\n    // If deactivating, cleanup\n    if (active === false) {\n      // Remove features from map if tracking has been switched off\n      this.layer.getSource().clear();\n      // Make sure that we zoom to location next time tracking is activated\n      this.zoomToLocation = true;\n    }\n    // If activating, add two features to map:\n    // one for accuracy (the outer ring) and one for position (inner point)\n    else {\n      this.layer.getSource().addFeature(this.accuracyFeature);\n      this.layer.getSource().addFeature(this.positionFeature);\n\n      // Finally, start flashing the position feature\n      setInterval(() => {\n        this.flash(this.positionFeature);\n      }, 3000);\n    }\n  };\n\n  // Flash handler: sets up the animation and creats a handler for the postrender\n  flash = (feature) => {\n    // Helper: takes care of the actual animation.\n    const animate = (event) => {\n      // Event is the postrender event that happens - surprise - after render,\n      // because we actually tell the map to render (see at the end of this function)\n      const frameState = event.frameState;\n      const elapsed = frameState.time - start;\n      if (elapsed >= duration) {\n        // Remove the listener when time has elapsed\n        unByKey(listenerKey);\n        return;\n      }\n\n      // Grab the context that will hold our animated feature\n      const vectorContext = getVectorContext(event);\n      const elapsedRatio = elapsed / duration;\n\n      // Radius will be 5 at start and 30 at end\n      const radius = easeOut(elapsedRatio) * 25 + 5;\n      const opacity = easeOut(1 - elapsedRatio);\n\n      const style = new Style({\n        image: new CircleStyle({\n          radius: radius,\n          stroke: new Stroke({\n            color: \"rgba(255, 0, 0, \" + opacity + \")\",\n            width: 0.25 + opacity,\n          }),\n        }),\n      });\n\n      vectorContext.setStyle(style);\n      vectorContext.drawGeometry(flashGeom);\n\n      // This ensure that the listener for postrender will be triggered\n      this.map.render();\n    };\n\n    // Setup the animation\n    const duration = 3000;\n    const start = Date.now();\n    // Prepare the feature that will get animated\n    const flashGeom = feature.getGeometry().clone();\n    // Save the listener key so we can unsubscribe when animation is done\n    const listenerKey = this.layer.on(\"postrender\", animate);\n  };\n\n  enable() {\n    this.toggleTracking(true);\n  }\n\n  disable() {\n    this.toggleTracking(false);\n  }\n}\n\nexport default LocationModel;\n","import React from \"react\";\n\nimport { withSnackbar } from \"notistack\";\n\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\nimport {\n  LOCATION_DENIED_SNACK_MESSAGE,\n  LOCATION_DENIED_SNACK_OPTIONS,\n} from \"./constants\";\n\nclass LocationView extends React.PureComponent {\n  state = {\n    loading: false, // indicates if loading is in progress\n    track: false, // enables or disables GPS tracking\n    accuracy: undefined, // this and the following actual GPS info values\n    altitude: undefined,\n    altitudeAccuracy: undefined,\n    heading: undefined,\n    speed: undefined,\n  };\n\n  locationDetails = {\n    accuracy: { id: 0, label: \"Precision (m)\" },\n    altitude: { id: 1, label: \"Höjd (m. ö. h.)\" },\n    altitudeAccuracy: { id: 2, label: \"Höjdprecision (m)\" },\n    heading: { id: 3, label: \"Riktning (rad)\" },\n    speed: { id: 4, label: \"Hastighet (m/s)\" },\n  };\n\n  componentDidMount() {\n    this.map = this.props.map;\n    this.model = this.props.model;\n\n    this.model.localObserver.subscribe(\n      \"geolocationChange\",\n      ({ accuracy, altitude, altitudeAccuracy, heading, speed }) => {\n        this.setState({\n          accuracy,\n          altitude,\n          altitudeAccuracy,\n          heading,\n          speed,\n        });\n      }\n    );\n\n    this.model.localObserver.subscribe(\"locationStatus\", (status) => {\n      switch (status) {\n        case \"loading\":\n          this.setState({ loading: true });\n          break;\n        case \"on\":\n          this.setState({ loading: false });\n          break;\n        case \"error\":\n          this.setState({ loading: false });\n          break;\n        case \"off\":\n        default:\n          this.setState({ loading: false });\n          break;\n      }\n    });\n\n    this.model.localObserver.subscribe(\"geolocationError\", (error) => {\n      // If error code is 1 (User denied Geolocation), show Snackbar with instructions to enable it again\n      if (error.code === 1) {\n        this.props.enqueueSnackbar(\n          LOCATION_DENIED_SNACK_MESSAGE,\n          LOCATION_DENIED_SNACK_OPTIONS\n        );\n      } else {\n        this.props.enqueueSnackbar(\n          `Kunde inte fastställa din plats. Felkod: ${error.code}. Detaljer: \"${error.message}\".`,\n          {\n            variant: \"error\",\n          }\n        );\n      }\n    });\n  }\n\n  toggleTracking = (event) => {\n    const { checked } = event.target;\n    checked ? this.model.enable() : this.model.disable();\n    this.setState({ track: checked });\n    this.setState({ loading: checked });\n  };\n\n  renderLocationDetails() {\n    if (this.state.track === false) {\n      return null;\n    } else {\n      return (\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Egenskap</TableCell>\n                <TableCell align=\"right\">Värde</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(this.locationDetails).map((row) => {\n                let r = this.locationDetails[row];\n                return (\n                  <TableRow key={r.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {r.label}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {this.state[row] ? this.state[row] : \"–\"}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <FormGroup row>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.track}\n                onChange={this.toggleTracking}\n                value=\"track\"\n              />\n            }\n            label=\"Visa min position\"\n          />\n        </FormGroup>\n        {this.state.loading && <LinearProgress />}\n        {this.renderLocationDetails()}\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(LocationView);\n","export const LOCATION_DENIED_SNACK_MESSAGE =\n  \"Du behöver tillåta att applikationen visar din position. För datorer: De flesta webbläsare har en lås-ikon i adressfältet som du kan klicka på för att tillåta Plats/Position.\";\nexport const LOCATION_DENIED_SNACK_OPTIONS = Object.freeze({\n  variant: \"info\",\n  persist: false,\n  anchorOrigin: {\n    vertical: \"top\",\n    horizontal: \"center\",\n  },\n});\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","React","state","open","render","abstract","icon","onClick","title","this","props","avatar","subheader","defaultProps","BaseWindowPlugin","constructor","super","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","pushPluginIntoHistory","custom","description","windowVisible","onWindowOpen","setState","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","componentDidUpdate","prevProps","pluginIsWidget","target","includes","renderWindow","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","StyledPaper","Paper","StyledToggleButton","ToggleButton","minWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","CustomControlButtonView","defaultTooltip","model","enqueueSnackbar","useSnackbar","setSelected","tooltip","setTooltip","currentIcon","setCurrentIcon","handleGeoLocationChange","useCallback","rawData","formattedData","k","Number","isFinite","toFixed","output","accuracy","altitude","altitudeAccuracy","speed","heading","str","v","i","style","display","handleStatusChange","status","size","handleLocationError","error","code","LOCATION_DENIED_SNACK_MESSAGE","LOCATION_DENIED_SNACK_OPTIONS","message","variant","useEffect","changeListener","localObserver","statusListener","errorListener","unsubscribe","disableInteractive","value","onChange","disable","enable","Location","Observer","LocationModel","top","left","handleGeolocationChange","getAccuracy","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","handleGeolocationError","handleGeolocationChangeAccuracy","accuracyFeature","setGeometry","getAccuracyGeometry","handleGeolocationChangePosition","coordinates","getPosition","positionFeature","Point","zoomToLocation","maxZoom","getView","getMaxZoom","minZoom","getMinZoom","zoom","Math","ceil","animate","duration","center","toggleTracking","active","geolocation","setTracking","layer","getSource","clear","addFeature","setInterval","flash","feature","start","Date","now","flashGeom","getGeometry","clone","listenerKey","on","event","elapsed","frameState","time","unByKey","vectorContext","getVectorContext","elapsedRatio","radius","easeOut","opacity","Style","image","CircleStyle","stroke","Stroke","setStyle","drawGeometry","source","VectorSource","wrapX","VectorLayer","layerType","zIndex","name","caption","addLayer","Feature","fill","Fill","Geolocation","trackingOptions","enableHighAccuracy","projection","getProjection","LocationView","loading","track","locationDetails","label","checked","componentDidMount","renderLocationDetails","align","Object","keys","row","r","component","scope","control","withSnackbar","freeze","persist","anchorOrigin","vertical","horizontal"],"sourceRoot":""}