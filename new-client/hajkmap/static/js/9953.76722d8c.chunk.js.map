{"version":3,"file":"static/js/9953.76722d8c.chunk.js","mappings":"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","sources":["plugins/LayerSwitcher/components/BackgroundSwitcher.js","plugins/LayerSwitcher/components/LayerItem.js","../node_modules/@mui/icons-material/CallMade.js","../node_modules/@mui/icons-material/CheckBox.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","../node_modules/@mui/icons-material/CloudDownload.js","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/icons-material/KeyboardArrowRight.js","../node_modules/@mui/icons-material/MoreHoriz.js","../node_modules/@mui/icons-material/RadioButtonChecked.js","../node_modules/@mui/icons-material/Refresh.js","../node_modules/@mui/icons-material/RemoveCircle.js","../node_modules/@mui/icons-material/TableView.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isValidLayerId } from \"utils/Validator\";\nimport OSM from \"ol/source/OSM\";\nimport TileLayer from \"ol/layer/Tile\";\nimport LayerItem from \"./LayerItem.js\";\nimport Observer from \"react-event-observer\";\nimport Box from \"@mui/material/Box\";\n\nconst WHITE_BACKROUND_LAYER_ID = \"-1\";\nconst BLACK_BACKROUND_LAYER_ID = \"-2\";\nconst OSM_BACKGROUND_LAYER_ID = \"-3\";\n\nconst SPECIAL_BACKGROUND_COLORS = {\n  [WHITE_BACKROUND_LAYER_ID]: \"#fff\",\n  [BLACK_BACKROUND_LAYER_ID]: \"#000\",\n};\n\nclass BackgroundSwitcher extends React.PureComponent {\n  state = {\n    selectedLayerId: null,\n  };\n\n  static propTypes = {\n    backgroundSwitcherBlack: propTypes.bool.isRequired,\n    backgroundSwitcherWhite: propTypes.bool.isRequired,\n    enableOSM: propTypes.bool.isRequired,\n    display: propTypes.bool.isRequired,\n    layerMap: propTypes.object.isRequired,\n    layers: propTypes.array.isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.localObserver = Observer();\n    if (props.enableOSM) {\n      this.osmSource = new OSM({\n        reprojectionErrorThreshold: 5,\n      });\n      this.osmLayer = new TileLayer({\n        visible: false,\n        source: this.osmSource,\n        zIndex: -1,\n        layerType: \"base\",\n        name: \"osm-layer\",\n        caption: \"OpenStreetMap\",\n        layerInfo: {\n          caption: \"OpenStreetMap\",\n          layerType: \"base\",\n        },\n      });\n    }\n  }\n\n  /**\n   * @summary If there's a Background layer that is visible from start, make sure that proper radio button is selected in Background Switcher.\n   * @memberof BackgroundSwitcher\n   */\n  componentDidMount() {\n    const backgroundVisibleFromStart = this.props.layers.find(\n      (layer) => layer.visible\n    );\n    backgroundVisibleFromStart &&\n      this.setState({\n        selectedLayerId: backgroundVisibleFromStart.name,\n      });\n\n    if (this.props.enableOSM) {\n      // Initiate our special case layer, OpenStreetMap\n      this.props.map.addLayer(this.osmLayer);\n    }\n\n    // Ensure that BackgroundSwitcher correctly selects visible layer,\n    // by listening to a event that each layer will send when its visibility\n    // changes.\n    this.props.app.globalObserver.subscribe(\n      \"core.layerVisibilityChanged\",\n      ({ target: layer }) => {\n        const name = layer.get(\"name\");\n\n        // Early return if layer who's visibility was changed couldn't\n        // be found among the background layers, or if the visibility\n        // was changed to 'false'.\n        if (\n          this.props.layers.findIndex((l) => name === l.name) === -1 ||\n          layer.get(\"visible\") === false\n        ) {\n          return;\n        }\n\n        // If we got this far, we have a background layer that just\n        // became visible. Let's notify the radio buttons by setting state!\n        this.setState({\n          selectedLayerId: layer.get(\"name\"),\n        });\n      }\n    );\n  }\n\n  isSpecialBackgroundLayer = (id) => {\n    return [\n      WHITE_BACKROUND_LAYER_ID,\n      BLACK_BACKROUND_LAYER_ID,\n      OSM_BACKGROUND_LAYER_ID,\n    ].includes(id);\n  };\n\n  setSpecialBackground = (id) => {\n    document.getElementById(\"map\").style.backgroundColor =\n      SPECIAL_BACKGROUND_COLORS[id];\n  };\n\n  /**\n   * @summary Hides previously selected background and shows current selection.\n   * @param {Object} e The event object, contains target's value\n   */\n  onChange = (e) => {\n    const newSelectedId = e.target.value;\n    const { selectedLayerId } = this.state;\n    const { layerMap } = this.props;\n\n    this.isSpecialBackgroundLayer(newSelectedId)\n      ? this.setSpecialBackground(newSelectedId)\n      : layerMap[newSelectedId].setVisible(true);\n\n    !this.isSpecialBackgroundLayer(selectedLayerId) &&\n      layerMap[selectedLayerId].setVisible(false);\n    this.osmLayer &&\n      this.osmLayer.setVisible(newSelectedId === OSM_BACKGROUND_LAYER_ID);\n\n    this.setState({\n      selectedLayerId: newSelectedId,\n    });\n  };\n\n  /**\n   * @summary Returns a <div> that contains a {React.Component} consisting of one Radio button.\n   *\n   * @param {Object} config Base layer to be rendered\n   * @param {Number} index Unique key\n   * @returns {React.Component}\n   * @memberof BackgroundSwitcher\n   */\n  renderRadioButton(config, index) {\n    const checked = this.state.selectedLayerId === config.name;\n\n    // mapLayer will be sent to the LayerItem component. It will contain\n    // the Hajk layer with all properties.\n    let mapLayer = this.props.layerMap[config.name];\n\n    // There's a special case for the OpenStreetMap layer. It does not exist\n    // in Hajk's layers repository, but has been created here, as a property\n    // of 'this'. Let's set mapLayer accordingly.\n    if (config.name === OSM_BACKGROUND_LAYER_ID) {\n      mapLayer = this.osmLayer;\n      mapLayer.set(\"foo\", \"bar\");\n      // mapLayer.set(\"layerInfo\", { layerType: \"base\" });\n    }\n\n    // If we still don't have any mapLayer it means it's neither existing in\n    // Hajks layers repository, nor the OSM layer. (This will be the case for our\n    // black and white background colors.) In this case, let's prepare a fake\n    // 'mapLayer' that contains the necessary properties, so we can use the same\n    // logic further on.\n    if (!mapLayer) {\n      // Add some values so the code does not crash in LayerItem's constructor\n      mapLayer = {\n        isFakeMapLayer: true,\n        properties: {\n          name: config.name,\n          visible: checked,\n          layerInfo: {\n            caption: config.caption,\n            name: config.name,\n            layerType: \"base\",\n          },\n          opacity: 1, // Only full opacity available for black/white backgrounds\n        },\n        get(key) {\n          return this.properties[key];\n        },\n        set(key, value) {\n          this.properties[key] = value;\n        },\n        getProperties() {\n          return Object.keys(this.properties);\n        },\n      };\n    }\n\n    // No matter the type of 'mapLayer', we want to append these\n    // properties:\n    mapLayer[\"localObserver\"] = this.localObserver;\n\n    // Finally, let's render the component\n    return (\n      <LayerItem\n        key={index}\n        layer={mapLayer}\n        model={this.props.model}\n        options={this.props.options}\n        app={this.props.app}\n      />\n    );\n  }\n\n  /**\n   * Prepares an array of radio buttons with the configured base layers.\n   *\n   * @returns {React.Component[]} radioButtons Array of ready to use DOM components of Radio buttons\n   * @memberof BackgroundSwitcher\n   */\n  renderBaseLayerComponents() {\n    const { backgroundSwitcherWhite, backgroundSwitcherBlack, enableOSM } =\n      this.props;\n    let radioButtons = [],\n      defaults = [];\n\n    /**\n     * If admin wants to display white/black options for background, let's\n     * call renderRadioButton() for those two special cases. The resulting\n     * Component will be pushed into an array called @param defaults.\n     */\n    if (backgroundSwitcherWhite) {\n      defaults.push(\n        this.renderRadioButton(\n          {\n            name: WHITE_BACKROUND_LAYER_ID,\n            caption: \"Vit\",\n          },\n          Number(WHITE_BACKROUND_LAYER_ID)\n        )\n      );\n    }\n    if (backgroundSwitcherBlack) {\n      defaults.push(\n        this.renderRadioButton(\n          {\n            name: BLACK_BACKROUND_LAYER_ID,\n            caption: \"Svart\",\n          },\n          Number(BLACK_BACKROUND_LAYER_ID)\n        )\n      );\n    }\n\n    enableOSM &&\n      defaults.push(\n        this.renderRadioButton(\n          { name: OSM_BACKGROUND_LAYER_ID, caption: \"OpenStreetMap\" },\n          Number(OSM_BACKGROUND_LAYER_ID)\n        )\n      );\n\n    /**\n     * Let's construct the final array of radio buttons. It will consists\n     * of the defaults from above, plus the result of calling renderRadioButton()\n     * for each base layer.\n     */\n    radioButtons = [\n      ...defaults,\n      ...this.props.layers\n        .filter((layer) => {\n          //Remove layers not having a valid id\n          const validLayerId = isValidLayerId(layer.name);\n          if (!validLayerId) {\n            console.warn(\n              `Backgroundlayer with id ${layer.name} has a non-valid id`\n            );\n          }\n          return validLayerId;\n        })\n        .map((layerConfig, i) => this.renderRadioButton(layerConfig, i)),\n    ];\n\n    return radioButtons;\n  }\n\n  render() {\n    return (\n      <Box sx={{ display: this.props.display ? \"block\" : \"none\" }}>\n        {this.renderBaseLayerComponents()}\n      </Box>\n    );\n  }\n}\n\nexport default BackgroundSwitcher;\n","import React from \"react\";\nimport { withSnackbar } from \"notistack\";\nimport { styled } from \"@mui/material/styles\";\nimport { Button, Tooltip, Typography, Grid } from \"@mui/material\";\n\nimport IconWarning from \"@mui/icons-material/Warning\";\nimport CallMadeIcon from \"@mui/icons-material/CallMade\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport RemoveCircleIcon from \"@mui/icons-material/RemoveCircle\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport RadioButtonChecked from \"@mui/icons-material/RadioButtonChecked\";\nimport RadioButtonUnchecked from \"@mui/icons-material/RadioButtonUnchecked\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport TableViewIcon from \"@mui/icons-material/TableView\";\n\nimport LayerGroupItem from \"./LayerGroupItem.js\";\nimport LayerSettings from \"./LayerSettings.js\";\nimport DownloadLink from \"./DownloadLink.js\";\n\nconst LayerItemContainer = styled(\"div\")(({ theme }) => ({\n  paddingLeft: \"0\",\n  borderBottom: `${theme.spacing(0.2)} solid ${theme.palette.divider}`,\n}));\n\nconst LayerItemWrapper = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginTop: \"0\",\n}));\n\nconst LayerTogglerButtonWrapper = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  cursor: \"pointer\",\n  float: \"left\",\n  marginRight: \"5px\",\n}));\n\nconst InfoTextContainer = styled(\"div\")(({ theme }) => ({\n  margin: \"10px 45px\",\n}));\n\nconst Caption = styled(Typography)(({ theme }) => ({\n  cursor: \"pointer\",\n  fontSize: theme.typography.pxToRem(15),\n}));\n\nconst LegendIcon = styled(\"img\")(({ theme }) => ({\n  width: theme.typography.pxToRem(18),\n  height: theme.typography.pxToRem(18),\n  marginRight: \"5px\",\n}));\n\nconst LayerButtonsContainer = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n}));\n\nconst LayerButtonWrapper = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  width: 35,\n  height: 35,\n  cursor: \"pointer\",\n}));\n\nconst StyledList = styled(\"ul\")(() => ({\n  padding: 0,\n  margin: 0,\n  listStyle: \"none\",\n}));\n\nclass LayerItem extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { layer } = props;\n    const layerInfo = layer.get(\"layerInfo\");\n\n    this.isBackgroundLayer = layerInfo.layerType === \"base\";\n    this.caption = layerInfo.caption;\n    this.name = layer.get(\"name\");\n    this.legend = layerInfo.legend;\n    this.legendIcon = layerInfo.legendIcon;\n    this.infoTitle = layerInfo.infoTitle;\n    this.infoText = layerInfo.infoText;\n    this.infoUrl = layerInfo.infoUrl;\n    this.infoUrlText = layerInfo.infoUrlText;\n    this.infoOwner = layerInfo.infoOwner;\n    this.localObserver = layer.localObserver;\n    this.showAttributeTableButton = layerInfo.showAttributeTableButton || false;\n    this.usesMinMaxZoom = this.layerUsesMinMaxZoom();\n    this.minMaxZoomAlertOnToggleOnly = layer.get(\"minMaxZoomAlertOnToggleOnly\");\n\n    this.state = {\n      visible: layer.get(\"visible\"),\n      status: \"ok\",\n      zoomVisible: true,\n      open: false,\n      toggleSettings: false,\n      infoVisible: false,\n    };\n\n    // Subscribe to events sent when another background layer is clicked and\n    // disable all other layers to implement the RadioButton behaviour\n    if (this.isBackgroundLayer) {\n      layer.localObserver.subscribe(\"backgroundLayerChanged\", (activeLayer) => {\n        if (activeLayer !== this.name) {\n          if (!layer.isFakeMapLayer) {\n            layer.setVisible(false);\n          }\n          this.setState({\n            visible: false,\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Triggered when the component is successfully mounted into the DOM.\n   * @instance\n   */\n  componentDidMount() {\n    this.props.layer.on?.(\"change:visible\", (e) => {\n      const visible = !e.oldValue;\n      this.setState({\n        visible,\n      });\n\n      this.listenToZoomChange(visible);\n    });\n\n    if (this.state.visible) {\n      this.triggerZoomCheck(null, this.state.visible);\n    }\n    this.listenToZoomChange(this.state.visible);\n\n    // Set load status by subscribing to a global event. Expect ID (int) of layer\n    // and status (string \"ok\"|\"loaderror\"). Also, once status was set to \"loaderror\",\n    // don't change it back to \"ok\": we'll get a response for each tile, so most of\n    // the tiles might be \"ok\", but if only one of the tiles has \"loaderror\", we\n    // consider that the layer has failed loading and want to inform the user.\n    this.props.app.globalObserver.subscribe(\n      \"layerswitcher.wmsLayerLoadStatus\",\n      (d) => {\n        this.state.status !== \"loaderror\" &&\n          this.name === d.id &&\n          this.setState({\n            status: d.status,\n          });\n      }\n    );\n  }\n\n  layerUsesMinMaxZoom() {\n    const lprops = this.props.layer.getProperties();\n    const maxZ = lprops.maxZoom ?? 0;\n    const minZ = lprops.minZoom ?? 0;\n    // When reading min/max-Zoom from layer, its not consistent with the\n    // initial values from config. Suddenly Infinity is used.\n    return (maxZ > 0 && maxZ < Infinity) || (minZ > 0 && minZ < Infinity);\n  }\n\n  zoomEndHandler = (e) => {\n    const zoom = this.props.model.olMap.getView().getZoom();\n    const lprops = this.props.layer.getProperties();\n    const layerIsZoomVisible = zoom > lprops.minZoom && zoom <= lprops.maxZoom;\n\n    let showSnack = false;\n\n    if (this.minMaxZoomAlertOnToggleOnly === true) {\n      if (!this.state.visible && !layerIsZoomVisible && e?.type === \"click\") {\n        showSnack = true;\n      }\n    } else {\n      if (\n        !layerIsZoomVisible &&\n        (this.state.zoomVisible || !this.state.visible)\n      ) {\n        showSnack = true;\n      }\n    }\n\n    if (showSnack === true) {\n      this.showZoomSnack();\n    }\n\n    this.setState({\n      zoomVisible: layerIsZoomVisible,\n    });\n    return layerIsZoomVisible;\n  };\n\n  listenToZoomChange(bListen) {\n    if (!this.usesMinMaxZoom) return;\n\n    const eventName = \"core.zoomEnd\";\n    if (bListen && !this.zoomEndListener) {\n      this.zoomEndListener = this.props.app.globalObserver.subscribe(\n        eventName,\n        this.zoomEndHandler\n      );\n    } else {\n      if (this.zoomEndListener) {\n        this.props.app.globalObserver.unsubscribe(\n          eventName,\n          this.zoomEndListener\n        );\n        this.zoomEndListener = null;\n      }\n    }\n  }\n\n  showZoomSnack() {\n    if (this.zoomWarningSnack) return;\n\n    // We're fetching layerInfo object from the layer object.\n    const layerInfo = this.props.layer.get(\"layerInfo\");\n\n    // If layerInfo is defined, we get layersInfo from it.\n    // Otherwise, layersInfo is set as undefined.\n    const layersInfo = layerInfo ? layerInfo.layersInfo : undefined;\n\n    // If the layer is a LayerGroupItem (meaning it contains more than one object in the \"layersInfo\" array),\n    // then no message should be displayed.\n    // Here we also ensure that layersInfo is defined and contains more than one layer\n    // before trying to access its keys. This prevents a TypeError when layersInfo\n    // is undefined.\n    if (layersInfo && Object.keys(layersInfo).length > 1) {\n      return;\n    }\n\n    this.zoomWarningSnack = this.props.enqueueSnackbar(\n      `Lagret \"${this.caption}\"  är inte synligt vid aktuell zoomnivå.`,\n      {\n        variant: \"warning\",\n        preventDuplicate: true,\n        onClose: () => {\n          this.zoomWarningSnack = null;\n        },\n      }\n    );\n  }\n\n  triggerZoomCheck(e, visible) {\n    if (!this.usesMinMaxZoom) return;\n\n    this.zoomEndHandler(e);\n\n    if (visible === false) {\n      if (!this.zoomWarningSnack) return;\n      this.props.closeSnackbar(this.zoomWarningSnack);\n      this.zoomWarningSnack = null;\n    }\n  }\n\n  /**\n   * Toggle visibility of this layer item.\n   * Also, if layer is being hidden, reset \"status\" (if layer loading failed,\n   * \"status\" is \"loaderror\", and it should be reset if user unchecks layer).\n   * @instance\n   */\n  toggleVisible = (e) => {\n    const layer = this.props.layer;\n    if (this.isBackgroundLayer) {\n      document.getElementById(\"map\").style.backgroundColor = \"#FFF\"; // sets the default background color to white\n      if (layer.isFakeMapLayer) {\n        switch (this.name) {\n          case \"-2\":\n            document.getElementById(\"map\").style.backgroundColor = \"#000\";\n            break;\n          case \"-1\":\n          default:\n            document.getElementById(\"map\").style.backgroundColor = \"#FFF\";\n            break;\n        }\n      } else {\n        layer.setVisible(true);\n      }\n      this.setState({ visible: true });\n      // Publish event to ensure all other background layers are disabled\n      layer.localObserver.publish(\"backgroundLayerChanged\", this.name);\n    } else {\n      const visible = !this.state.visible;\n      this.setState({\n        visible,\n      });\n      this.props.layer.setVisible(visible);\n      this.triggerZoomCheck(e, visible);\n    }\n  };\n\n  /**\n   * Render the load information component.\n   * @instance\n   * @return {external:ReactElement}\n   */\n  renderStatusButton() {\n    return (\n      this.state.status === \"loaderror\" && (\n        <Tooltip\n          disableInteractive\n          title=\"Lagret kunde inte laddas in. Kartservern svarar inte.\"\n        >\n          <LayerButtonWrapper>\n            <IconWarning />\n          </LayerButtonWrapper>\n        </Tooltip>\n      )\n    );\n  }\n\n  renderInfoButton = () => {\n    return this.isInfoEmpty() ? null : (\n      <Tooltip title=\"Mer information om lagret\">\n        <LayerButtonWrapper>\n          {this.state.infoVisible ? (\n            <RemoveCircleIcon onClick={this.toggleInfo} />\n          ) : (\n            <InfoIcon\n              onClick={this.toggleInfo}\n              sx={{\n                boxShadow: this.state.infoVisible\n                  ? \"rgb(204, 204, 204) 2px 3px 1px\"\n                  : \"inherit\",\n                borderRadius: \"100%\",\n              }}\n            />\n          )}\n        </LayerButtonWrapper>\n      </Tooltip>\n    );\n  };\n\n  renderMoreButton = () => {\n    return (\n      <Tooltip title=\"Fler inställningar\">\n        <LayerButtonWrapper>\n          {this.state.toggleSettings ? (\n            <CloseIcon onClick={this.toggleSettings} />\n          ) : (\n            <MoreHorizIcon onClick={this.toggleSettings} />\n          )}\n        </LayerButtonWrapper>\n      </Tooltip>\n    );\n  };\n\n  renderLegendImage() {\n    const src =\n      this.legend && this.legend[0] && this.legend[0].url\n        ? this.legend[0].url\n        : \"\";\n    return src ? <img width=\"30\" alt=\"legend\" src={src} /> : null;\n  }\n\n  isInfoEmpty() {\n    let chaptersWithLayer = this.findChapters(this.name, this.props.chapters);\n    return !(\n      this.infoCaption ||\n      this.infoUrl ||\n      this.infoOwner ||\n      this.infoText ||\n      chaptersWithLayer.length > 0\n    );\n  }\n\n  openInformative = (chapter) => (e) => {\n    this.props.onOpenChapter(chapter);\n  };\n\n  findChapters(id, chapters) {\n    let result = [];\n    if (Array.isArray(chapters)) {\n      result = chapters.reduce((chaptersWithLayer, chapter) => {\n        if (Array.isArray(chapter.layers)) {\n          if (chapter.layers.some((layerId) => layerId === id)) {\n            chaptersWithLayer = [...chaptersWithLayer, chapter];\n          }\n          if (chapter.chapters.length > 0) {\n            chaptersWithLayer = [\n              ...chaptersWithLayer,\n              ...this.findChapters(id, chapter.chapters),\n            ];\n          }\n        }\n        return chaptersWithLayer;\n      }, []);\n    }\n    return result;\n  }\n\n  renderChapterLinks(chapters) {\n    if (chapters && chapters.length > 0) {\n      let chaptersWithLayer = this.findChapters(this.name, chapters);\n      if (chaptersWithLayer.length > 0) {\n        return (\n          <InfoTextContainer>\n            <Typography>\n              Innehåll från denna kategori finns benämnt i följande kapitel i\n              översiktsplanen:\n            </Typography>\n            <StyledList>\n              {chaptersWithLayer.map((chapter, i) => {\n                return (\n                  <li key={i}>\n                    <Button\n                      size=\"small\"\n                      onClick={this.openInformative(chapter)}\n                    >\n                      {chapter.header}\n                      <CallMadeIcon sx={{ marginLeft: 1, fontSize: \"16px\" }} />\n                    </Button>\n                  </li>\n                );\n              })}\n            </StyledList>\n          </InfoTextContainer>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  toggle() {\n    this.setState({\n      open: !this.state.open,\n    });\n  }\n\n  renderInfo() {\n    if (this.infoText) {\n      return (\n        <InfoTextContainer>\n          <Typography variant=\"subtitle2\">{this.infoTitle}</Typography>\n          <Typography\n            variant=\"body2\"\n            dangerouslySetInnerHTML={{\n              __html: this.infoText,\n            }}\n          />\n        </InfoTextContainer>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderMetadataLink() {\n    if (this.infoUrl) {\n      return (\n        <InfoTextContainer>\n          <a href={this.infoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.infoUrlText || this.infoUrl}\n          </a>\n        </InfoTextContainer>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderOwner() {\n    if (this.infoOwner) {\n      return (\n        <InfoTextContainer>\n          <Typography\n            variant=\"body2\"\n            dangerouslySetInnerHTML={{ __html: this.infoOwner }}\n          />\n        </InfoTextContainer>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderDetails() {\n    if (this.state.infoVisible) {\n      return (\n        <div>\n          {this.renderInfo()}\n          {this.renderMetadataLink()}\n          {this.renderOwner()}\n          <div>{this.renderChapterLinks(this.props.chapters || [])}</div>\n        </div>\n      );\n    }\n  }\n\n  toggleSettings = () => {\n    this.setState({\n      toggleSettings: !this.state.toggleSettings,\n    });\n  };\n\n  toggleInfo = () => {\n    this.setState({\n      infoVisible: !this.state.infoVisible,\n    });\n  };\n\n  renderLegendIcon() {\n    return <LegendIcon alt=\"Teckenförklaring\" src={this.legendIcon} />;\n  }\n\n  getLayerToggler = () => {\n    const { visible } = this.state;\n    const icon = visible ? (\n      this.isBackgroundLayer ? (\n        <RadioButtonChecked />\n      ) : (\n        <CheckBoxIcon\n          sx={{\n            fill: (theme) =>\n              !this.state.zoomVisible && this.state.visible\n                ? theme.palette.warning.dark\n                : \"\",\n          }}\n        />\n      )\n    ) : this.isBackgroundLayer ? (\n      <RadioButtonUnchecked />\n    ) : (\n      <CheckBoxOutlineBlankIcon />\n    );\n    return <LayerTogglerButtonWrapper>{icon}</LayerTogglerButtonWrapper>;\n  };\n\n  #showAttributeTable = async () => {\n    try {\n      const url = this.props.layer.getSource().get(\"url\").replace(\"wms\", \"wfs\");\n      const { LAYERS } = this.props.layer.getSource().getParams();\n      // If URL already contains a query string part, we want to glue them together.\n      const glue = url.includes(\"?\") ? \"&\" : \"?\";\n      const getFeatureUrl = `${url}${glue}service=WFS&version=1.0.0&request=GetFeature&typeName=${LAYERS}&maxFeatures=5000&outputFormat=application%2Fjson`;\n      const describeFeatureTypeUrl = `${url}${glue}service=WFS&version=1.0.0&request=DescribeFeatureType&typeName=${LAYERS}&outputFormat=application%2Fjson`;\n      // TODO: QGIS Server doesn't support JSON response for DescribeFeatureType. We must\n      // fetch the result as GML2 and then parse it accordingly. This will require\n      // some more work than the current approach.\n      // const describeFeatureTypeUrl = `${url}${glue}service=WFS&version=1.0.0&request=DescribeFeatureType&typeName=${LAYERS}`;\n      const r1 = await fetch(getFeatureUrl);\n      const features = await r1.json();\n      const r2 = await fetch(describeFeatureTypeUrl);\n      const description = await r2.json();\n\n      const columns = description.featureTypes\n        .find((f) => f.typeName === LAYERS) // featureTypes contains an object, where typeName will be the same as the layer name we requested\n        .properties.filter((c) => !c.type.toLowerCase().includes(\"gml\")) // Best guess to try to filter out the geometry column, we don't want to show it\n        .map((c) => {\n          // Prepare an object that has the format of 'columns' prop for MUI's DataGrid\n          return {\n            field: c.name,\n            headerName: c.name,\n            type: c.localType === \"int\" ? \"number\" : c.localType, // DataGrid wants 'number', not 'int', see https://mui.com/components/data-grid/columns/#column-types\n            flex: 1,\n          };\n        });\n\n      const rows = features.features.map((r, i) => {\n        return { ...r.properties, id: i };\n      });\n\n      this.props.app.globalObserver.publish(\"core.showAttributeTable\", {\n        title: `${this.caption} (${LAYERS})`,\n        content: { columns, rows },\n      });\n    } catch (error) {\n      console.error(error);\n      console.log(this);\n      this.props.enqueueSnackbar(\n        `Serverfel: attributtabellen för lagret \"${this.caption}\" kunde inte visas`,\n        { variant: \"error\" }\n      );\n    }\n  };\n\n  render() {\n    const { layer, model, app, chapters } = this.props;\n\n    const cqlFilterVisible =\n      this.props.app.config.mapConfig.map?.cqlFilterVisible || false;\n\n    if (!this.caption) {\n      return null;\n    }\n\n    if (layer.get(\"layerType\") === \"group\") {\n      return (\n        <LayerGroupItem\n          appConfig={app.config.appConfig}\n          mapConfig={app.config.mapConfig}\n          layer={layer}\n          model={model}\n          options={this.props.options}\n          chapters={chapters}\n          cqlFilterVisible={cqlFilterVisible}\n          onOpenChapter={(chapter) => {\n            const informativeWindow = app.windows.find(\n              (window) => window.type === \"informative\"\n            );\n            informativeWindow.props.custom.open(chapter);\n          }}\n        />\n      );\n    }\n\n    return (\n      <LayerItemContainer\n        sx={{ marginLeft: this.isBackgroundLayer ? \"0px\" : \"45px\" }}\n      >\n        <LayerItemWrapper>\n          <Grid\n            wrap=\"nowrap\"\n            alignItems=\"center\"\n            alignContent=\"center\"\n            container\n            onClick={this.toggleVisible.bind(this)}\n          >\n            <Grid item>{this.getLayerToggler()}</Grid>\n            {this.legendIcon && this.renderLegendIcon()}\n            <Caption>{this.caption}</Caption>\n          </Grid>\n          <LayerButtonsContainer>\n            {layer.isFakeMapLayer ? null : (\n              <DownloadLink\n                layer={this.props.layer}\n                enableDownloadLink={\n                  this.props.app.config.mapConfig.map.enableDownloadLink\n                }\n              />\n            )}\n            {this.renderStatusButton()}\n            {this.renderInfoButton()}\n\n            {this.showAttributeTableButton && (\n              <Tooltip title=\"Visa lagrets attributtabell\">\n                <LayerButtonWrapper>\n                  <TableViewIcon onClick={this.#showAttributeTable} />\n                </LayerButtonWrapper>\n              </Tooltip>\n            )}\n            {this.renderMoreButton()}\n          </LayerButtonsContainer>\n        </LayerItemWrapper>\n        <div>\n          {this.renderDetails()}\n          {this.state.toggleSettings &&\n          this.state.infoVisible &&\n          !this.isInfoEmpty() ? (\n            <hr />\n          ) : null}\n          {layer.isFakeMapLayer ? null : (\n            <LayerSettings\n              options={this.props.options}\n              layer={layer}\n              toggled={this.state.toggleSettings}\n              showOpacity={true}\n              showLegend={true}\n              cqlFilterVisible={cqlFilterVisible}\n            />\n          )}\n        </div>\n      </LayerItemContainer>\n    );\n  }\n}\n\nexport default withSnackbar(LayerItem);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5z\"\n}), 'CallMade');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonChecked');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n}), 'RemoveCircle');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 7H9c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 2v2H9V9h10zm-6 6v-2h2v2h-2zm2 2v2h-2v-2h2zm-4-2H9v-2h2v2zm6-2h2v2h-2v-2zm-8 4h2v2H9v-2zm8 2v-2h2v2h-2zM6 17H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v1h-2V5H5v10h1v2z\"\n}), 'TableView');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n"],"names":["WHITE_BACKROUND_LAYER_ID","BLACK_BACKROUND_LAYER_ID","OSM_BACKGROUND_LAYER_ID","SPECIAL_BACKGROUND_COLORS","BackgroundSwitcher","React","constructor","props","super","state","selectedLayerId","isSpecialBackgroundLayer","id","includes","setSpecialBackground","document","getElementById","style","backgroundColor","onChange","e","newSelectedId","target","value","this","layerMap","setVisible","osmLayer","setState","localObserver","Observer","enableOSM","osmSource","OSM","reprojectionErrorThreshold","TileLayer","visible","source","zIndex","layerType","name","caption","layerInfo","componentDidMount","backgroundVisibleFromStart","layers","find","layer","map","addLayer","app","globalObserver","subscribe","get","findIndex","l","renderRadioButton","config","index","checked","mapLayer","set","isFakeMapLayer","properties","opacity","key","getProperties","Object","keys","model","options","renderBaseLayerComponents","backgroundSwitcherWhite","backgroundSwitcherBlack","radioButtons","defaults","push","Number","filter","validLayerId","isValidLayerId","console","warn","layerConfig","i","render","sx","display","LayerItemContainer","styled","theme","paddingLeft","borderBottom","spacing","palette","divider","LayerItemWrapper","justifyContent","marginTop","LayerTogglerButtonWrapper","alignItems","cursor","float","marginRight","InfoTextContainer","margin","Caption","Typography","fontSize","typography","pxToRem","LegendIcon","width","height","LayerButtonsContainer","LayerButtonWrapper","StyledList","padding","listStyle","LayerItem","zoomEndHandler","zoom","olMap","getView","getZoom","lprops","layerIsZoomVisible","minZoom","maxZoom","showSnack","minMaxZoomAlertOnToggleOnly","type","zoomVisible","showZoomSnack","toggleVisible","isBackgroundLayer","publish","triggerZoomCheck","renderInfoButton","isInfoEmpty","title","infoVisible","onClick","toggleInfo","boxShadow","borderRadius","renderMoreButton","toggleSettings","openInformative","chapter","onOpenChapter","getLayerToggler","icon","fill","warning","dark","async","url","getSource","replace","LAYERS","getParams","glue","getFeatureUrl","describeFeatureTypeUrl","r1","fetch","features","json","r2","columns","featureTypes","f","typeName","c","toLowerCase","field","headerName","localType","flex","rows","r","content","error","log","enqueueSnackbar","variant","legend","legendIcon","infoTitle","infoText","infoUrl","infoUrlText","infoOwner","showAttributeTableButton","usesMinMaxZoom","layerUsesMinMaxZoom","status","open","activeLayer","on","oldValue","listenToZoomChange","d","maxZ","minZ","Infinity","bListen","eventName","zoomEndListener","unsubscribe","zoomWarningSnack","layersInfo","undefined","length","preventDuplicate","onClose","closeSnackbar","renderStatusButton","disableInteractive","renderLegendImage","src","alt","chaptersWithLayer","findChapters","chapters","infoCaption","result","Array","isArray","reduce","some","layerId","renderChapterLinks","size","header","marginLeft","toggle","renderInfo","dangerouslySetInnerHTML","__html","renderMetadataLink","href","rel","renderOwner","renderDetails","renderLegendIcon","cqlFilterVisible","mapConfig","appConfig","windows","window","custom","wrap","alignContent","container","bind","item","enableDownloadLink","toggled","showOpacity","showLegend","withSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","overridesResolver","styles","ownerState","root","capitalize","position","disablePointerEvents","_extends","maxHeight","whiteSpace","color","vars","action","active","inputAdornmentClasses","pointerEvents","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","XYZ","TileImage","projection","tileGrid","createXYZ","extent","extentFromProjection","maxResolution","tileSize","attributions","cacheSize","crossOrigin","interpolate","opaque","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","attributionsCollapsible","zDirection","gutter_","gutter","getGutter"],"sourceRoot":""}