"use strict";(self.webpackChunkhajk_client=self.webpackChunkhajk_client||[]).push([[5931],{5931:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var r=i(66274),s=i(99359),n=i(75742),a=i(75004),l=(0,s.Z)("container"),o=(0,s.Z)("divider"),h=(0,s.Z)("range"),d=(0,s.Z)("addEvents"),p=(0,s.Z)("getPosition"),c=(0,s.Z)("prerenderLeft"),u=(0,s.Z)("prerenderRight"),Z=(0,s.Z)("postrender"),g=(0,s.Z)("unsetLayers");class v extends n.Z{constructor(){const e=document.createElement("div"),t=document.createElement("div");t.className="ol-side-by-side-divider";const i=document.createElement("input");i.type="range",i.min=0,i.max=1,i.step="any",i.value=.5,i.className="ol-side-by-side-range",super({element:e}),Object.defineProperty(this,Z,{value:m}),Object.defineProperty(this,p,{value:b}),Object.defineProperty(this,d,{value:y}),Object.defineProperty(this,l,{writable:!0,value:null}),Object.defineProperty(this,o,{writable:!0,value:null}),Object.defineProperty(this,h,{writable:!0,value:null}),Object.defineProperty(this,c,{writable:!0,value:e=>{const t=e.context,i=this.getMap().getSize(),s=(0,r.Z)(this,p)[p](),n=(0,a.getRenderPixel)(e,[0,0]),l=(0,a.getRenderPixel)(e,[s,0]),o=(0,a.getRenderPixel)(e,[s,i[1]]),h=(0,a.getRenderPixel)(e,[0,i[1]]);t.save(),t.beginPath(),t.moveTo(n[0],n[1]),t.lineTo(l[0],l[1]),t.lineTo(o[0],o[1]),t.lineTo(h[0],h[1]),t.closePath(),t.clip()}}),Object.defineProperty(this,u,{writable:!0,value:e=>{const t=e.context,i=this.getMap().getSize(),s=(0,r.Z)(this,p)[p](),n=(0,a.getRenderPixel)(e,[s,0]),l=(0,a.getRenderPixel)(e,[i[0],0]),o=(0,a.getRenderPixel)(e,i),h=(0,a.getRenderPixel)(e,[s,i[1]]);t.save(),t.beginPath(),t.moveTo(n[0],n[1]),t.lineTo(l[0],l[1]),t.lineTo(o[0],o[1]),t.lineTo(h[0],h[1]),t.closePath(),t.clip()}}),Object.defineProperty(this,g,{writable:!0,value:()=>{this.getMap().getLayers().getArray().filter((e=>!0===e.get("isLeftCompareLayer")||!0===e.get("isRightCompareLayer"))).forEach((e=>{e.set("visible",!1,!0),!0===e.get("isLeftCompareLayer")?(e.set("isLeftCompareLayer",!1),e.un("prerender",(0,r.Z)(this,c)[c])):(e.set("isRightCompareLayer",!1),e.un("prerender",(0,r.Z)(this,u)[u])),e.un("postrender",(0,r.Z)(this,Z)[Z])}))}}),(0,r.Z)(this,l)[l]=e,(0,r.Z)(this,o)[o]=t,(0,r.Z)(this,h)[h]=i}updateClip(){(0,r.Z)(this,o)[o].style.left=(0,r.Z)(this,p)[p]()+"px",this.getMap().render()}setCompareLayers(e,t){(0,r.Z)(this,g)[g](),e.set("visible",!0,!0),e.set("isLeftCompareLayer",!0),e.on("prerender",(0,r.Z)(this,c)[c]),e.on("postrender",(0,r.Z)(this,Z)[Z]),t.set("visible",!0,!0),t.set("isRightCompareLayer",!0),t.on("prerender",(0,r.Z)(this,u)[u]),t.on("postrender",(0,r.Z)(this,Z)[Z])}remove(){(0,r.Z)(this,g)[g]();try{(0,r.Z)(this,l)[l].removeChild((0,r.Z)(this,o)[o]),(0,r.Z)(this,l)[l].removeChild((0,r.Z)(this,h)[h])}catch(e){}}open(){(0,r.Z)(this,l)[l].appendChild((0,r.Z)(this,o)[o]),(0,r.Z)(this,l)[l].appendChild((0,r.Z)(this,h)[h]),(0,r.Z)(this,d)[d]()}}function y(){(0,r.Z)(this,h)[h].addEventListener("input",(()=>{this.updateClip()}))}function b(){const e=(0,r.Z)(this,h)[h].value,t=42*(.5-e);return this.getMap().getSize()[0]*Number(e)+t}function m(e){e.context.restore()}}}]);
//# sourceMappingURL=5931.2c055736.chunk.js.map