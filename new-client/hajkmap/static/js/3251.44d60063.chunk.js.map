{"version":3,"file":"static/js/3251.44d60063.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/panelMenu/PanelList.js","plugins/DocumentHandler/panelMenu/PanelMenuListItem.js"],"sourcesContent":["import React from \"react\";\nimport List from \"@mui/material/List\";\nimport PanelMenuListItem from \"./PanelMenuListItem\";\n\nclass PanelList extends React.PureComponent {\n  getMenuItemType = (item, type) => {\n    return (\n      <PanelMenuListItem\n        {...this.props}\n        type={type}\n        menu={item.menu}\n        icon={item.icon}\n        id={item.id}\n        level={item.level}\n        color={item.color}\n        title={item.title}\n        itemRef={item.itemRef}\n        subMenuItems={this.#getSubMenuItems(item)}\n        expanded={item.expandedSubMenu}\n        colored={item.colored}\n        selected={item.selected}\n      ></PanelMenuListItem>\n    );\n  };\n\n  #getSubMenuItems = (item) => {\n    return item.menuItemIds.reduce((subMenuItems, subItemId) => {\n      const subItem = Object.values(this.props.items).find((i) => {\n        return i.id === subItemId;\n      });\n      if (subItem.menuItemIds.length > 0) {\n        subMenuItems = [...subMenuItems, ...this.#getSubMenuItems(subItem)];\n      }\n      return [...subMenuItems, subItem];\n    }, []);\n  };\n\n  #renderMenuItem = (item) => {\n    if (item.menuItemIds && item.menuItemIds.length > 0) {\n      return this.getMenuItemType(item, \"submenu\");\n    } else if (item.document) {\n      return this.getMenuItemType(item, \"document\");\n    } else if (item.link) {\n      return this.getMenuItemType(item, \"link\");\n    } else if (item.maplink) {\n      return this.getMenuItemType(item, \"maplink\");\n    }\n  };\n\n  render() {\n    const { items, level } = this.props;\n    return (\n      <List\n        style={{ position: \"static\" }}\n        disablePadding\n        id={`panellist_${level}`}\n        role=\"navigation\"\n        component=\"nav\"\n      >\n        {Object.values(items)\n          .filter((item) => {\n            return item.level === level;\n          })\n          .map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                {this.#renderMenuItem(item, item.id)}\n              </React.Fragment>\n            );\n          })}\n      </List>\n    );\n  }\n}\n\nexport default PanelList;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { withTheme } from \"@emotion/react\";\nimport Icon from \"@mui/material/Icon\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport PanelList from \"./PanelList\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nconst StyledListItemIcon = styled(ListItemIcon)(({ theme }) => ({\n  minWidth: theme.spacing(3),\n}));\n\nconst StyledCollapseIcon = styled(ListItemIcon)(({ theme }) => ({\n  \".MuiListItemIcon-root\": {\n    minWidth: theme.spacing(4),\n  },\n}));\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  overflowWrap: \"break-word\",\n  \".MuiListItem-root\": {\n    borderLeft: `${theme.spacing(1)} solid ${theme.palette.background.paper}`,\n    \"&.Mui-selected\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&.Mui-selected:hover\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&:hover\": {\n      borderColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nclass PanelMenuListItem extends React.PureComponent {\n  #getListTitle = () => {\n    const { title } = this.props;\n    return <ListItemText>{title}</ListItemText>;\n  };\n\n  #getCollapseIcon = () => {\n    const { title, expanded } = this.props;\n\n    return expanded ? (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Minimera submeny</span>}\n        <ExpandLess />\n      </StyledCollapseIcon>\n    ) : (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Maximera submeny</span>}\n        <ExpandMore />\n      </StyledCollapseIcon>\n    );\n  };\n\n  #getListIcon = () => {\n    const { title, icon } = this.props;\n    return (\n      <StyledListItemIcon>\n        {!title && <span style={visuallyHidden}>{icon.descriptiveText}</span>}\n        <Icon style={{ fontSize: icon.fontSize }}>\n          {icon.materialUiIconName}\n        </Icon>\n      </StyledListItemIcon>\n    );\n  };\n\n  #hasSubMenu = () => {\n    const { subMenuItems } = this.props;\n    return subMenuItems && subMenuItems.length > 0;\n  };\n\n  #handleMenuButtonClick = (type, id) => {\n    const { localObserver } = this.props;\n    localObserver.publish(`${type}-clicked`, id);\n  };\n\n  #getMenuItemStyle = () => {\n    const { theme, level, color, colored } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return colored\n      ? {\n          paddingLeft: theme.spacing(1 + level * 3),\n          borderLeft: `${theme.spacing(1)} solid ${color}`,\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        }\n      : {\n          paddingLeft: theme.spacing(1 + level * 3),\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        };\n  };\n\n  render() {\n    const { type, selected, subMenuItems, expanded, icon, level, title, id } =\n      this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return (\n      <>\n        <StyledListItem\n          divider\n          selected={selected}\n          button\n          ref={this.props.itemRef}\n          size=\"small\"\n          disableGutters\n          aria-controls={hasSubMenu ? `submenu_${id}` : null}\n          aria-expanded={expanded}\n          onClick={() => {\n            this.#handleMenuButtonClick(type, id);\n          }}\n          sx={this.#getMenuItemStyle()}\n        >\n          {icon ? this.#getListIcon() : null}\n          {title && this.#getListTitle()}\n          {hasSubMenu && this.#getCollapseIcon()}\n        </StyledListItem>\n        {hasSubMenu && (\n          <Collapse id={`submenu_${id}`} in={expanded} timeout={200}>\n            <PanelList\n              {...this.props}\n              level={level + 1}\n              items={subMenuItems}\n            ></PanelList>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTheme(PanelMenuListItem);\n"],"names":["PanelList","React","getMenuItemType","item","type","this","props","menu","icon","id","level","color","title","itemRef","subMenuItems","expanded","expandedSubMenu","colored","selected","menuItemIds","reduce","subItemId","subItem","Object","values","items","find","i","length","document","link","maplink","render","style","position","disablePadding","role","component","filter","map","StyledListItemIcon","styled","ListItemIcon","theme","minWidth","spacing","StyledCollapseIcon","StyledListItem","ListItem","overflowWrap","borderLeft","palette","background","paper","borderLeftColor","action","borderColor","hover","PanelMenuListItem","visuallyHidden","descriptiveText","fontSize","materialUiIconName","localObserver","publish","hasSubMenu","paddingLeft","paddingRight","divider","button","ref","size","disableGutters","onClick","sx","in","timeout","withTheme"],"sourceRoot":""}