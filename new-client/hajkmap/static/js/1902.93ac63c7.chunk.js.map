{"version":3,"file":"static/js/1902.93ac63c7.chunk.js","mappings":"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","sources":["plugins/Print/AdvancedOptions.js","../node_modules/@mui/icons-material/Palette.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { styled } from \"@mui/material/styles\";\nimport { withSnackbar } from \"notistack\";\nimport {\n  Badge,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Popover,\n  Tooltip,\n  IconButton,\n  InputAdornment,\n} from \"@mui/material\";\nimport PaletteIcon from \"@mui/icons-material/Palette\";\nimport { TwitterPicker as ColorPicker } from \"react-color\";\n\nconst Root = styled(Grid)(() => ({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n}));\n\nconst FormControlContainer = styled(Grid)(({ theme }) => ({\n  margin: theme.spacing(1),\n  width: \"100%\",\n  display: \"flex\",\n}));\n\nclass AdvancedOptions extends React.PureComponent {\n  state = {\n    anchorEl: null,\n  };\n\n  // Default colors for color picker used to set text color (used in map title, scale, etc)\n  mapTextAvailableColors = [\n    \"#FFFFFF\",\n    \"#D0021B\",\n    \"#F5A623\",\n    \"#F8E71C\",\n    \"#8B572A\",\n    \"#7ED321\",\n    \"#417505\",\n    \"#9013FE\",\n    \"#4A90E2\",\n    \"#50E3C2\",\n    \"#B8E986\",\n    \"#000000\",\n    \"#4A4A4A\",\n    \"#9B9B9B\",\n  ];\n\n  placementOverlaps = {\n    northArrow: false,\n    scaleBar: false,\n    logoType: false,\n  };\n\n  toggleColorPicker = (e) => {\n    this.setState({ anchorEl: e.currentTarget });\n  };\n\n  hideColorPicker = (e) => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleMapTextColorChangeComplete = (color) => {\n    this.hideColorPicker();\n    this.props.setMapTextColor(color);\n  };\n\n  allowBottomRightPlacement = () => {\n    if (\n      (this.props.options.copyright ?? \"\").length > 0 ||\n      (this.props.options.disclaimer ?? \"\").length > 0\n    ) {\n      // no! This placement is now reserved for copyright and/or disclaimer.\n      return false;\n    }\n    return true;\n  };\n\n  // Method for checking if any placement values are overlapping\n  hasPlacementOverlap() {\n    // We want to check if the selections are set to \"Enabled\", otherwise they are set to\n    // \"disabled\" and cannot overlap.\n    const northArrow = this.props.includeNorthArrow\n      ? this.props.northArrowPlacement\n      : \"northDisabled\";\n    const scaleBar = this.props.includeScaleBar\n      ? this.props.scaleBarPlacement\n      : \"scaleDisabled\";\n    const logo = this.props.includeLogo\n      ? this.props.logoPlacement\n      : \"logoDisabled\";\n\n    // We check if any given value is the same as the other two placement values.\n    // If so, they are stored as booleans in \"placementOverlaps\"\n    this.placementOverlaps.northArrow =\n      northArrow === scaleBar || northArrow === logo;\n    this.placementOverlaps.scaleBar =\n      scaleBar === northArrow || scaleBar === logo;\n    this.placementOverlaps.logoType = logo === northArrow || logo === scaleBar;\n\n    // If any placement values are the same we return true and use it to display\n    // error-message in render()\n    return (\n      this.placementOverlaps.northArrow ||\n      this.placementOverlaps.scaleBar ||\n      this.placementOverlaps.logoType\n    );\n  }\n\n  renderPlacementSelect = (value, name, changeHandler, disabled) => {\n    return (\n      <Select\n        variant=\"standard\"\n        value={value}\n        onChange={changeHandler}\n        disabled={disabled}\n        inputProps={{\n          name: name,\n          id: name,\n        }}\n      >\n        <MenuItem value={\"topLeft\"}>Linksboven</MenuItem>\n        <MenuItem value={\"topRight\"}>Rechtsboven</MenuItem>\n        {this.allowBottomRightPlacement() && (\n          <MenuItem value={\"bottomRight\"}>Rechtsonder</MenuItem>\n        )}\n        <MenuItem value={\"bottomLeft\"}>Linksonder</MenuItem>\n      </Select>\n    );\n  };\n\n  renderIncludeSelect = (value, name, changeHandler) => {\n    return (\n      <Select\n        variant=\"standard\"\n        value={value}\n        onChange={changeHandler}\n        inputProps={{\n          name: name,\n          id: name,\n        }}\n      >\n        <MenuItem value={true}>Ja</MenuItem>\n        <MenuItem value={false}>Nee</MenuItem>\n      </Select>\n    );\n  };\n\n  render() {\n    let showOverlapWarning = this.hasPlacementOverlap();\n    const {\n      resolution,\n      handleChange,\n      mapTextColor,\n      mapTitle,\n      printComment,\n      includeNorthArrow,\n      northArrowPlacement,\n      includeScaleBar,\n      scaleBarPlacement,\n      includeLogo,\n      logoPlacement,\n      printOptionsOk,\n    } = this.props;\n    return (\n      <>\n        <Root>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField\n                value={mapTitle}\n                fullWidth={true}\n                onChange={handleChange}\n                label=\"Optionele titel\"\n                placeholder=\"Kan leeggelaten worden\"\n                variant=\"standard\"\n                InputProps={{\n                  id: \"mapTitle\",\n                  name: \"mapTitle\",\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Badge\n                        sx={{\n                          \"& .MuiBadge-dot\": {\n                            backgroundColor: this.props.mapTextColor,\n                          },\n                        }}\n                        badgeContent=\" \"\n                        variant=\"dot\"\n                      >\n                        <Tooltip\n                          disableInteractive\n                          title=\"De titelkleur heeft geen invloed op de labels\n                          van de kaart, maar bepaalt alleen de kleur van\n                          omringende teksten, zoals titel, copyrighttekst, enz.\"\n                        >\n                          <IconButton\n                            id=\"mapTextColor\"\n                            onClick={this.toggleColorPicker}\n                            sx={{ marginRight: 0.5 }}\n                            edge=\"start\"\n                            size=\"small\"\n                          >\n                            <PaletteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </Badge>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true}>\n              <TextField\n                value={printComment}\n                fullWidth={true}\n                onChange={handleChange}\n                label=\"Optionele toelichting\"\n                placeholder=\"Kan leggelaten worden\"\n                variant=\"standard\"\n                InputProps={{\n                  id: \"printComment\",\n                  name: \"printComment\",\n                }}\n              />\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer item xs={12}>\n            <FormControl fullWidth={true} error={!printOptionsOk}>\n              <InputLabel variant=\"standard\" htmlFor=\"resolution\">\n                Resolutie (DPI)\n              </InputLabel>\n              <Select\n                variant=\"standard\"\n                value={resolution}\n                onChange={handleChange}\n                inputProps={{\n                  name: \"resolution\",\n                  id: \"resolution\",\n                }}\n              >\n                {this.props.options.dpis.map((value, index) => {\n                  return (\n                    <MenuItem key={\"dpis_\" + index} value={value}>\n                      {value}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              {!printOptionsOk && (\n                <FormHelperText>\n                  De afbeelding wordt niet correct afgedrukt. Test met een\n                  lagere resolutie of kleinere schaal.\n                </FormHelperText>\n              )}\n            </FormControl>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeNorthArrow\">\n                  Noordpijl toevoegen\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeNorthArrow,\n                  \"includeNorthArrow\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl\n                fullWidth={true}\n                error={this.placementOverlaps.northArrow}\n              >\n                <InputLabel variant=\"standard\" htmlFor=\"northArrowPlacement\">\n                  Placering\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  northArrowPlacement,\n                  \"northArrowPlacement\",\n                  handleChange,\n                  !includeNorthArrow\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeScaleBar\">\n                  Schaalstol toevoegen\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeScaleBar,\n                  \"includeScaleBar\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl\n                fullWidth={true}\n                error={this.placementOverlaps.scaleBar}\n              >\n                <InputLabel variant=\"standard\" htmlFor=\"scaleBarPlacement\">\n                  Plaats schaalstok\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  scaleBarPlacement,\n                  \"scaleBarPlacement\",\n                  handleChange,\n                  !includeScaleBar\n                )}\n              </FormControl>\n            </Grid>\n          </FormControlContainer>\n          <FormControlContainer container item>\n            <Grid item xs={6} sx={{ paddingRight: \"10px\" }}>\n              <FormControl fullWidth={true}>\n                <InputLabel variant=\"standard\" htmlFor=\"includeLogo\">\n                  Logo toevoegen\n                </InputLabel>\n                {this.renderIncludeSelect(\n                  includeLogo,\n                  \"includeLogo\",\n                  handleChange\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <FormControl\n                fullWidth={true}\n                error={this.placementOverlaps.logoType}\n              >\n                <InputLabel variant=\"standard\" htmlFor=\"logoPlacement\">\n                  Plaats logo\n                </InputLabel>\n                {this.renderPlacementSelect(\n                  logoPlacement,\n                  \"logoPlacement\",\n                  handleChange,\n                  !includeLogo\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              {showOverlapWarning && (\n                <FormHelperText error={true}>\n                  De afbeelding wordt niet correct afgedrukt. De locaties van de\n                  verschillende objecten overlappen.\n                </FormHelperText>\n              )}\n            </Grid>\n          </FormControlContainer>\n          <Popover\n            id=\"color-picker-menu\"\n            anchorEl={this.state.anchorEl}\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.hideColorPicker}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <ColorPicker\n              inputProps={{\n                id: \"mapTextColor\",\n                name: \"mapTextColor\",\n              }}\n              color={mapTextColor}\n              colors={this.mapTextAvailableColors}\n              onChangeComplete={this.handleMapTextColorChangeComplete}\n            />\n          </Popover>\n        </Root>\n      </>\n    );\n  }\n}\n\nexport default withSnackbar(AdvancedOptions);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10c1.38 0 2.5-1.12 2.5-2.5 0-.61-.23-1.2-.64-1.67-.08-.1-.13-.21-.13-.33 0-.28.22-.5.5-.5H16c3.31 0 6-2.69 6-6 0-4.96-4.49-9-10-9zm5.5 11c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm-3-4c-.83 0-1.5-.67-1.5-1.5S13.67 6 14.5 6s1.5.67 1.5 1.5S15.33 9 14.5 9zM5 11.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5S7.33 13 6.5 13 5 12.33 5 11.5zm6-4c0 .83-.67 1.5-1.5 1.5S8 8.33 8 7.5 8.67 6 9.5 6s1.5.67 1.5 1.5z\"\n}), 'Palette');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["Root","styled","Grid","display","flexWrap","FormControlContainer","theme","margin","spacing","width","AdvancedOptions","React","state","anchorEl","mapTextAvailableColors","placementOverlaps","northArrow","scaleBar","logoType","toggleColorPicker","e","this","setState","currentTarget","hideColorPicker","handleMapTextColorChangeComplete","color","props","setMapTextColor","allowBottomRightPlacement","options","copyright","length","disclaimer","renderPlacementSelect","value","name","changeHandler","disabled","variant","onChange","inputProps","id","renderIncludeSelect","hasPlacementOverlap","includeNorthArrow","northArrowPlacement","includeScaleBar","scaleBarPlacement","logo","includeLogo","logoPlacement","render","showOverlapWarning","resolution","handleChange","mapTextColor","mapTitle","printComment","printOptionsOk","item","xs","fullWidth","label","placeholder","InputProps","endAdornment","position","sx","backgroundColor","badgeContent","disableInteractive","title","onClick","marginRight","edge","size","error","htmlFor","dpis","map","index","container","paddingRight","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","colors","onChangeComplete","withSnackbar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","_extends","height","maxHeight","alignItems","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginLeft","pointerEvents","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}