{"version":3,"file":"static/js/7646.d4c2e198.chunk.js","mappings":"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","sources":["plugins/Routing/RoutingModel.js","../node_modules/load-google-maps-api/index.js","../node_modules/ol/geom/flat/flip.js","../node_modules/ol/format/Polyline.js"],"sourcesContent":["import { Style, Icon, Fill, Stroke, Circle } from \"ol/style\";\nimport { Vector } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { Point } from \"ol/geom\";\nimport { Feature } from \"ol\";\nimport { transform } from \"ol/proj\";\nimport { Polyline } from \"ol/format\";\n\nconst loadGoogleMapsApi = require(\"load-google-maps-api\");\n\nclass RouteModel {\n  constructor(settings) {\n    this.olMap = settings.map;\n    this.localObserver = settings.localObserver;\n    this.apiKey = settings.options.apiKey;\n    this.travelMode = \"WALKING\";\n    this.travelModeLabels = {\n      WALKING: \"Gå\",\n      DRIVING: \"Kör\",\n      TRANSIT: \"Kollektivtrafik\",\n      BICYCLING: \"Cykla\",\n    };\n\n    this.position = {\n      latitude: undefined,\n      longitude: undefined,\n      latitudeEnd: undefined,\n      longitudeEnd: undefined,\n    };\n    this.projection = settings.app.config.mapConfig.map.projection;\n\n    loadGoogleMapsApi({\n      key: this.apiKey,\n    }).then((googleMapApi) => {\n      this.googleMapsApi = googleMapApi;\n    });\n\n    this.initiateRoutingLayerInOpenLayersMap();\n  }\n\n  setTravelMode = (travelModeKey) => {\n    this.travelMode = this.googleMapsApi.DirectionsTravelMode.hasOwnProperty(\n      travelModeKey\n    )\n      ? this.googleMapsApi.DirectionsTravelMode[travelModeKey]\n      : \"WALKING\";\n    this.travelModeLabel = this.travelModeLabels[this.travelMode];\n    this.localObserver.publish(\"doneWithStep\", 3);\n  };\n\n  getCurrentPositionSuccess = (pos) => {\n    this.position = {\n      latitude: pos.coords.latitude,\n      longitude: pos.coords.longitude,\n    };\n    this.setPosition();\n  };\n\n  getCurrentPositionError = (err) => {\n    console.error(err);\n  };\n\n  setPosition = () => {\n    this.layer_start.getSource().clear();\n    if (this.position.longitude && this.position.latitude) {\n      var point = new Point([this.position.longitude, this.position.latitude]);\n      var transformed = transform(\n        point.getCoordinates(),\n        \"EPSG:4326\",\n        this.olMap.getView().getProjection()\n      );\n      point.setCoordinates(transformed);\n      var ft = new Feature({ geometry: point });\n      ft.setStyle(this.style_start);\n      this.layer_start.getSource().addFeature(ft);\n      this.olMap.getView().setCenter(point.getCoordinates());\n\n      this.localObserver.publish(\"doneWithStep\", 1);\n      this.localObserver.publish(\"startModeSelected\", \"gps\");\n    }\n  };\n\n  getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        this.getCurrentPositionSuccess,\n        this.getCurrentPositionError\n      );\n    } else {\n      window.alert(\n        \"Kan inte få position. Skriv startposition i rutan eller tryck position på kartan.\"\n      );\n    }\n  };\n\n  generatePinIcon(color = \"#000000\", size = \"24\") {\n    const svg = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"  width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\">\n    <path fill=\"${color}\" d=\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\" />\n    </svg>`;\n\n    return \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(svg);\n  }\n\n  initiateRoutingLayerInOpenLayersMap() {\n    this.style_start = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#00a83b\", \"36\"),\n      }),\n    });\n\n    this.style_end = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#ff4747\"),\n      }),\n    });\n\n    this.style_route = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#6e6e6e\"),\n      }),\n    });\n\n    this.style_route_normal = this.style_route;\n\n    this.style_route_highlight = new Style({\n      image: new Icon({\n        src: this.generatePinIcon(\"#47ff87\"),\n      }),\n    });\n\n    this.layer_drawing_style = new Style({\n      fill: new Fill({\n        color: \"rgba(255, 255, 255, 0.5)\",\n      }),\n      stroke: new Stroke({\n        color: \"rgba(0, 0, 255, 0.5)\",\n        width: 4,\n      }),\n      image: new Circle({\n        radius: 6,\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(255, 255, 255, 0.5)\",\n          width: 2,\n        }),\n      }),\n    });\n\n    var source_start = new Vector({});\n    var source_end = new Vector({});\n    var source_route = new Vector({});\n    var source_drawing = new Vector({});\n\n    if (this.layer_start === undefined) {\n      this.layer_start = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_start,\n        name: \"pluginRoutingStart\",\n        content: \"point\",\n        queryable: false,\n        style: this.style_start,\n      });\n\n      this.layer_end = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_end,\n        name: \"pluginRoutingEnd\",\n        content: \"point\",\n        queryable: false,\n        style: this.style_end,\n      });\n\n      this.layer_route = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_route,\n        name: \"pluginRoutingRoute\",\n        content: \"point\",\n        queryable: true,\n        style: this.style_route,\n      });\n\n      this.layer_drawing = new VectorLayer({\n        layerType: \"system\",\n        zIndex: 5000,\n        source: source_drawing,\n        name: \"pluginRoutingDrawing\",\n        content: \"line\",\n        queryable: false,\n        style: this.layer_drawing_style,\n      });\n\n      this.olMap.addLayer(this.layer_start);\n      this.olMap.addLayer(this.layer_end);\n      this.olMap.addLayer(this.layer_route);\n      this.olMap.addLayer(this.layer_drawing);\n    }\n  }\n\n  activateStartMode = () => {\n    this.olMap.once(\"singleclick\", this.startPointSelection);\n  };\n\n  startPointSelection = (e) => {\n    var startPoint =\n      new Feature(); /* startPoint and point(below) must be the same l.134 */\n    startPoint.setGeometry(new Point(e.coordinate));\n    /* Convert Geometry to Coordinate */\n\n    var lonlat = transform(\n      startPoint.getGeometry().getCoordinates(),\n      this.projection,\n      \"EPSG:4326\"\n    );\n    var lon = lonlat[0];\n    var lat = lonlat[1];\n\n    this.layer_start.getSource().clear();\n    this.layer_start.getSource().addFeature(startPoint);\n    startPoint.setStyle(this.style_start);\n\n    var pos = this.position;\n    pos.latitude = lat;\n    pos.longitude = lon;\n    this.position = pos;\n\n    this.localObserver.publish(\"doneWithStep\", 1);\n    this.localObserver.publish(\"startModeSelected\", \"manual\");\n  };\n\n  activateEndMode = () => {\n    this.onEndKey = this.olMap.once(\"singleclick\", this.endPointSelection);\n  };\n\n  endPointSelection = (e) => {\n    var endPoint = new Feature();\n    endPoint.setGeometry(new Point(e.coordinate));\n\n    var lonlat = transform(\n      endPoint.getGeometry().getCoordinates(),\n      this.projection,\n      \"EPSG:4326\"\n    );\n    var lon = lonlat[0];\n    var lat = lonlat[1];\n\n    this.layer_end.getSource().clear();\n    this.layer_end.getSource().addFeature(endPoint);\n    endPoint.setStyle(this.style_end);\n\n    var pos = this.position;\n    pos.latitudeEnd = lat;\n    pos.longitudeEnd = lon;\n    this.position = pos;\n\n    this.localObserver.publish(\"doneWithStep\", 2);\n  };\n\n  activateRoutingMode() {\n    this.searchTrip();\n  }\n\n  searchTrip() {\n    var pos = this.position;\n    if (\n      pos.latitude === undefined ||\n      pos.longitude === undefined ||\n      pos.latitudeEnd === undefined ||\n      pos.longitudeEnd === undefined\n    ) {\n      this.localObserver.publish(\"startStopPointsMissing\");\n    } else {\n      const googleDirectionsService =\n        new this.googleMapsApi.DirectionsService();\n\n      const rp = {\n        origin: { lat: pos.latitude, lng: pos.longitude },\n        destination: { lat: pos.latitudeEnd, lng: pos.longitudeEnd },\n        travelMode: this.travelMode,\n      };\n      googleDirectionsService.route(rp, (res) => {\n        switch (res.status) {\n          case \"REQUEST_DENIED\":\n            this.localObserver.publish(\"requestDenied\");\n            break;\n          case \"ZERO_RESULTS\":\n            this.localObserver.publish(\"zeroResults\");\n            break;\n          case \"OK\":\n            this.plotRoute(res, this.map, this.layer_route, this.layer_drawing);\n            break;\n          default:\n            this.localObserver.publish(\"otherError\", res.status);\n            break;\n        }\n      });\n    }\n  }\n\n  plotRoute(res, map, layer_route, layer_drawing) {\n    layer_route.getSource().clear();\n    var steps = res.routes[0].legs[0].steps;\n    const routeDiv = document.createElement(\"div\");\n    const p = document.createElement(\"p\");\n    const ul = document.createElement(\"ol\");\n    p.innerHTML = `\n                    <table class=\"table table-condensed\">\n                      <tbody>\n                        <tr><td><b>Färdsätt</b></td><td>${this.travelModeLabel}</td></tr>\n                        <tr><td><b>Avstånd</b></td><td>${res.routes[0].legs[0].distance.text} (${res.routes[0].legs[0].distance.value} m)</td></tr>\n                        <tr><td><b>Tid</b></td><td>${res.routes[0].legs[0].duration.text}</td></tr>\n                        <tr><td><b>Startadress</b></td><td>${res.routes[0].legs[0].start_address}</td></tr>\n                        <tr><td><b>Slutadress</b></td><td>${res.routes[0].legs[0].end_address}</td></tr>\n                      </tbody>\n                    </table>\n                    `;\n    routeDiv.appendChild(p);\n    for (var i = 0; i < steps.length; i++) {\n      var lat = steps[i].start_location.lat();\n      var lng = steps[i].start_location.lng();\n\n      var point = new Point([lng, lat]);\n\n      var transformed = transform(\n        point.getCoordinates(),\n        \"EPSG:4326\",\n        this.projection\n      );\n      point.setCoordinates(transformed);\n\n      var n = i + 1;\n      var tmpFeature = new Feature({\n        geometry: point,\n        info: steps[i].instructions,\n      });\n      tmpFeature.number = \"\" + n;\n      tmpFeature.setStyle(this.style_route);\n\n      layer_route.getSource().addFeature(tmpFeature);\n      // route features\n      var tmpLi = document.createElement(\"li\");\n      tmpLi.onclick = this.highlightFeature.bind(this);\n      tmpLi.id = \"step_number\" + n;\n      tmpLi.innerHTML = steps[i].instructions;\n      ul.appendChild(tmpLi);\n    }\n    routeDiv.appendChild(ul);\n\n    var resList = document.getElementById(\"resultList\");\n    while (resList.firstChild) {\n      resList.removeChild(resList.firstChild);\n    }\n\n    // put result into the table\n    document.getElementById(\"resultList\").appendChild(routeDiv);\n\n    const routePath = new Polyline({}).readGeometry(\n      res.routes[0].overview_polyline,\n      {\n        dataProjection: \"EPSG:4326\",\n        featureProjection: this.projection,\n      }\n    );\n\n    layer_drawing.getSource().clear();\n    var ft = new Feature({\n      type: \"routing\",\n      geometry: routePath,\n    });\n    ft.setStyle(this.layer_drawing_style);\n\n    layer_drawing.getSource().addFeature(ft);\n    var centerLat = (this.position.latitude + this.position.latitudeEnd) / 2;\n    var centerLon = (this.position.longitude + this.position.longitudeEnd) / 2;\n    this.olMap\n      .getView()\n      .setCenter(\n        transform([centerLon, centerLat], \"EPSG:4326\", this.projection)\n      );\n    this.olMap\n      .getView()\n      .fit(layer_drawing.getSource().getExtent(), this.olMap.getSize());\n  }\n\n  highlightFeature(event) {\n    var feature_number = -1;\n    if (event.target.nodeName === \"B\") {\n      feature_number = event.target.parentNode.id.substring(\n        \"step_number\".length\n      );\n    } else {\n      feature_number = event.target.id.substring(\"step_number\".length);\n    }\n\n    var layer = this.layer_route;\n\n    var features = layer.getSource().getFeatures();\n\n    for (var i = 0; i < features.length; i++) {\n      if (features[i].number === feature_number) {\n        features[i].setStyle(this.style_route_highlight);\n      } else {\n        features[i].setStyle(this.style_route_normal);\n      }\n    }\n  }\n\n  drawRoute(steps) {\n    var routePath = new Polyline({}).readGeometry(steps);\n\n    var ft = new Feature({ type: \"routing\", geometry: routePath });\n    ft.setStyle(this.style_route);\n    this.get(\"layer_drawing\").getSource().addFeature(ft);\n  }\n\n  clearMap() {\n    this.layer_start.getSource().clear();\n    this.layer_end.getSource().clear();\n    this.layer_route.getSource().clear();\n    this.layer_drawing.getSource().clear();\n\n    // Remove the step instructions\n    document.getElementById(\"resultList\").innerHTML = \"\";\n\n    this.position = {\n      latitude: undefined,\n      longitude: undefined,\n      latitudeEnd: undefined,\n      longitudeEnd: undefined,\n    };\n  }\n}\n\nexport default RouteModel;\n","const API_URL = 'https://maps.googleapis.com/maps/api/js'\nconst CALLBACK_NAME = '__googleMapsApiOnLoadCallback'\n\nconst optionsKeys = ['channel', 'client', 'key', 'language', 'region', 'v']\n\nlet promise = null\n\nmodule.exports = function (options = {}) {\n  promise =\n    promise ||\n    new Promise(function (resolve, reject) {\n      // Reject the promise after a timeout\n      const timeoutId = setTimeout(function () {\n        window[CALLBACK_NAME] = function () {} // Set the on load callback to a no-op\n        reject(new Error('Could not load the Google Maps API'))\n      }, options.timeout || 10000)\n\n      // Hook up the on load callback\n      window[CALLBACK_NAME] = function () {\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId)\n        }\n        resolve(window.google.maps)\n        delete window[CALLBACK_NAME]\n      }\n\n      // Prepare the `script` tag to be inserted into the page\n      const scriptElement = document.createElement('script')\n      const params = [`callback=${CALLBACK_NAME}`]\n      optionsKeys.forEach(function (key) {\n        if (options[key]) {\n          params.push(`${key}=${options[key]}`)\n        }\n      })\n      if (options.libraries && options.libraries.length) {\n        params.push(`libraries=${options.libraries.join(',')}`)\n      }\n      scriptElement.src = `${options.apiUrl || API_URL}?${params.join('&')}`\n\n      // Insert the `script` tag\n      document.body.appendChild(scriptElement)\n    })\n  return promise\n}\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n"],"names":["loadGoogleMapsApi","require","constructor","settings","setTravelMode","travelModeKey","this","travelMode","googleMapsApi","DirectionsTravelMode","hasOwnProperty","travelModeLabel","travelModeLabels","localObserver","publish","getCurrentPositionSuccess","pos","position","latitude","coords","longitude","setPosition","getCurrentPositionError","err","console","error","layer_start","getSource","clear","point","Point","transformed","transform","getCoordinates","olMap","getView","getProjection","setCoordinates","ft","Feature","geometry","setStyle","style_start","addFeature","setCenter","getLocation","navigator","geolocation","getCurrentPosition","window","alert","activateStartMode","once","startPointSelection","e","startPoint","setGeometry","coordinate","lonlat","getGeometry","projection","lon","lat","activateEndMode","onEndKey","endPointSelection","endPoint","layer_end","style_end","latitudeEnd","longitudeEnd","map","apiKey","options","WALKING","DRIVING","TRANSIT","BICYCLING","undefined","app","config","mapConfig","key","then","googleMapApi","initiateRoutingLayerInOpenLayersMap","generatePinIcon","color","size","svg","encodeURIComponent","Style","image","Icon","src","style_route","style_route_normal","style_route_highlight","layer_drawing_style","fill","Fill","stroke","Stroke","width","Circle","radius","source_start","Vector","source_end","source_route","source_drawing","VectorLayer","layerType","zIndex","source","name","content","queryable","style","layer_route","layer_drawing","addLayer","activateRoutingMode","searchTrip","googleDirectionsService","DirectionsService","rp","origin","lng","destination","route","res","status","plotRoute","steps","routes","legs","routeDiv","document","createElement","p","ul","innerHTML","distance","text","value","duration","start_address","end_address","appendChild","i","length","start_location","n","tmpFeature","info","instructions","number","tmpLi","onclick","highlightFeature","bind","id","resList","getElementById","firstChild","removeChild","routePath","Polyline","readGeometry","overview_polyline","dataProjection","featureProjection","type","centerLat","centerLon","fit","getExtent","getSize","event","feature_number","target","nodeName","parentNode","substring","features","getFeatures","drawRoute","get","clearMap","API_URL","CALLBACK_NAME","optionsKeys","promise","module","exports","Promise","resolve","reject","timeoutId","setTimeout","Error","timeout","clearTimeout","google","maps","scriptElement","params","forEach","push","libraries","join","apiUrl","body","flipXY","flatCoordinates","offset","end","stride","dest","destOffset","j","x","k","TextFeature","super","factor_","factor","geometryLayout_","geometryLayout","readFeatureFromText","readGeometryFromText","readFeaturesFromText","getStrideForLayout","encoded","d","lastNumbers","Array","numbers","current","shift","ii","b","charCodeAt","decodeUnsignedIntegers","num","decodeSignedIntegers","decodeFloats","decodeDeltas","coordinates","inflateCoordinates","lineString","LineString","transformGeometryWithOptions","adaptOptions","writeFeatureText","feature","writeGeometryText","assert","writeFeaturesText","getFlatCoordinates","getStride","delta","Math","round","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","encodeDeltas","String","fromCharCode"],"sourceRoot":""}