{"version":3,"file":"static/js/2189.5f756533.chunk.js","mappings":"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","sources":["plugins/DocumentHandler/printMenu/PrintList.js","plugins/DocumentHandler/printMenu/PrintListItem.js"],"sourcesContent":["import React from \"react\";\nimport List from \"@mui/material/List\";\nimport PrintListItem from \"./PrintListItem\";\n\nclass PrintList extends React.Component {\n  getMenuItemType = (item, type) => {\n    return (\n      <PrintListItem\n        {...this.props}\n        type={type}\n        menu={item.menu}\n        icon={item.icon}\n        id={item.id}\n        level={item.level}\n        color={item.color}\n        title={item.title}\n        itemRef={item.itemRef}\n        subMenuItems={this.getSubMenuItems(item)}\n        expanded={item.expandedSubMenu}\n        colored={item.colored}\n        selected={item.selected}\n        chosenForPrint={item.chosenForPrint}\n        handleTogglePrint={this.props.handleTogglePrint}\n      ></PrintListItem>\n    );\n  };\n\n  getSubMenuItems = (item) => {\n    return item.menuItemIds.reduce((subMenuItems, subItemId) => {\n      const subItem = Object.values(this.props.documentMenu).find((i) => {\n        return i.id === subItemId;\n      });\n      if (subItem.menuItemIds.length > 0) {\n        subMenuItems = [...subMenuItems, ...this.getSubMenuItems(subItem)];\n      }\n      return [...subMenuItems, subItem];\n    }, []);\n  };\n\n  renderMenuItem = (item, id) => {\n    if (item.menuItemIds && item.menuItemIds.length > 0) {\n      return this.getMenuItemType(item, \"submenu\");\n    } else if (item.document) {\n      return this.getMenuItemType(item, \"document\");\n    } else if (item.link) {\n      return this.getMenuItemType(item, \"link\");\n    } else if (item.maplink) {\n      return this.getMenuItemType(item, \"maplink\");\n    }\n  };\n\n  render() {\n    const { documentMenu, level } = this.props;\n    return (\n      <List sx={{ width: \"100%\" }} disablePadding>\n        {Object.values(documentMenu)\n          .filter((item) => {\n            return item.level === level;\n          })\n          .map((item) => {\n            return (\n              <React.Fragment key={item.id}>\n                {this.renderMenuItem(item, item.id)}\n              </React.Fragment>\n            );\n          })}\n      </List>\n    );\n  }\n}\n\nexport default PrintList;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { visuallyHidden } from \"@mui/utils\";\n\nimport { withTheme } from \"@emotion/react\";\nimport {\n  Checkbox,\n  Collapse,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport PrintList from \"./PrintList\";\n\nconst StyledListItemIcon = styled(ListItemIcon)(({ theme }) => ({\n  minWidth: theme.spacing(3),\n}));\n\nconst StyledCollapseIcon = styled(ListItemIcon)(({ theme }) => ({\n  \".MuiListItemIcon-root\": {\n    minWidth: theme.spacing(4),\n  },\n}));\nconst StyledListItem = styled(ListItem)(({ theme }) => ({\n  overflowWrap: \"break-word\",\n  \".MuiListItem-root\": {\n    borderLeft: `${theme.spacing(1)} solid ${theme.palette.background.paper}`,\n    \"&.Mui-selected\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&.Mui-selected:hover\": {\n      borderLeftColor: theme.palette.action.selected,\n    },\n    \"&:hover\": {\n      borderColor: theme.palette.action.hover,\n    },\n  },\n}));\n\nclass PrintListItem extends React.PureComponent {\n  #getListTitle = () => {\n    const { title } = this.props;\n    return <ListItemText>{title}</ListItemText>;\n  };\n\n  #getCollapseIcon = () => {\n    const { title, expanded } = this.props;\n\n    return expanded ? (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Minimera submeny</span>}\n        <ExpandLess />\n      </StyledCollapseIcon>\n    ) : (\n      <StyledCollapseIcon>\n        {!title && <span style={visuallyHidden}>Maximera submeny</span>}\n        <ExpandMore />\n      </StyledCollapseIcon>\n    );\n  };\n\n  #hasSubMenu = () => {\n    const { subMenuItems } = this.props;\n    return subMenuItems && subMenuItems.length > 0;\n  };\n\n  #handleMenuButtonClick = (type, id) => {\n    const { localObserver } = this.props;\n    localObserver.publish(`print-${type}-clicked`, id);\n  };\n\n  #getMenuItemStyle = () => {\n    const { theme, level, color, colored } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return colored\n      ? {\n          paddingLeft: theme.spacing(1 + level * 3),\n          borderLeft: `${theme.spacing(0.5)} solid ${color}`,\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        }\n      : {\n          paddingLeft: theme.spacing(1 + level * 3),\n          paddingRight: hasSubMenu ? 0 : theme.spacing(1),\n        };\n  };\n\n  render() {\n    const {\n      type,\n      selected,\n      subMenuItems,\n      expanded,\n      level,\n      title,\n      id,\n      chosenForPrint,\n    } = this.props;\n    const hasSubMenu = this.#hasSubMenu();\n    return (\n      <>\n        <StyledListItem\n          divider\n          selected={selected}\n          button\n          ref={this.props.itemRef}\n          size=\"small\"\n          disableGutters\n          aria-controls={hasSubMenu ? `submenu_${id}` : null}\n          aria-expanded={expanded}\n          onClick={() => {\n            this.#handleMenuButtonClick(type, id);\n          }}\n          sx={this.#getMenuItemStyle()}\n        >\n          <StyledListItemIcon>\n            <Checkbox\n              color=\"primary\"\n              checked={chosenForPrint}\n              onChange={(e) => {\n                this.props.handleTogglePrint(this.props.id);\n              }}\n              onClick={(e) => e.stopPropagation()}\n              edge=\"start\"\n              tabIndex={-1}\n              disableRipple\n            />\n          </StyledListItemIcon>\n          {title && this.#getListTitle()}\n          {hasSubMenu && this.#getCollapseIcon()}\n        </StyledListItem>\n        {hasSubMenu && (\n          <Collapse id={`submenu_${id}`} in={expanded} timeout={200}>\n            <PrintList\n              {...this.props}\n              level={level + 1}\n              documentMenu={subMenuItems}\n              handleTogglePrint={this.props.handleTogglePrint}\n            ></PrintList>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTheme(PrintListItem);\n"],"names":["PrintList","React","getMenuItemType","item","type","this","props","menu","icon","id","level","color","title","itemRef","subMenuItems","getSubMenuItems","expanded","expandedSubMenu","colored","selected","chosenForPrint","handleTogglePrint","menuItemIds","reduce","subItemId","subItem","Object","values","documentMenu","find","i","length","renderMenuItem","document","link","maplink","render","sx","width","disablePadding","filter","map","StyledListItemIcon","styled","ListItemIcon","theme","minWidth","spacing","StyledCollapseIcon","StyledListItem","ListItem","overflowWrap","borderLeft","palette","background","paper","borderLeftColor","action","borderColor","hover","PrintListItem","style","visuallyHidden","localObserver","publish","hasSubMenu","paddingLeft","paddingRight","divider","button","ref","size","disableGutters","onClick","checked","onChange","e","stopPropagation","edge","tabIndex","disableRipple","in","timeout","withTheme"],"sourceRoot":""}