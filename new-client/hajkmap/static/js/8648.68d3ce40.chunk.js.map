{"version":3,"file":"static/js/8648.68d3ce40.chunk.js","mappings":"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","sources":["plugins/Location/CustomControlButtonView.js","plugins/Location/constants/index.js","../node_modules/@mui/icons-material/LocationDisabled.js","../node_modules/@mui/icons-material/LocationSearching.js","../node_modules/@mui/icons-material/MyLocation.js"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { useSnackbar } from \"notistack\";\n\nimport { Paper, Tooltip } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport LocationSearchingIcon from \"@mui/icons-material/LocationSearching\";\nimport LocationDisabledIcon from \"@mui/icons-material/LocationDisabled\";\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\n\nimport {\n  LOCATION_DENIED_SNACK_MESSAGE,\n  LOCATION_DENIED_SNACK_OPTIONS,\n} from \"./constants\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n}));\n\nconst StyledToggleButton = styled(ToggleButton)(() => ({\n  minWidth: \"unset\",\n  // ToggleButton have a different color when not selected,\n  // but we want to unset it so it looks just like other Buttons.\n  color: \"unset\",\n  paddingLeft: 7,\n  paddingRight: 7,\n  paddingTop: 6,\n  paddingBottom: 6,\n}));\n\nconst CustomControlButtonView = React.memo(\n  ({ onClick, defaultTooltip, model }) => {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const [selected, setSelected] = React.useState(false);\n    const [tooltip, setTooltip] = React.useState(defaultTooltip);\n    const [currentIcon, setCurrentIcon] = React.useState(\n      <LocationSearchingIcon />\n    );\n\n    // Handler for the \"geoLocationChange\" event. Makes sure to format the raw input data\n    // and update state with nice looking messages.\n    const handleGeoLocationChange = useCallback((rawData) => {\n      // We must do some formatting (to limit the decimal precision on\n      // some values). Let's prepare an object.\n      const formattedData = {};\n\n      // Loop through the entries of rawData and limit precision to one\n      // decimal point on all numbers.\n      for (let k in rawData) {\n        formattedData[k] = Number.isFinite(rawData[k])\n          ? rawData[k].toFixed(1)\n          : rawData[k];\n      }\n\n      // Prepare an output array that contains end-user text\n      const output = [\n        ...(formattedData.accuracy\n          ? [`Nogranhet: ${formattedData.accuracy} m\\n`]\n          : []),\n        ...(formattedData.altitude && formattedData.altitudeAccuracy\n          ? [\n              `Höjd: ${formattedData.altitude} (+/- ${formattedData.altitudeAccuracy}) m\\n`,\n            ]\n          : []),\n        ...(formattedData.speed\n          ? [`Hastighet: ${formattedData.speed} km/h\\n`]\n          : []),\n        ...(formattedData.heading\n          ? [`Riktning: ${formattedData.heading} rad\\n`]\n          : []),\n      ];\n\n      // Create the actual string that will be rendered inside the Tooltip component.\n      // The 'display: block' part is important to create line breaks inside Tooltip.\n      const str = (\n        <React.Fragment>\n          {output.map((v, i) => {\n            return (\n              <div key={i} style={{ display: \"block\" }}>\n                {v}\n              </div>\n            );\n          })}\n        </React.Fragment>\n      );\n\n      setTooltip(str);\n    }, []);\n\n    // Handler for the \"locationStatus\" event. Makes sure to update the state according\n    // to the current location status.\n    const handleStatusChange = useCallback(\n      (status) => {\n        switch (status) {\n          case \"loading\":\n            setCurrentIcon(<CircularProgress size={24} />);\n            break;\n          case \"on\":\n            setCurrentIcon(<MyLocationIcon />);\n            break;\n          case \"error\":\n            setCurrentIcon(<LocationDisabledIcon />);\n            setTooltip(\"Positionera: position ej tillgänglig\");\n            break;\n          case \"off\":\n          default:\n            setCurrentIcon(<LocationSearchingIcon />);\n            setTooltip(defaultTooltip);\n            break;\n        }\n      },\n      [defaultTooltip]\n    );\n\n    // Handler for the \"locationError\" event. Makes sure to prompt the user with information\n    // regarding the error along with information on how to fix the error.\n    const handleLocationError = useCallback(\n      (error) => {\n        // If error code is 1 (User denied Geolocation), show Snackbar with instructions to enable it again\n        if (error.code === 1) {\n          enqueueSnackbar(\n            LOCATION_DENIED_SNACK_MESSAGE,\n            LOCATION_DENIED_SNACK_OPTIONS\n          );\n        } else {\n          enqueueSnackbar(\n            `Kunde inte fastställa din plats. Felkod: ${error.code}. Detaljer: \"${error.message}\".`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      },\n      [enqueueSnackbar]\n    );\n\n    // This effect makes sure to subscribe to all events that could be sent on the local-observer.\n    useEffect(() => {\n      // We are submitting events on the local-observer when the geoLocation-api emits changes.\n      // We have to catch the local-observer events and update the view accordingly.\n      const changeListener = model.localObserver.subscribe(\n        \"geolocationChange\",\n        handleGeoLocationChange\n      );\n\n      // We are submitting events on the local-observer when the geoLocation is toggled off/on etc.\n      // We have to catch the local-observer events and update the view accordingly.\n      const statusListener = model.localObserver.subscribe(\n        \"locationStatus\",\n        handleStatusChange\n      );\n\n      // We are submitting events on the local-observer if the geoLocation-api encounters some\n      // kind of error (for example if the user has denied use of location in the browser). These\n      // are caught here.\n      const errorListener = model.localObserver.subscribe(\n        \"geolocationError\",\n        handleLocationError\n      );\n\n      // We have to make sure to clean up all listeners on eventual effect trigger.\n      return () => {\n        changeListener.unsubscribe();\n        statusListener.unsubscribe();\n        errorListener.unsubscribe();\n      };\n    }, [\n      model,\n      handleGeoLocationChange,\n      handleStatusChange,\n      handleLocationError,\n    ]);\n\n    return (\n      <Tooltip disableInteractive title={tooltip}>\n        <StyledPaper>\n          <StyledToggleButton\n            aria-label={defaultTooltip}\n            onClick={onClick}\n            value=\"check\"\n            selected={selected}\n            onChange={() => {\n              selected ? model.disable() : model.enable();\n              setSelected(!selected);\n            }}\n          >\n            {currentIcon}\n          </StyledToggleButton>\n        </StyledPaper>\n      </Tooltip>\n    );\n  }\n);\n\nexport default CustomControlButtonView;\n","export const LOCATION_DENIED_SNACK_MESSAGE =\n  \"Du behöver tillåta att applikationen visar din position. För datorer: De flesta webbläsare har en lås-ikon i adressfältet som du kan klicka på för att tillåta Plats/Position.\";\nexport const LOCATION_DENIED_SNACK_OPTIONS = Object.freeze({\n  variant: \"info\",\n  persist: false,\n  anchorOrigin: {\n    vertical: \"top\",\n    horizontal: \"center\",\n  },\n});\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.94 11c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06c-1.13.12-2.19.46-3.16.97l1.5 1.5C10.16 5.19 11.06 5 12 5c3.87 0 7 3.13 7 7 0 .94-.19 1.84-.52 2.65l1.5 1.5c.5-.96.84-2.02.97-3.15H23v-2h-2.06zM3 4.27l2.04 2.04C3.97 7.62 3.25 9.23 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c1.77-.2 3.38-.91 4.69-1.98L19.73 21 21 19.73 4.27 3 3 4.27zm13.27 13.27C15.09 18.45 13.61 19 12 19c-3.87 0-7-3.13-7-7 0-1.61.55-3.09 1.46-4.27l9.81 9.81z\"\n}), 'LocationDisabled');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20.94 11c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'LocationSearching');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3c-.46-4.17-3.77-7.48-7.94-7.94V1h-2v2.06C6.83 3.52 3.52 6.83 3.06 11H1v2h2.06c.46 4.17 3.77 7.48 7.94 7.94V23h2v-2.06c4.17-.46 7.48-3.77 7.94-7.94H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"\n}), 'MyLocation');\nexports.default = _default;"],"names":["StyledPaper","styled","Paper","theme","marginBottom","spacing","StyledToggleButton","ToggleButton","minWidth","color","paddingLeft","paddingRight","paddingTop","paddingBottom","CustomControlButtonView","React","onClick","defaultTooltip","model","enqueueSnackbar","useSnackbar","selected","setSelected","tooltip","setTooltip","currentIcon","setCurrentIcon","handleGeoLocationChange","useCallback","rawData","formattedData","k","Number","isFinite","toFixed","output","accuracy","altitude","altitudeAccuracy","speed","heading","str","map","v","i","style","display","handleStatusChange","status","size","handleLocationError","error","code","LOCATION_DENIED_SNACK_MESSAGE","LOCATION_DENIED_SNACK_OPTIONS","message","variant","useEffect","changeListener","localObserver","subscribe","statusListener","errorListener","unsubscribe","disableInteractive","title","value","onChange","disable","enable","Object","freeze","persist","anchorOrigin","vertical","horizontal","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}