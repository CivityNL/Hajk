{"version":3,"file":"static/js/4398.d759bef4.chunk.js","mappings":"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","sources":["components/ConfirmationDialog.js","hooks/useCookieStatus.js","hooks/useUpdateEffect.js","plugins/Sketch/components/ActivityMenu.js","plugins/Sketch/components/DrawTypeSelector.js","plugins/Sketch/components/FeatureTextSetter.js","plugins/Sketch/components/FeatureTitleEditor.js","plugins/Sketch/components/Information.js","plugins/Sketch/components/SelectFeaturesDialog.js","plugins/Sketch/components/UploadDialog.js","plugins/Sketch/views/AddView.js","plugins/Sketch/views/DeleteView.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","../node_modules/@mui/icons-material/esm/ArrowDropDown.js","../node_modules/@mui/icons-material/esm/FlipToFront.js","../node_modules/@mui/icons-material/esm/ArrowDropUp.js","../node_modules/@mui/icons-material/esm/FlipToBack.js","plugins/Sketch/views/EditView.js","plugins/Sketch/views/MoveView.js","plugins/Sketch/views/SaveView.js","plugins/Sketch/views/SettingsView.js","plugins/Sketch/views/SketchView.js","plugins/Sketch/views/UploadView.js","../node_modules/@mui/icons-material/FolderOpen.js","../node_modules/@mui/icons-material/SaveAlt.js","../node_modules/@mui/icons-material/SettingsBackupRestore.js","../node_modules/@mui/icons-material/TextDecrease.js","../node_modules/@mui/icons-material/TextIncrease.js","../node_modules/@mui/icons-material/Visibility.js"],"sourcesContent":["import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n} from \"@mui/material\";\n\n// Simple dialog that can be used to prompt the user before committing action.\nconst ConfirmationDialog = ({\n  open,\n  handleConfirm,\n  handleAbort,\n  titleName,\n  contentDescription,\n  cancel,\n  confirm,\n}) => {\n  return createPortal(\n    <Dialog\n      open={open}\n      onClose={handleAbort}\n      onMouseDown={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <DialogTitle>{titleName}</DialogTitle>\n      <DialogContent>\n        <Typography>{contentDescription}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleConfirm}>{confirm}</Button>\n        <Button onClick={handleAbort} variant=\"contained\">\n          {cancel}\n        </Button>\n      </DialogActions>\n    </Dialog>,\n    document.getElementById(\"map\")\n  );\n};\n\nexport default ConfirmationDialog;\n","import React from \"react\";\nimport { functionalOk, thirdPartyOk } from \"../models/Cookie\";\n\n// A simple hook which will return an object stating wether functional- and third-party-cookies\n// are OK to use or not (depending on the users choice in the cookie-notice).\nexport default function useCookieStatus(globalObserver) {\n  // Let's combine both statuses in one state-object since they will always be updated at the same time.\n  const [cookieStatus, setCookieStatus] = React.useState({\n    functionalCookiesOk: functionalOk(),\n    thirdPartyCookiesOk: thirdPartyOk(),\n  });\n\n  // An effect subscribing to an event sent from the cookie-handler when the\n  // cookie-settings change. If the settings change, we make sure to update the\n  // state with the current cookie-status so that we can render the appropriate components.\n  React.useEffect(() => {\n    const cookieListener = globalObserver.subscribe(\n      \"core.cookieLevelChanged\",\n      () => {\n        setCookieStatus({\n          functionalCookiesOk: functionalOk(),\n          thirdPartyCookiesOk: thirdPartyOk(),\n        });\n      }\n    );\n    return () => {\n      cookieListener.unsubscribe();\n    };\n  }, [globalObserver]);\n\n  return cookieStatus;\n}\n","import React from \"react\";\n// A simple usEffect-hook that does not run on the first render\nexport default function useUpdateEffect(func, deps = []) {\n  const didMount = React.useRef(false);\n  React.useEffect(() => {\n    if (didMount.current) {\n      return func();\n    } else {\n      didMount.current = true;\n    }\n    // The linter does not like when we have fun with custom effects :(\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","import React from \"react\";\nimport { Grid, Paper, Tooltip } from \"@mui/material\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\n\nimport { ACTIVITIES } from \"../constants\";\n\nconst ActivityMenu = (props) => {\n  return (\n    <Grid\n      container\n      justifyContent={\n        props.pluginPosition === \"right\" ? \"flex-end\" : \"flex-start\"\n      }\n    >\n      <Paper elevation={4}>\n        {ACTIVITIES.map((activity, index) => {\n          return (\n            <div key={index} style={{ padding: 8 }}>\n              <Tooltip disableInteractive title={activity.tooltip}>\n                <ToggleButton\n                  sx={{ color: \"text.primary\" }}\n                  value={activity.id}\n                  selected={props.activityId === activity.id}\n                  onChange={() => {\n                    props.setActivityId(activity.id);\n                  }}\n                >\n                  {activity.icon}\n                </ToggleButton>\n              </Tooltip>\n            </div>\n          );\n        })}\n      </Paper>\n    </Grid>\n  );\n};\nexport default ActivityMenu;\n","import React from \"react\";\nimport { TextField, MenuItem, Tooltip } from \"@mui/material\";\nimport { DRAW_TYPES } from \"../constants\";\n\nconst DrawTypeSelector = (props) => {\n  return (\n    <TextField\n      fullWidth\n      id=\"select-draw-type\"\n      variant=\"outlined\"\n      size=\"small\"\n      select\n      value={props.activeDrawType}\n      onChange={(e) => props.setActiveDrawType(e.target.value)}\n    >\n      {DRAW_TYPES.map((option) => (\n        <MenuItem key={option.type} value={option.type}>\n          {\n            <Tooltip disableInteractive title={option.tooltip}>\n              <span style={{ width: \"100%\" }}>{option.label}</span>\n            </Tooltip>\n          }\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n};\n\nexport default DrawTypeSelector;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Dialog from \"../../../components/Dialog/Dialog\";\n\n// This component has a couple of responsibilities:\n// - 1) Subscribe to text-feature-creation\n// - 2) Prompt the user with a modal containing a text-input-field\n// - 3) Applied the text from the modal to the supplied feature.\nconst FeatureTextSetter = ({ drawModel, localObserver }) => {\n  // We're gonna need to keep track of if we've been supplied with a feature\n  // that we are supposed to apply text to.\n  const [feature, setFeature] = React.useState(null);\n\n  // We are going to need a handler for when the event on the observer fires.\n  const handleFeatureCreated = React.useCallback((addedFeature) => {\n    // We're only interested in features with the type \"Text\"\n    if (addedFeature.get(\"DRAW_METHOD\") === \"Text\") {\n      setFeature(addedFeature);\n    }\n  }, []);\n\n  // We are also going to need a handler for when the user closes the dialog\n  const handleCloseClick = React.useCallback(\n    (textFieldValue) => {\n      // If the user did not write any text, we remove the feature from\n      // the draw-source. (Since we don't want text-features without text).\n      if (textFieldValue.length === 0) {\n        drawModel.removeFeature(feature);\n      } else {\n        feature.set(\"USER_TEXT\", textFieldValue);\n        drawModel.refreshFeaturesTextStyle();\n      }\n      setFeature(null);\n    },\n    [drawModel, feature]\n  );\n\n  // If the user aborts, we make sure to remove the feature from the source\n  const handleAbortClick = React.useCallback(() => {\n    drawModel.removeFeature(feature);\n    setFeature(null);\n  }, [drawModel, feature]);\n\n  // Let's add an effect where we can subscribe to the addFeature-event\n  React.useEffect(() => {\n    localObserver.subscribe(\"drawModel.featureAdded\", handleFeatureCreated);\n    return () => {\n      localObserver.unsubscribe(\"drawModel.featureAdded\");\n    };\n  }, [drawModel, localObserver, handleFeatureCreated]);\n\n  return feature !== null\n    ? createPortal(\n        <Dialog\n          options={{\n            text: \"\",\n            prompt: true,\n            headerText: \"Ange text\",\n            buttonText: \"Ok\",\n            abortText: \"Annuleren\",\n          }}\n          open={feature !== null}\n          onClose={handleCloseClick}\n          onAbort={handleAbortClick}\n        />,\n        document.getElementById(\"map\")\n      )\n    : null;\n};\n\nexport default FeatureTextSetter;\n","import React from \"react\";\nimport { Grid, TextField, Tooltip, Typography } from \"@mui/material\";\n\nconst FeatureTitleEditor = ({ feature, model, drawModel }) => {\n  const [title, setTitle] = React.useState(\"\");\n\n  React.useEffect(() => {\n    setTitle(model.getFeatureTitle(feature));\n  }, [feature, model]);\n\n  React.useEffect(() => {\n    drawModel.setFeatureAttribute(feature, \"FEATURE_TITLE\", title);\n  }, [drawModel, feature, title]);\n\n  // We don't want to provide an opportunity to set a title on a text-feature.\n  // (Since these already consist of only text, and the title might confuse the users).\n  return feature.get(\"DRAW_METHOD\") !== \"Text\" ? (\n    <Grid item xs={12} style={{ marginTop: 16 }}>\n      <Grid item xs={12} style={{ marginBottom: 4 }}>\n        <Typography align=\"center\">Titel</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Tooltip title=\"Angle en titel som kan användas för att identifiera objektet.\">\n          <TextField\n            fullWidth\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Tooltip>\n      </Grid>\n    </Grid>\n  ) : null;\n};\n\nexport default FeatureTitleEditor;\n","import React from \"react\";\nimport { Paper, Typography } from \"@mui/material\";\n\n// A simple component showing the supplied text in a wrapper\nconst Information = ({ text }) => {\n  return (\n    <Paper style={{ width: \"100%\", padding: 8 }}>\n      <Typography align=\"center\" variant=\"body2\">\n        {text}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default Information;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nexport default function SelectFeaturesDialog({\n  localObserver,\n  drawModel,\n  model,\n}) {\n  // Let's keep everything in one state here since all properties are\n  // changing at the same time (almost).\n  const [state, setState] = React.useState({\n    clickedFeatures: [],\n    selectedFeatureIndexes: [],\n    highlightedFeature: null,\n  });\n\n  // Resets the state back to init.\n  const resetState = React.useCallback(() => {\n    setState({\n      clickedFeatures: [],\n      selectedFeatureIndexes: [],\n      highlightedFeature: null,\n    });\n  }, []);\n\n  // Handles map-click-event from drawModel and updates the clickedFeatures\n  // with the payload.\n  const handleDrawSelectClick = React.useCallback((clickedFeatures) => {\n    setState((state) => ({ ...state, clickedFeatures }));\n  }, []);\n\n  // Handles selection of features in the dialog-list. If the feature-index is already\n  // selected, we remove it, otherwise we add it to the selection.\n  const handleFeatureSelectChange = (featureIndex) => {\n    // Create the new selected feature-indexes...\n    const newSelectedFeatureIndexes =\n      state.selectedFeatureIndexes.indexOf(featureIndex) !== -1\n        ? state.selectedFeatureIndexes.filter((i) => i !== featureIndex)\n        : [...state.selectedFeatureIndexes, featureIndex];\n    // ...and update the state\n    setState((state) => ({\n      ...state,\n      selectedFeatureIndexes: newSelectedFeatureIndexes,\n    }));\n  };\n\n  // Handles dialog abort, resets the state so that the dialog can close.\n  const handleAbort = () => {\n    // We have to remove the eventual highlighted feature when aborting...\n    state.highlightedFeature &&\n      drawModel.removeFeature(state.highlightedFeature);\n    // ...and reset the state.\n    resetState();\n  };\n\n  // Handles confirmation from the dialog. Let's the drawModel add the feature,\n  // and then the state is reset so that the dialog is closed.\n  const handleConfirm = () => {\n    state.selectedFeatureIndexes.map((index) => {\n      return drawModel.drawSelectedFeature(state.clickedFeatures[index]);\n    });\n    resetState();\n  };\n\n  // Handler for mouse-enter on list of clicked features. Creates a new\n  // feature (which is used to show where the clicked feature is in the map).\n  const handleMouseEnter = (index) => {\n    // Let's get the clicked feature we're currently hoovering.\n    const hoveredFeature = state.clickedFeatures[index];\n    // Then we can create a corresponding highlight-feature.\n    const highlightFeature = model.createHighlightFeature(hoveredFeature);\n    // We'll add the highlight-feature to the draw-layer...\n    drawModel.addFeature(highlightFeature, { silent: true });\n    // ...and update the state so that we can keep track of what we are highlighting.\n    setState({\n      ...state,\n      highlightedFeature: highlightFeature,\n    });\n  };\n\n  // Handler for mouse-leave on the list of clicked features. Removes the currently\n  // highlighted feature from the draw-layer.\n  const handleMouseLeave = () => {\n    state.highlightedFeature &&\n      drawModel.removeFeature(state.highlightedFeature);\n  };\n\n  // An effect that handles subscriptions (and un-subscriptions) to the observer-\n  // event fired from the drawModel when the user has clicked a feature with the\n  // \"select feature from map\"-tool active. The event will only be fired if there\n  // is more than one feature present at the location on which the user clicked.\n  // (If there's zero or one, the drawModel will take care of it).\n  React.useEffect(() => {\n    localObserver.subscribe(\"drawModel.select.click\", handleDrawSelectClick);\n    return () => {\n      localObserver.unsubscribe(\"drawModel.select.click\");\n    };\n  }, [localObserver, handleDrawSelectClick]);\n\n  return createPortal(\n    <Dialog\n      open={state.clickedFeatures.length > 1}\n      onClose={handleAbort}\n      // Must stop event-bubbling. Otherwise the parent element in react can be dragged etc.\n      onMouseDown={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <DialogTitle>Välj de objekt du vill kopiera</DialogTitle>\n      <DialogContent>\n        <List sx={{ width: \"100%\", maxHeight: \"30vh\" }}>\n          {state.clickedFeatures.map((feature, index) => (\n            <ListItem\n              disableGutters\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={() => handleMouseLeave(index)}\n            >\n              <ListItemButton\n                onClick={() => handleFeatureSelectChange(index)}\n                dense\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={state.selectedFeatureIndexes.indexOf(index) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                <ListItemText primary={feature.getId()} />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={state.selectedFeatureIndexes.length === 0}\n          onClick={handleConfirm}\n        >\n          OK\n        </Button>\n        <Button onClick={handleAbort}>Annuleren</Button>\n      </DialogActions>\n    </Dialog>,\n    document.getElementById(\"map\")\n  );\n}\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Dialog from \"../../../components/Dialog/Dialog\";\n\nconst UploadDialog = ({ open, setOpen, handleUploadedFile }) => {\n  const [filesChosen, setFilesChosen] = React.useState(false);\n\n  const handleUploadClick = React.useCallback(async () => {\n    try {\n      const fileInput = document.getElementById(\"kml-file-input\");\n      for await (const file of fileInput.files) {\n        // The file-reader should not be re-used. Let's initialize a new for each file.\n        const reader = new FileReader();\n        reader.onload = () => {\n          try {\n            handleUploadedFile(reader.result);\n          } catch (error) {\n            console.error(`Failed to import kml-file. Error: ${error}`);\n          }\n        };\n        reader.readAsText(file);\n      }\n    } catch (error) {\n      console.error(`Failed to import kml-files. Error: ${error}`);\n    }\n    // When we're done we have to close the dialog and make sure we disable the upload-button\n    // by setting the filesChosen-state to false.\n    setOpen(false);\n    setFilesChosen(false);\n  }, [setOpen, handleUploadedFile]);\n\n  const handleCloseClick = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleFileInputChange = React.useCallback((e) => {\n    const fileInput = document.getElementById(\"kml-file-input\");\n    setFilesChosen(fileInput.files.length > 0);\n  }, []);\n\n  return createPortal(\n    <Dialog\n      options={{\n        headerText: \"Ladda upp .kml-filer\",\n        buttonText: filesChosen ? \"Ladda upp\" : null,\n        abortText: \"Annuleren\",\n        text: (\n          <input\n            type=\"file\"\n            name=\"files[]\"\n            accept=\".kml\"\n            multiple\n            id=\"kml-file-input\"\n            onChange={handleFileInputChange}\n          />\n        ),\n        useLegacyNonMarkdownRenderer: true,\n      }}\n      open={open}\n      onClose={handleUploadClick}\n      onAbort={handleCloseClick}\n    />,\n    document.getElementById(\"map\")\n  );\n};\n\nexport default UploadDialog;\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport DrawTypeSelector from \"../components/DrawTypeSelector\";\nimport Information from \"../components/Information\";\nimport FeatureStyleSelector from \"../components/featureStyle/FeatureStyleSelector\";\nimport FeatureTextSetter from \"../components/FeatureTextSetter\";\nimport SelectFeaturesDialog from \"../components/SelectFeaturesDialog\";\n\nconst AddView = (props) => {\n  // Let's destruct some properties from the props\n  const { model, activeDrawType, setActiveDrawType, localObserver, drawModel } =\n    props;\n  // We have to get some information about the current activity (view)\n  const activity = model.getActivityFromId(props.id);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Information text={activity.information} />\n      </Grid>\n      <Grid item xs={12} style={{ marginTop: 16 }}>\n        <Grid item xs={12} style={{ marginBottom: 4 }}>\n          <Typography align=\"center\">Typ</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <DrawTypeSelector\n            activeDrawType={activeDrawType}\n            setActiveDrawType={setActiveDrawType}\n          />\n        </Grid>\n      </Grid>\n      <FeatureStyleSelector\n        activeDrawType={activeDrawType}\n        drawStyle={props.drawStyle}\n        drawModel={props.drawModel}\n        setDrawStyle={props.setDrawStyle}\n        textStyle={props.textStyle}\n        setTextStyle={props.setTextStyle}\n      />\n      <FeatureTextSetter\n        localObserver={props.localObserver}\n        drawModel={props.drawModel}\n      />\n      <SelectFeaturesDialog\n        localObserver={localObserver}\n        drawModel={drawModel}\n        model={model}\n      />\n    </Grid>\n  );\n};\n\nexport default AddView;\n","import React from \"react\";\nimport { styled } from \"@mui/material\";\nimport { Button, IconButton, Zoom } from \"@mui/material\";\nimport { Grid, Typography, Tooltip, Paper } from \"@mui/material\";\nimport SettingsBackupRestoreIcon from \"@mui/icons-material/SettingsBackupRestore\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport Information from \"../components/Information\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: \"100%\",\n  padding: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n  borderRight: `${theme.spacing(0.5)} solid ${theme.palette.info.main}`,\n  borderLeft: `${theme.spacing(0.5)} solid ${theme.palette.info.main}`,\n}));\n\n// A component that is rendered if the user has selected not to accept functional\n// cookies. (Functional cookies has to be accepted, otherwise we cannot save the\n// recently removed features in LS.\nconst RecentlyRemovedNotSupported = ({ globalObserver }) => {\n  // Handles clicks on the \"change-cookie-settings-button\". Simply emits an event\n  // on the global-observer, stating that the cookie-banner should be shown again.\n  const handleChangeCookieSettingsClick = () => {\n    globalObserver.publish(\"core.showCookieBanner\");\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Information\n          text=\"Det ser ut som att du har valt att inte tillåta funktionella kakor. På grund av\n        detta så kan du inte se dina senast borttagna objekt. Klicka nedan för att ändra inställningarna.\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={handleChangeCookieSettingsClick}\n        >\n          Cookie-inställningar\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst RemovedFeatureItem = ({ onRestoreClick, title }) => {\n  return (\n    <Zoom in appear>\n      <StyledPaper>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography variant=\"button\">{title}</Typography>\n          <Tooltip\n            disableInteractive\n            title=\"Klicka för att återställa ritobjektet.\"\n          >\n            <IconButton size=\"small\" onClick={onRestoreClick}>\n              <SettingsBackupRestoreIcon />\n            </IconButton>\n          </Tooltip>\n        </Grid>\n      </StyledPaper>\n    </Zoom>\n  );\n};\n\nconst RemovedFeaturesList = ({ removedFeatures, drawModel }) => {\n  return removedFeatures.map((feature) => {\n    return (\n      <RemovedFeatureItem\n        key={feature.get(\"HANDLED_ID\")}\n        title={feature.get(\"HANDLED_AT\")}\n        onRestoreClick={() => drawModel.addFeature(feature)}\n      />\n    );\n  });\n};\n\nconst DeleteView = ({\n  id,\n  model,\n  drawModel,\n  removedFeatures,\n  globalObserver,\n  functionalCookiesOk,\n}) => {\n  // We have to get some information about the current activity (view)\n  const activity = model.getActivityFromId(id);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Information text={activity.information} />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={drawModel.removeDrawnFeatures}\n          startIcon={<DeleteIcon />}\n        >\n          Verwijder alle objecten\n        </Button>\n      </Grid>\n      <Grid container item>\n        <Grid item xs={12}>\n          <Typography variant=\"caption\">Senast borttagna:</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          {functionalCookiesOk ? (\n            <RemovedFeaturesList\n              drawModel={drawModel}\n              removedFeatures={removedFeatures}\n            />\n          ) : (\n            <RecentlyRemovedNotSupported globalObserver={globalObserver} />\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DeleteView;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3c0 1.1.89 2 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9c-1.11 0-2 .9-2 2v10c0 1.1.89 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z\"\n}), 'FlipToFront');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8c-1.11 0-2 .9-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2c0-1.1-.9-2-2-2zm-6 0h-2v2h2V3zM9 17v-2H7c0 1.1.89 2 2 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM5 7H3v12c0 1.1.89 2 2 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z\"\n}), 'FlipToBack');","import React from \"react\";\nimport {\n  Button,\n  Grid,\n  Paper,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n  Switch,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport {\n  FlipToFront,\n  FlipToBack,\n  ArrowDropDown,\n  ArrowDropUp,\n  ContentCopy,\n} from \"@mui/icons-material/\";\n\nimport Information from \"../components/Information\";\nimport FeatureTitleEditor from \"../components/FeatureTitleEditor\";\nimport FeatureStyleEditor from \"../components/featureStyle/FeatureStyleEditor\";\n\nconst ModifyNodeToggler = ({ modifyEnabled, setModifyEnabled }) => {\n  return (\n    <Paper style={{ padding: 8, marginTop: 8 }}>\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"body2\">\n          Bewerken van knooppunten toestaan\n        </Typography>\n        <Tooltip\n          disableInteractive\n          title={\n            modifyEnabled\n              ? \"Deactiveer het bewerken van knooppunten om gemakkelijker \" +\n                \"objecten op de kaart te kunnen selecteren om kleuren enz. te \" +\n                \"bewerken.\"\n              : \"Activeer om de verdeling van objecten op de kaart te kunnen \" +\n                \"bewerken.\"\n          }\n        >\n          <Switch\n            checked={modifyEnabled}\n            onChange={() => setModifyEnabled(!modifyEnabled)}\n            size=\"small\"\n            color=\"primary\"\n          />\n        </Tooltip>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst EditView = (props) => {\n  // We have to get some information about the current activity (view)\n  const activity = props.model.getActivityFromId(props.id);\n\n  // Z-Index order related\n  const [zIndexAnchor, setZIndexAnchor] = React.useState(null);\n  const zIndexMenuOpen = Boolean(zIndexAnchor);\n  const handleZIndexMenu = (e) => {\n    setZIndexAnchor(e.currentTarget);\n  };\n  const handleZIndexMenuClose = () => {\n    setZIndexAnchor(null);\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"space-between\"\n      style={{ height: \"100%\" }}\n    >\n      <Grid container>\n        <Grid item xs={12}>\n          <Information text={activity.information} />\n        </Grid>\n        <Grid item xs={12}>\n          <ModifyNodeToggler\n            drawModel={props.drawModel}\n            modifyEnabled={props.modifyEnabled}\n            setModifyEnabled={props.setModifyEnabled}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {props.editFeature === null ? (\n            <Typography align=\"center\" style={{ marginTop: 24 }}>\n              Klik op een object op de kaart om het uiterlijk ervan te wijzigen\n              of om de tekenvolgorde te wijzigen.\n            </Typography>\n          ) : (\n            <Grid item xs={12}>\n              <FeatureTitleEditor\n                feature={props.editFeature}\n                model={props.model}\n                drawModel={props.drawModel}\n              />\n              <FeatureStyleEditor\n                feature={props.editFeature}\n                model={props.model}\n                drawModel={props.drawModel}\n              />\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n      {props.editFeature && (\n        <Grid container style={{ marginTop: 8 }} spacing={2}>\n          <Grid item xs={7}>\n            <Tooltip\n              disableInteractive\n              title=\"Klicka för att duplicera det markerade objektet.\"\n            >\n              <Button\n                variant=\"contained\"\n                fullWidth\n                startIcon={<ContentCopy />}\n                size=\"small\"\n                onClick={() => {\n                  props.drawModel.duplicateFeature(props.editFeature);\n                  props.drawModel.reBindFeaturePropertyListener();\n                }}\n              >\n                Duplicera\n              </Button>\n            </Tooltip>\n          </Grid>\n          <Grid item xs={5}>\n            <Button\n              id=\"zIndexMenuButton\"\n              variant=\"contained\"\n              fullWidth\n              onClick={handleZIndexMenu}\n              endIcon={<ArrowDropDown />}\n              size=\"small\"\n            >\n              Ordna\n            </Button>\n\n            <Menu\n              id=\"zindexmenu\"\n              anchorEl={zIndexAnchor}\n              open={zIndexMenuOpen}\n              onClose={handleZIndexMenuClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"zIndexMenuButton\",\n              }}\n            >\n              <MenuItem\n                onClick={() => {\n                  props.drawModel.moveFeatureZIndexToTop(props.editFeature);\n                }}\n              >\n                <ListItemIcon>\n                  <FlipToFront fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Placera längst fram</ListItemText>\n              </MenuItem>\n\n              <MenuItem\n                onClick={() => {\n                  props.drawModel.moveFeatureZIndexUp(props.editFeature);\n                }}\n              >\n                <ListItemIcon>\n                  <ArrowDropUp fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Flytta framåt</ListItemText>\n              </MenuItem>\n\n              <MenuItem\n                onClick={() => {\n                  props.drawModel.moveFeatureZIndexDown(props.editFeature);\n                }}\n              >\n                <ListItemIcon>\n                  <ArrowDropDown fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Flytta bakåt</ListItemText>\n              </MenuItem>\n\n              <MenuItem\n                onClick={() => {\n                  props.drawModel.moveFeatureZIndexToBottom(props.editFeature);\n                }}\n              >\n                <ListItemIcon>\n                  <FlipToBack fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Placera längst bak</ListItemText>\n              </MenuItem>\n            </Menu>\n          </Grid>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditView;\n","import React from \"react\";\nimport { Button, Grid, Paper, TextField } from \"@mui/material\";\nimport { Tooltip, Typography, Switch } from \"@mui/material\";\nimport Information from \"../components/Information\";\n\nconst TranslateToggler = ({ translateEnabled, setTranslateEnabled }) => {\n  return (\n    <Paper style={{ padding: 8, marginTop: 8 }}>\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"body2\">Laat verslepen toe</Typography>\n        <Tooltip\n          disableInteractive\n          title={\n            translateEnabled\n              ? \"Deactiveer om verslepen objecten op de kaart niet toe te \" +\n                \"staan.\"\n              : \"Activeer om beweging van de objecten op de kaart mogelijk te \" +\n                \"maken.\"\n          }\n        >\n          <Switch\n            checked={translateEnabled}\n            onChange={() => setTranslateEnabled(!translateEnabled)}\n            size=\"small\"\n            color=\"primary\"\n          />\n        </Tooltip>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst FeatureMoveSelector = (props) => {\n  // Handles change on the movement-length input. Makes sure that we're\n  // dealing with integers and updates the state.\n  const handleMovementLengthChange = (e) => {\n    const length = Math.floor(e.target.value);\n    props.setMovementLength(length);\n  };\n\n  // Handles change on the movement-angle input. Makes sure the angle is\n  // always between 0 and 360 and updates the state.\n  const handleMovementAngleChange = (e) => {\n    const angle = Math.floor(e.target.value);\n    const justifiedAngle =\n      angle >= 360 ? angle - 360 : angle < 0 ? 360 + angle : angle;\n    props.setMovementAngle(justifiedAngle);\n  };\n\n  // Handles user click on move-feature. Makes sure to trigger the move\n  // action and push the move-information onto the last-move-array so that\n  // the user can \"remove\" that action if it turned out wrong.\n  const handleMoveClick = () => {\n    // Let's get the values\n    const length = props.movementLength;\n    const angle = props.movementAngle;\n    // Then we trigger the action in the draw-model\n    props.drawModel.translateSelectedFeatures(\n      props.movementLength,\n      props.movementAngle\n    );\n    // Then we'll update the last-moves-state.\n    props.setLastMoves([...props.lastMoves, { length, angle }]);\n  };\n\n  // Handles user click on undo. Gets the last move from the move-state\n  // and triggers a move in the opposite direction. Also removes that move\n  // from the state.\n  const handleUndoClick = () => {\n    const moves = [...props.lastMoves];\n    const { length, angle } = moves.pop();\n    props.drawModel.translateSelectedFeatures(length, angle - 180);\n    props.setLastMoves(moves);\n  };\n\n  return (\n    <Paper style={{ padding: 8, marginTop: 8 }}>\n      <Grid container item justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"body2\" align=\"center\">\n            Vaste verplaatsing\n          </Typography>\n        </Grid>\n        <Grid item xs={12} style={{ marginTop: 16 }}>\n          <Tooltip\n            disableInteractive\n            title=\"Voer in hoeveel meter u de objecten wilt verplaatsen.\"\n          >\n            <TextField\n              label=\"Verplaatsingsafstand (meter)\"\n              variant=\"outlined\"\n              fullWidth\n              type=\"number\"\n              size=\"small\"\n              value={props.movementLength}\n              onChange={handleMovementLengthChange}\n            />\n          </Tooltip>\n        </Grid>\n        <Grid item xs={12} style={{ marginTop: 16 }}>\n          <Tooltip\n            disableInteractive\n            title=\"Geef de richting op waarin u de objecten wilt verplaatsen. 0\n              graden is pal naar het noorden, 90 graden is pal naar het oosten,\n              enz.\"\n          >\n            <TextField\n              label=\"Verplaatsingsafstand (graden)\"\n              variant=\"outlined\"\n              fullWidth\n              type=\"number\"\n              size=\"small\"\n              value={props.movementAngle}\n              onChange={handleMovementAngleChange}\n            />\n          </Tooltip>\n        </Grid>\n        <Grid container spacing={1} style={{ marginTop: 8 }}>\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              size=\"small\"\n              onClick={handleUndoClick}\n              disabled={props.lastMoves.length === 0}\n            >\n              Ongedaan maken\n            </Button>\n          </Grid>\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              size=\"small\"\n              onClick={handleMoveClick}\n            >\n              Verplaatsen\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst MoveView = (props) => {\n  // We're gonna need to keep track of the movement length and angle\n  const [movementLength, setMovementLength] = React.useState(100);\n  const [movementAngle, setMovementAngle] = React.useState(90);\n  // We also need to keep track of the last moves that has been done. These\n  // can be used so that the user can disregard moves if they happened to move\n  // something in the wrong direction.\n  const [lastMoves, setLastMoves] = React.useState([]);\n  // Let's destruct some props\n  const { drawModel, moveFeatures, translateEnabled, setTranslateEnabled } =\n    props;\n\n  // Let's use an effect that can reset the last moves when the current\n  // feature/features selected for movement changes.\n  React.useEffect(() => {\n    setLastMoves([]);\n  }, [moveFeatures]);\n\n  // We have to get some information about the current activity (view)\n  const activity = props.model.getActivityFromId(props.id);\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Information text={activity.information} />\n      </Grid>\n      <Grid item xs={12}>\n        <TranslateToggler\n          translateEnabled={translateEnabled}\n          setTranslateEnabled={setTranslateEnabled}\n        />\n        {moveFeatures.length > 0 && (\n          <FeatureMoveSelector\n            drawModel={drawModel}\n            lastMoves={lastMoves}\n            setLastMoves={setLastMoves}\n            movementLength={movementLength}\n            setMovementLength={setMovementLength}\n            movementAngle={movementAngle}\n            setMovementAngle={setMovementAngle}\n          />\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MoveView;\n","import React from \"react\";\nimport { styled, Typography } from \"@mui/material\";\nimport { Button, IconButton, Zoom } from \"@mui/material\";\nimport { Grid, Paper, TextField, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { MAX_SKETCHES } from \"../constants\";\nimport Information from \"../components/Information\";\nimport ConfirmationDialog from \"../../../components/ConfirmationDialog\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: \"100%\",\n  padding: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n  borderRight: `${theme.spacing(0.5)} solid ${theme.palette.info.main}`,\n  borderLeft: `${theme.spacing(0.5)} solid ${theme.palette.info.main}`,\n}));\n\nconst StyledTextWarning = styled(\"div\")(({ theme }) => ({\n  color: `${theme.palette.error.main}`,\n  fontSize: \"11px\",\n  letterSpacing: \"0.035rem\",\n  marginTop: \"3px\",\n}));\n\n// A view that is rendered if the user has selected not to accept functional\n// cookies. (Functional cookies has to be accepted, otherwise this part of the plugin\n// has no meaning).\nconst NotSupportedView = ({ globalObserver }) => {\n  // Handles clicks on the \"change-cookie-settings-button\". Simply emits an event\n  // on the global-observer, stating that the cookie-banner should be shown again.\n  const handleChangeCookieSettingsClick = () => {\n    globalObserver.publish(\"core.showCookieBanner\");\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Information\n          text=\"Det ser ut som att du har valt att inte tillåta funktionella kakor. På grund av\n        detta så kan du inte spara dina rit-objekt. Klicka nedan för att ändra inställningarna.\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={handleChangeCookieSettingsClick}\n        >\n          Cookie-inställningar\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\n// A simple component allowing the user to select a name and save the current\n// sketch to LS under that name.\nconst SketchSaver = (props) => {\n  // A hook component that sets and gets a replaceWarning\n  // This prompts when the user types in a sketch name that already exists\n  const [replaceWarning, setReplaceWarning] = React.useState({\n    truncatedSketchName: \"\",\n    text: \" \",\n    show: false,\n  });\n\n  const [saveButtonStateTest, setSaveButtonStateTest] = React.useState({\n    disabled: true,\n    message: \"Klik om de objecten op de kaart op te slaan.\",\n  });\n\n  // We're gonna want to prompt the user with a snackbar when a sketch is saved.\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Handles text-input on the sketch-name\n  const handleInputChange = (e) => {\n    props.setSketchName(e.target.value);\n    getSaveButtonState();\n  };\n\n  // Handles when the user wants to add (or update an existing) sketch.\n  // The handler makes sure to trigger the model to update the local-storage,\n  // and also update the local state.\n  const handleSaveSketchClick = () => {\n    // First we'll try to save the sketch to the local-storage. This method\n    // will return an object stating if it could be saved or not.\n    const { status, message } = props.model.addCurrentSketchToStorage({\n      title: props.sketchName,\n    });\n    // Then we'll update the state with the new sketches and clear the text-field.\n    props.setSavedSketches(props.model.getSketchesFromStorage());\n    props.setSketchName(\"\");\n    setReplaceWarning({ ...replaceWarning, text: \" \", show: false });\n    // And prompt the user.\n    enqueueSnackbar(message, {\n      variant: status === \"FAILED\" ? \"error\" : \"success\",\n    });\n  };\n\n  // Checks if a text warning needs to be prompted when the user has typed\n  // an already existing sketch name. This function replaces but also incorporates\n  // most of the code from the previous \"nameExists\"-method\n  const checkSketchName = () => {\n    // This is the original code from \"nameExists\" that has been moved into this functio0n.\n    // Checks if input name exists in saved sketches\n    let exists = props.savedSketches.some(\n      (sketch) => sketch.title.toLowerCase() === props.sketchName.toLowerCase()\n    );\n\n    // If \"exists\" returns true we set replaceWarning to true along with a text warning.\n    // Also, if the sketchName is longer than 15 chars we truncate the name to show.\n    setReplaceWarning({\n      ...replaceWarning,\n      truncatedSketchName:\n        props.sketchName.length > 15\n          ? props.sketchName.substring(0, 15) + \"...\"\n          : props.sketchName,\n      text: exists\n        ? `Naam gebruikt. Werkruimte vervangen \"${replaceWarning.truncatedSketchName}\"?`\n        : \" \",\n      show: exists ? true : false,\n    });\n\n    return exists;\n  };\n\n  // Let's listen for enter-key-down. If the enter-key is pressed and\n  // the save-button isn't disabled we can save the sketch.\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      !saveButtonStateTest.disabled && handleSaveSketchClick();\n    }\n  };\n\n  // Listens to every keypress to see if the input matches any existing saved sketches\n  const handleKeyUp = (e) => {\n    checkSketchName(e.target.value);\n    getSaveButtonState();\n  };\n\n  // Returns an object stating if the save-button should be disabled or not, along\n  // with a tooltip-message.\n  const getSaveButtonState = () => {\n    // If the name consists of less than four characters, the button should be disabled.\n    // We only allow workspace-names that consist of three characters or more.\n    if (props.sketchName.length < 4) {\n      return setSaveButtonStateTest({\n        ...saveButtonStateTest,\n        disabled: true,\n        message:\n          \"Er moeten minimaal vier tekens worden ingevoerd om een werkruimte te \" +\n          \"kunnen maken.\",\n      });\n    }\n    // If the name does not already exist, and we've already saved the maximum number of sketches,\n    // the button should be disabled. (If the name does exist, it is OK to save since one\n    // will be over-written).\n    if (props.savedSketches.length >= MAX_SKETCHES && !checkSketchName()) {\n      return setSaveButtonStateTest({\n        ...saveButtonStateTest,\n        disabled: true,\n        message:\n          \"Het maximale aantal werkruimten is opgeslagen. Verwijder of \" +\n          \"overschrijf er één door een van de namen in de onderstaande lijst \" +\n          \"in te voeren.\",\n      });\n    }\n    // If we've made it this far, it is OK to save!\n    setSaveButtonStateTest({\n      ...saveButtonStateTest,\n      disabled: false,\n      message: \"Klik om de tekenobjecten op de kaart op te slaan.\",\n    });\n  };\n\n  return (\n    <Paper style={{ padding: 8 }}>\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n        <Grid item xs={8}>\n          <Tooltip\n            disableInteractive\n            title=\"Ange att namn så att arbetsytan kan identifieras senare.\"\n          >\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              style={{ maxWidth: \"100%\" }}\n              onChange={handleInputChange}\n              onKeyUp={handleKeyUp}\n              onKeyDown={handleKeyDown}\n              value={props.sketchName}\n            />\n          </Tooltip>\n        </Grid>\n        <Grid container item xs={3} justifyContent=\"flex-end\">\n          <Tooltip disableInteractive title={saveButtonStateTest.message}>\n            <span>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                disabled={saveButtonStateTest.disabled}\n                onClick={handleSaveSketchClick}\n              >\n                {replaceWarning.show ? \"Vervangen\" : \"Opslaan\"}\n              </Button>\n            </span>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <StyledTextWarning>{replaceWarning.text}</StyledTextWarning>\n    </Paper>\n  );\n};\n\n// A simple component containing information about a saved sketch along\n// with buttons allowing the user to add the sketch to the map, or delete\n// the saved sketch entirely.\nconst SavedSketch = ({\n  sketchInfo,\n  handleRemoveClick,\n  handleAddToMapClick,\n}) => {\n  return (\n    <Zoom in appear>\n      <StyledPaper>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item xs={8}>\n            <Tooltip disableInteractive title={sketchInfo.title}>\n              <Grid\n                item\n                xs={12}\n                sx={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}\n              >\n                <Typography variant=\"button\" noWrap>\n                  {sketchInfo.title}\n                </Typography>\n              </Grid>\n            </Tooltip>\n            <Grid item xs={12}>\n              <Tooltip\n                disableInteractive\n                title={`Arbetsytan uppdaterades senast ${sketchInfo.date}`}\n              >\n                <Typography variant=\"caption\">\n                  {`Uppdaterad: ${sketchInfo.date?.split(\" \")[0]}`}\n                </Typography>\n              </Tooltip>\n            </Grid>\n          </Grid>\n\n          <Grid container item xs={4} justifyContent=\"flex-end\">\n            <Tooltip\n              disableInteractive\n              title=\"Klicka för att radera arbetsytan.\"\n            >\n              <IconButton size=\"small\" onClick={handleRemoveClick}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              disableInteractive\n              title=\"Klicka för att läsa in objekten.\"\n            >\n              <IconButton size=\"small\" onClick={handleAddToMapClick}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </Zoom>\n  );\n};\n\nconst SavedSketchList = ({ model, savedSketches, setSavedSketches }) => {\n  // We're gonna need a state to keep track of the sketch that the\n  // user is about to remove. (So that we can make sure to confirm that\n  // they want to remove it).\n  const [sketchToRemove, setSketchToRemove] = React.useState(null);\n  // Adds the features in the clicked sketch to the map.\n  const handleAddToMapClick = (sketch) => {\n    model.addSketchToMap(sketch);\n  };\n  // When the user clicks the remove-button, we'll set the clicked\n  // sketch in state so that the user can confirm that they want to remove it.\n  const handleRemoveClick = (sketch) => {\n    setSketchToRemove(sketch);\n  };\n  // Fires when the user confirms that they want to remove the sketch. Removes the\n  // sketch from LS.\n  const handleRemoveConfirmation = () => {\n    model.removeSketchFromStorage(sketchToRemove);\n    setSavedSketches(\n      savedSketches.filter(\n        (s) => !model.equalsIgnoringCase(s.title, sketchToRemove.title)\n      )\n    );\n    setSketchToRemove(null);\n  };\n  // Fires when the user closes the confirmation-window.\n  const handleRemoveConfirmationAbort = () => {\n    setSketchToRemove(null);\n  };\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"caption\">\n          {savedSketches.length === 0\n            ? \"Er zijn geen opgeslagen werkruimten gevonden.\"\n            : \"Opgeslagen werkruimten:\"}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        {savedSketches.map((sketch) => {\n          return (\n            <SavedSketch\n              key={sketch.id}\n              sketchInfo={sketch}\n              handleAddToMapClick={() => handleAddToMapClick(sketch)}\n              handleRemoveClick={() => handleRemoveClick(sketch)}\n            />\n          );\n        })}\n      </Grid>\n      <ConfirmationDialog\n        open={sketchToRemove !== null}\n        titleName={\"Radera arbetsyta\"}\n        contentDescription={\n          \"Är du säker på att du vill radera arbetsytan? Detta går inte att ongedaan maken.\"\n        }\n        cancel={\"Annuleren\"}\n        confirm={\"Radera\"}\n        handleConfirm={handleRemoveConfirmation}\n        handleAbort={handleRemoveConfirmationAbort}\n      />\n    </Grid>\n  );\n};\n\nconst SaveView = ({ globalObserver, model, id, functionalCookiesOk }) => {\n  // If the user wants to save their work, they'll have to choose a name\n  // so that the workspace can be identified in the list of saved workspaces later.\n  const [sketchName, setSketchName] = React.useState(\"\");\n  // We also have to keep track of all the saved sketches. Initiate the state with the sketches\n  // currently stored in the local-storage.\n  const [savedSketches, setSavedSketches] = React.useState(\n    model.getSketchesFromStorage()\n  );\n  // We have to get some information about the current activity (view)\n  const activity = model.getActivityFromId(id);\n  // Let's make sure we're allowing for functional cookies, and if we aren't\n  // we'll render a view telling the user that the save-view does not work\n  // until they've changed their settings.\n  return !functionalCookiesOk ? (\n    <NotSupportedView globalObserver={globalObserver} />\n  ) : (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Information text={activity.information} />\n      </Grid>\n      <Grid item xs={12}>\n        <SketchSaver\n          model={model}\n          sketchName={sketchName}\n          setSketchName={setSketchName}\n          savedSketches={savedSketches}\n          setSavedSketches={setSavedSketches}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <SavedSketchList\n          model={model}\n          savedSketches={savedSketches}\n          setSavedSketches={setSavedSketches}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SaveView;\n","import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  Tooltip,\n} from \"@mui/material\";\n\nimport LocalStorageHelper from \"utils/LocalStorageHelper\";\nimport useCookieStatus from \"hooks/useCookieStatus\";\n\nimport {\n  STORAGE_KEY,\n  AREA_MEASUREMENT_UNITS,\n  LENGTH_MEASUREMENT_UNITS,\n  MEASUREMENT_PRECISIONS,\n} from \"../constants\";\n\nconst SettingsView = (props) => {\n  // Let's destruct some props\n  const { model, measurementSettings, setMeasurementSettings } = props;\n  // We're gonna need to keep track of if we're allowed to save stuff in LS. Let's use the hook.\n  const { functionalCookiesOk } = useCookieStatus(props.globalObserver);\n  // We're gonna need some local state as well. For example, should we show helper-snacks?\n  const [showHelperSnacks, setShowHelperSnacks] = React.useState(\n    model.getShowHelperSnacks()\n  );\n  // An effect that makes sure to update the model with the user-choice regarding the helper-snacks.\n  // The effect also makes sure to store the setting in the LS (if allowed).\n  React.useEffect(() => {\n    model.setShowHelperSnacks(showHelperSnacks);\n    if (functionalCookiesOk) {\n      LocalStorageHelper.set(STORAGE_KEY, {\n        ...LocalStorageHelper.get(STORAGE_KEY),\n        showHelperSnacks: showHelperSnacks,\n      });\n    }\n  }, [model, showHelperSnacks, functionalCookiesOk]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12} sx={{ marginTop: 2 }}>\n        <FormControl component=\"fieldset\">\n          <FormLabel focused={false} component=\"legend\">\n            Generella inställningar\n          </FormLabel>\n          <Tooltip\n            disableInteractive\n            title={`Slå ${\n              measurementSettings.showText ? \"av\" : \"på\"\n            } om du vill ${\n              measurementSettings.showText ? \"dölja\" : \"visa\"\n            } text på objekten.`}\n          >\n            <FormControlLabel\n              label=\"Visa text på objekten\"\n              control={\n                <Switch\n                  checked={measurementSettings.showText}\n                  onChange={() => {\n                    setMeasurementSettings((settings) => ({\n                      ...settings,\n                      showText: !settings.showText,\n                    }));\n                  }}\n                  color=\"primary\"\n                />\n              }\n            />\n          </Tooltip>\n          <Tooltip\n            disableInteractive\n            title={`Slå ${showHelperSnacks ? \"av\" : \"på\"} om du vill ${\n              showHelperSnacks ? \"dölja\" : \"visa\"\n            } hjälptexter.`}\n          >\n            <FormControlLabel\n              label=\"Hjälptexter aktiverade\"\n              control={\n                <Switch\n                  checked={showHelperSnacks}\n                  onChange={() => setShowHelperSnacks((show) => !show)}\n                  color=\"primary\"\n                />\n              }\n            />\n          </Tooltip>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl component=\"fieldset\">\n          <FormLabel focused={false} component=\"legend\">\n            Mätinställningar\n          </FormLabel>\n\n          <Tooltip\n            disableInteractive\n            title={\n              !measurementSettings.showText\n                ? \"Aktivera text på objekten om du vill visa objektens omkrets/radie.\"\n                : `Slå ${\n                    measurementSettings.showArea ? \"av\" : \"på\"\n                  } om du vill ${\n                    measurementSettings.showArea ? \"dölja\" : \"visa\"\n                  } area på objekten.`\n            }\n          >\n            <FormControlLabel\n              label=\"Visa area\"\n              control={\n                <Switch\n                  disabled={!measurementSettings.showText}\n                  checked={measurementSettings.showArea}\n                  onChange={() => {\n                    setMeasurementSettings((settings) => ({\n                      ...settings,\n                      showArea: !settings.showArea,\n                    }));\n                  }}\n                  color=\"primary\"\n                />\n              }\n            />\n          </Tooltip>\n          <Tooltip\n            disableInteractive\n            title={\n              !measurementSettings.showText\n                ? \"Aktivera text på objekten om du vill visa objektens längd\"\n                : `Slå ${\n                    measurementSettings.showLength ? \"av\" : \"på\"\n                  } om du vill ${\n                    measurementSettings.showLength ? \"dölja\" : \"visa\"\n                  } längd på objekten.`\n            }\n          >\n            <FormControlLabel\n              label=\"Visa längd\"\n              control={\n                <Switch\n                  disabled={!measurementSettings.showText}\n                  checked={measurementSettings.showLength ?? false}\n                  onChange={() => {\n                    setMeasurementSettings((settings) => ({\n                      ...settings,\n                      showLength: !settings.showLength,\n                    }));\n                  }}\n                  color=\"primary\"\n                />\n              }\n            />\n          </Tooltip>\n          <Tooltip\n            disableInteractive\n            title={\n              !measurementSettings.showText\n                ? \"Aktivera text på objekten om du vill visa objektens omkrets/radie.\"\n                : `Slå ${\n                    measurementSettings.showPerimeter ? \"av\" : \"på\"\n                  } om du vill ${\n                    measurementSettings.showPerimeter ? \"dölja\" : \"visa\"\n                  } omkrets/radie. på objekten.`\n            }\n          >\n            <FormControlLabel\n              label=\"Visa omkrets/radie\"\n              control={\n                <Switch\n                  disabled={!measurementSettings.showText}\n                  checked={measurementSettings.showPerimeter}\n                  onChange={() => {\n                    setMeasurementSettings((settings) => ({\n                      ...settings,\n                      showPerimeter: !settings.showPerimeter,\n                    }));\n                  }}\n                  color=\"primary\"\n                />\n              }\n            />\n          </Tooltip>\n          <Tooltip title=\"Välj enhet för mätning av areal.\">\n            <FormControl size=\"small\" style={{ marginTop: 8 }}>\n              <InputLabel\n                variant=\"outlined\"\n                id=\"sketch-select-area-measurement-unit-label\"\n              >\n                Mätenhet, areal\n              </InputLabel>\n              <Select\n                id=\"sketch-select-area-measurement-unit\"\n                labelId=\"sketch-select-area-measurement-unit-label\"\n                value={measurementSettings.areaUnit}\n                label=\"Mätenhet, areal\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  setMeasurementSettings((settings) => ({\n                    ...settings,\n                    areaUnit: e.target.value,\n                  }));\n                }}\n              >\n                {AREA_MEASUREMENT_UNITS.map((unit, index) => {\n                  return (\n                    <MenuItem value={unit.type} key={index}>\n                      {unit.name}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Tooltip>\n          <Tooltip title=\"Välj enhet för mätning av längd.\">\n            <FormControl size=\"small\" style={{ marginTop: 16 }}>\n              <InputLabel\n                variant=\"outlined\"\n                id=\"sketch-select-length-measurement-unit-label\"\n              >\n                Mätenhet, längd\n              </InputLabel>\n              <Select\n                id=\"sketch-select-length-measurement-unit\"\n                labelId=\"sketch-select-length-measurement-unit-label\"\n                value={measurementSettings.lengthUnit}\n                label=\"Mätenhet, längd\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  setMeasurementSettings((settings) => ({\n                    ...settings,\n                    lengthUnit: e.target.value,\n                  }));\n                }}\n              >\n                {LENGTH_MEASUREMENT_UNITS.map((unit, index) => {\n                  return (\n                    <MenuItem value={unit.type} key={index}>\n                      {unit.name}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Tooltip>\n          <Tooltip title=\"Välj med vilken precision mätvärdena ska presenteras.\">\n            <FormControl size=\"small\" style={{ marginTop: 16 }}>\n              <InputLabel variant=\"outlined\" id=\"sketch-select-precision-label\">\n                Mätprecision\n              </InputLabel>\n              <Select\n                id=\"sketch-select-precision\"\n                labelId=\"sketch-select-precision-label\"\n                value={measurementSettings.precision ?? 0}\n                label=\"Mätprecision\"\n                variant=\"outlined\"\n                onChange={(e) => {\n                  setMeasurementSettings((settings) => ({\n                    ...settings,\n                    precision: parseInt(e.target.value),\n                  }));\n                }}\n              >\n                {MEASUREMENT_PRECISIONS.map((precision, index) => {\n                  return (\n                    <MenuItem value={precision.value} key={index}>\n                      {precision.name}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </Tooltip>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SettingsView;\n","// Base\nimport React from \"react\";\nimport { Grid } from \"@mui/material\";\n// Constants\nimport { PLUGIN_MARGIN, MAX_REMOVED_FEATURES } from \"../constants\";\n// Components\nimport ActivityMenu from \"../components/ActivityMenu\";\n// Views\nimport AddView from \"./AddView\";\nimport SaveView from \"./SaveView\";\nimport UploadView from \"./UploadView\";\nimport DeleteView from \"./DeleteView\";\nimport MoveView from \"./MoveView\";\nimport EditView from \"./EditView\";\nimport SettingsView from \"./SettingsView\";\n// Hooks\nimport useCookieStatus from \"hooks/useCookieStatus\";\nimport useUpdateEffect from \"hooks/useUpdateEffect\";\n\nimport { useSnackbar } from \"notistack\";\n\n// The SketchView is the main view for the Sketch-plugin.\nconst SketchView = (props) => {\n  // We want to render the ActivityMenu on the same side as the plugin\n  // is rendered (left or right). Let's grab the prop stating where it is rendered!\n  const pluginPosition = props.options?.position ?? \"left\";\n  // We are going to be using the sketch-, kml-, and draw-model. Let's destruct them.\n  const { model, drawModel, kmlModel } = props;\n  // We are gonna need the local- and global-observer\n  const { localObserver, globalObserver } = props;\n  // The current draw-type is also required, along with it's set:er.\n  const { activeDrawType, setActiveDrawType } = props;\n  // We're gonna need to keep track of the current chosen activity.\n  const { activityId, setActivityId } = props;\n\n  // We're gonna need some snackbar functions so that we can prompt the user with information.\n  const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n  // We don't want to prompt the user with more than one snack, so lets track the current one,\n  // so that we can close it when another one is about to open.\n  const helperSnack = React.useRef(null);\n\n  // We're gonna need to keep track of some draw-styling...\n  const [drawStyle, setDrawStyle] = React.useState(\n    model.getDrawStyleSettings()\n  );\n  // ...and some text-styling.\n  const [textStyle, setTextStyle] = React.useState(\n    model.getTextStyleSettings()\n  );\n  // We want to keep track of the last removed features so that the user can restore\n  // features that they potentially removed by mistake.\n  const [removedFeatures, setRemovedFeatures] = React.useState(\n    model.getRemovedFeaturesFromStorage()\n  );\n  // We want to keep track of the recently imported kml-files so that the user can remove or hide\n  // all features from an imported kml-file.The array will contain objects with an id (this id will\n  // be present on each feature from that kml-file as well) along with a title that can be shown to the user.\n  const [uploadedFiles, setUploadedFiles] = React.useState([]);\n  // We're gonna need to keep track of if we're allowed to save stuff in LS. Let's use the hook.\n  const { functionalCookiesOk } = useCookieStatus(globalObserver);\n\n  // Checks that every entry in the array of uploaded files still\n  // has some features in the map. If it doesn't, the entry is removed.\n  const refreshUploadsList = React.useCallback(() => {\n    const refreshedUploadsList = uploadedFiles.filter((file) => {\n      return kmlModel.importedKmlStillHasFeatures(file.id);\n    });\n    setUploadedFiles(refreshedUploadsList);\n  }, [kmlModel, uploadedFiles]);\n\n  // Handler making sure to keep the removed features updated when a new feature is removed.\n  const handleFeatureRemoved = React.useCallback(\n    (feature) => {\n      // If the user has chosen not to accept functional cookies, we cannot save the recently\n      // removed feature. In that case, let's return right away.\n      if (!functionalCookiesOk) {\n        return;\n      }\n      // There are some special cases where the removed feature should not be added\n      // to the list of removed features. More information can be found in the method\n      // declaration.\n      if (!model.featureShouldBeAddedToStorage(feature)) {\n        return;\n      }\n      // We're gonna need to decorate the removed feature so that we can keep track of it.\n      model.decorateFeature(feature);\n      // We have to make sure to update the local storage with the newly removed feature so that\n      // the removed features are kept between sessions.\n      model.addFeatureToStorage(feature);\n      // Then we'll update the state\n      setRemovedFeatures(\n        [feature, ...removedFeatures].slice(0, MAX_REMOVED_FEATURES)\n      );\n      // We also have to make sure to remove eventual uploads where all its features\n      // has been removed. (It does not make sense to have a list of imports where all the\n      // features from the import has been removed).\n      refreshUploadsList();\n    },\n    [model, removedFeatures, functionalCookiesOk, refreshUploadsList]\n  );\n\n  // Handler making sure to keep the removed features updated when the user has pressed \"removed all features\".\n  const handleFeaturesRemoved = React.useCallback(\n    (features) => {\n      // If the user has chosen not to accept functional cookies, we cannot save the recently\n      // removed feature. In that case, let's return right away.\n      if (!functionalCookiesOk) {\n        return;\n      }\n      // Since we might be dealing with thousands of features removed at the same time, we make sure\n      // to grab only the first \"MAX_REMOVED_FEATURES\" (around 5). (While also ignoring hidden features).\n      const lastRemovedFeatures = features\n        .filter((f) => f.get(\"HIDDEN\") !== true)\n        .slice(0, MAX_REMOVED_FEATURES);\n      // Then we'll loop over these features and decorate them with id:s and dates.\n      for (const feature of lastRemovedFeatures) {\n        // We're gonna need to decorate the removed feature so that we can keep track of it.\n        model.decorateFeature(feature);\n        // We have to make sure to update the local storage with the newly removed feature so that\n        // the removed features are kept between sessions.\n        model.addFeatureToStorage(feature);\n      }\n      // Since we might _not_ be dealing with enough features to fill the list of removed features,\n      // we have to make sure to merge the features that were just deleted with the features that\n      // we might have from earlier, and then extract the last \"MAX_REMOVED_FEATURES\" of them.\n      const removedFeaturesToShow = [\n        ...lastRemovedFeatures,\n        ...removedFeatures,\n      ].slice(0, MAX_REMOVED_FEATURES);\n      // Then we'll update the state.\n      setRemovedFeatures(removedFeaturesToShow);\n      // We also have to make sure to remove eventual uploads where all its features\n      // has been removed. (It does not make sense to have a list of imports where all the\n      // features from the import has been removed).\n      refreshUploadsList();\n    },\n    [model, removedFeatures, functionalCookiesOk, refreshUploadsList]\n  );\n\n  // Handler for when a feature is added to the draw-source via the addFeature-method\n  // in the drawModel.\n  const handleFeatureAdded = React.useCallback(\n    (feature) => {\n      // We only care about features that contain the \"HANDLED_ID\"-prop (which basically) means\n      // we're dealing with a feature that was removed at an earlier stage, and is now being restored.\n      const handledId = feature.get(\"HANDLED_ID\");\n      if (handledId) {\n        // If we're restoring a feature from the list of removed features, we have to update the list\n        // of removed features obviously.\n        setRemovedFeatures(\n          removedFeatures.filter((f) => f.get(\"HANDLED_ID\") !== handledId)\n        );\n        // We also have to remove the restored feature from the storage\n        model.removeFeatureFromStorage(handledId);\n      }\n    },\n    [model, removedFeatures]\n  );\n\n  // Handles when a kml-file has been added to the map via the drag-and-drop\n  // functionality. Makes sure to update the state containing the uploaded files.\n  const handleKmlFileImported = React.useCallback(\n    ({ id }) => {\n      setUploadedFiles((files) => [\n        ...files,\n        {\n          id,\n          title: model.getDateTimeString({\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\",\n          }),\n          hidden: false,\n          textShown: true,\n        },\n      ]);\n    },\n    [model]\n  );\n\n  // This effect makes sure to update the draw-style-settings in the draw-model when\n  // the user changes the style-settings in the view.\n  React.useEffect(() => {\n    return drawModel.setDrawStyleSettings(drawStyle);\n  }, [drawModel, drawStyle]);\n\n  // This effect makes sure to update the text-style-settings in the draw-model when\n  // the user changes the text-style-settings in the view.\n  React.useEffect(() => {\n    return drawModel.setTextStyleSettings(textStyle);\n  }, [drawModel, textStyle]);\n\n  // This effect makes sure to save the draw-style-settings to the LS when it\n  // changes. (Only if functional cookies are allowed obviously).\n  React.useEffect(() => {\n    functionalCookiesOk && model.setStoredDrawStyleSettings(drawStyle);\n  }, [drawStyle, functionalCookiesOk, model]);\n\n  // This effect makes sure to save the text-style-settings to the LS when it\n  // changes. (Only if functional cookies are allowed obviously).\n  React.useEffect(() => {\n    functionalCookiesOk && model.setStoredTextStyleSettings(textStyle);\n  }, [textStyle, functionalCookiesOk, model]);\n\n  // This effect does not run on first render. (Otherwise the user would be\n  // prompted with information before they've even started using the plugin).\n  // If it's not the first render, the effect makes sure to prompt the user\n  // with information when they change the current activity or draw-type.\n  useUpdateEffect(() => {\n    // Let's check if there's some helper-text that we should prompt the user with.\n    const helperText = model.getHelperSnackText(activityId, activeDrawType);\n    // If there is, we can prompt the user with a snack.\n    if (helperText) {\n      helperSnack.current = enqueueSnackbar(helperText, {\n        variant: \"default\",\n        anchorOrigin: { vertical: \"bottom\", horizontal: \"center\" },\n      });\n    }\n    // Let's make sure to clean-up out current snack when un-mounting!\n    return () => {\n      closeSnackbar(helperSnack.current);\n    };\n  }, [activityId, activeDrawType, enqueueSnackbar, closeSnackbar]);\n\n  // This effect makes sure to subscribe (and unsubscribe) to the observer-events that we care about.\n  React.useEffect(() => {\n    // Fires when a feature has been removed from the draw-source.\n    localObserver.subscribe(\"drawModel.featureRemoved\", handleFeatureRemoved);\n    localObserver.subscribe(\"drawModel.featuresRemoved\", handleFeaturesRemoved);\n    localObserver.subscribe(\"drawModel.featureAdded\", handleFeatureAdded);\n    localObserver.subscribe(\"kmlModel.fileImported\", handleKmlFileImported);\n    return () => {\n      localObserver.unsubscribe(\"drawModel.featureRemoved\");\n      localObserver.unsubscribe(\"drawModel.featuresRemoved\");\n      localObserver.unsubscribe(\"drawModel.featureAdded\");\n      localObserver.unsubscribe(\"kmlModel.fileImported\");\n    };\n  }, [\n    activityId,\n    localObserver,\n    handleFeatureRemoved,\n    handleFeaturesRemoved,\n    handleFeatureAdded,\n    handleKmlFileImported,\n  ]);\n\n  // The current view depends on which tab the user has\n  // selected. Tab 0: The \"create-view\", Tab 1: The \"save-upload-view\".\n  const renderCurrentView = () => {\n    // Let's check which activity we're supposed to render!\n    switch (activityId) {\n      case \"ADD\":\n        return (\n          <AddView\n            id={activityId}\n            model={model}\n            localObserver={localObserver}\n            drawModel={drawModel}\n            activeDrawType={activeDrawType}\n            setActiveDrawType={setActiveDrawType}\n            drawStyle={drawStyle}\n            setDrawStyle={setDrawStyle}\n            textStyle={textStyle}\n            setTextStyle={setTextStyle}\n          />\n        );\n      case \"DELETE\":\n        return (\n          <DeleteView\n            id={activityId}\n            model={model}\n            drawModel={drawModel}\n            removedFeatures={removedFeatures}\n            globalObserver={globalObserver}\n            functionalCookiesOk={functionalCookiesOk}\n          />\n        );\n      case \"EDIT\":\n        return (\n          <EditView\n            id={activityId}\n            model={model}\n            drawModel={drawModel}\n            editFeature={props.editFeature}\n            modifyEnabled={props.modifyEnabled}\n            setModifyEnabled={props.setModifyEnabled}\n          />\n        );\n      case \"MOVE\":\n        return (\n          <MoveView\n            id={activityId}\n            model={model}\n            drawModel={drawModel}\n            translateEnabled={props.translateEnabled}\n            setTranslateEnabled={props.setTranslateEnabled}\n            moveFeatures={props.moveFeatures}\n          />\n        );\n      case \"SAVE\":\n        return (\n          <SaveView\n            id={activityId}\n            model={model}\n            drawModel={drawModel}\n            globalObserver={globalObserver}\n            functionalCookiesOk={functionalCookiesOk}\n          />\n        );\n      case \"UPLOAD\":\n        return (\n          <UploadView\n            id={activityId}\n            model={model}\n            drawModel={drawModel}\n            kmlModel={kmlModel}\n            uploadedFiles={uploadedFiles}\n            setUploadedFiles={setUploadedFiles}\n          />\n        );\n      case \"SETTINGS\":\n        return (\n          <SettingsView\n            id={activityId}\n            model={model}\n            functionalCookiesOk={functionalCookiesOk}\n            measurementSettings={props.measurementSettings}\n            setMeasurementSettings={props.setMeasurementSettings}\n            globalObserver={globalObserver}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  const renderBaseWindowLeft = () => {\n    return (\n      // The base plugin-window (in which we render the plugins) has a padding\n      // of 10 set. In this plugin we want to render the <ActivityMenu /> at the\n      // border of the window, hence we must set a negative margin-left of 10.\n      <Grid container>\n        <Grid item xs={3} style={{ marginLeft: -PLUGIN_MARGIN }}>\n          <ActivityMenu\n            pluginPosition={pluginPosition}\n            activityId={activityId}\n            setActivityId={setActivityId}\n          />\n        </Grid>\n        <Grid item xs={9}>\n          {renderCurrentView()}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const renderBaseWindowRight = () => {\n    return (\n      // The base plugin-window (in which we render the plugins) has a padding\n      // of 10 set. In this plugin we want to render the <ActivityMenu /> at the\n      // border of the window, hence we must set a negative margin-right of 10.\n      <Grid container justifyContent=\"flex-end\">\n        <Grid item xs={9}>\n          {renderCurrentView()}\n        </Grid>\n        <Grid item xs={3} style={{ marginRight: -PLUGIN_MARGIN }}>\n          <ActivityMenu\n            pluginPosition={pluginPosition}\n            activityId={activityId}\n            setActivityId={setActivityId}\n          />\n        </Grid>\n      </Grid>\n    );\n  };\n\n  // We want the ActivityMenu to be rendered in a place where it doesn't\n  // conflict with other user interactions. Therefore, we're rendering either\n  // all the way to the left (if the plugin is rendered on the left part of the\n  // screen), otherwise, we render it all the way to the right.\n  return pluginPosition === \"left\"\n    ? renderBaseWindowLeft()\n    : renderBaseWindowRight();\n};\n\nexport default SketchView;\n","import React from \"react\";\nimport { styled } from \"@mui/material\";\nimport { Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport { IconButton, Zoom, Paper } from \"@mui/material\";\n\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport TextDecreaseIcon from \"@mui/icons-material/TextDecrease\";\nimport TextIncreaseIcon from \"@mui/icons-material/TextIncrease\";\n\nimport Information from \"../components/Information\";\nimport UploadDialog from \"../components/UploadDialog\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: \"100%\",\n  padding: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n  borderRight: `${theme.spacing(0.5)} solid ${theme.palette.info.main}`,\n  borderLeft: `${theme.spacing(0.5)} solid ${theme.palette.info.main}`,\n}));\n\nconst ButtonPanel = ({ kmlModel, setDialogOpen }) => {\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <Tooltip\n          disableInteractive\n          title=\"Klik hierop om een dialoogvenster te openen waarmee u een\n          .kml-bestand op uw computer kunt selecteren.\"\n        >\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={() => setDialogOpen(true)}\n            startIcon={<FolderOpenIcon />}\n          >\n            Objecten importeren\n          </Button>\n        </Tooltip>\n      </Grid>\n      <Grid item xs={12}>\n        <Tooltip\n          disableInteractive\n          title=\"Klik hierop om alle tekenobjecten naar een .kml-bestand te\n          exporteren.\"\n        >\n          <Button\n            fullWidth\n            variant=\"contained\"\n            onClick={() => kmlModel.export()}\n            startIcon={<SaveAltIcon />}\n          >\n            Objecten exporteren\n          </Button>\n        </Tooltip>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst UploadedFile = (props) => {\n  return (\n    <Zoom in appear>\n      <StyledPaper>\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item xs={4}>\n            <Typography variant=\"button\">{props.title}</Typography>\n          </Grid>\n          <Grid container item xs={8} justifyContent=\"flex-end\" spacing={1}>\n            <Grid item>\n              <Tooltip\n                disableInteractive\n                title=\"Klik om de geïmporteerde items te verwijderen.\"\n              >\n                <IconButton size=\"small\" onClick={props.onRemoveClick}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip\n                disableInteractive\n                title={`Klicka för att ${\n                  props.hidden ? \"visa\" : \"dölja\"\n                } objekten ${props.hidden ? \"i\" : \"från\"} kartan.`}\n              >\n                <IconButton\n                  size=\"small\"\n                  onClick={props.onVisibilityChangeClick}\n                >\n                  {props.hidden ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <Tooltip\n                disableInteractive\n                title={`Klicka här för att ${\n                  props.textShown ? \"dölja\" : \"visa\"\n                } objektens etiketter.`}\n              >\n                <IconButton size=\"small\" onClick={props.onToggleShowTextClick}>\n                  {props.textShown ? (\n                    <TextDecreaseIcon />\n                  ) : (\n                    <TextIncreaseIcon />\n                  )}\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Grid>\n      </StyledPaper>\n    </Zoom>\n  );\n};\n\nconst UploadedFileList = (props) => {\n  return (\n    <Grid container style={{ maxHeight: 240, overflowY: \"auto\" }}>\n      <Grid item xs={12}>\n        <Typography variant=\"caption\">Uppladdade filer</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        {props.uploadedFiles.map((file) => {\n          return (\n            <UploadedFile\n              key={file.id}\n              title={file.title}\n              hidden={file.hidden}\n              textShown={file.textShown}\n              onVisibilityChangeClick={() =>\n                props.onVisibilityChangeClick(file.id)\n              }\n              onRemoveClick={() => props.onRemoveClick(file.id)}\n              onToggleShowTextClick={() => props.onToggleShowTextClick(file.id)}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst UploadView = (props) => {\n  // We're gonna need to keep track of if we should show the upload-dialog or not.\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  // Adds the supplied file (kml-string) to the map and updates the list\n  // of added kml-files.\n  const handleUploadedFile = (file) => {\n    // We're gonna need to generate an id that we can set on all the features\n    // in each file. This id can then be used to find all features that belongs to\n    // a kml-upload.\n    const id = props.model.generateRandomString();\n    // We're also gonna need to generate a date-time-string that can be shown in the list\n    // of uploaded kml-files.\n    const dateTime = props.model.getDateTimeString({\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    });\n    // Let's create an object with some meta-data and add it to the list of uploaded files.\n    props.setUploadedFiles((files) => [\n      ...files,\n      { id, title: dateTime, hidden: false, textShown: true },\n    ]);\n    // Then we can add the features to the map!\n    props.kmlModel.import(file, {\n      zoomToExtent: true,\n      setProperties: { KML_ID: id },\n    });\n  };\n\n  const onVisibilityChangeClick = (id) => {\n    const updatedFiles = props.uploadedFiles.map((file) => {\n      if (file.id === id) {\n        return { ...file, hidden: !file.hidden };\n      }\n      return file;\n    });\n    props.drawModel.toggleKmlFeaturesVisibility(id);\n    props.setUploadedFiles(updatedFiles);\n  };\n\n  const onRemoveClick = (id) => {\n    const updatedFiles = props.uploadedFiles.filter((file) => file.id !== id);\n    props.drawModel.removeKmlFeaturesById(id);\n    props.setUploadedFiles(updatedFiles);\n  };\n\n  const onToggleShowTextClick = (id) => {\n    const updatedFiles = props.uploadedFiles.map((file) => {\n      if (file.id === id) {\n        return { ...file, textShown: !file.textShown };\n      }\n      return file;\n    });\n    props.drawModel.toggleKmlFeaturesTextVisibility(id);\n    props.setUploadedFiles(updatedFiles);\n  };\n\n  // We have to get some information about the current activity (view)\n  const activity = props.model.getActivityFromId(props.id);\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Information text={activity.information} />\n      </Grid>\n      <Grid item xs={12}>\n        <ButtonPanel kmlModel={props.kmlModel} setDialogOpen={setDialogOpen} />\n      </Grid>\n      <Grid item xs={12}>\n        {props.uploadedFiles.length > 0 && (\n          <UploadedFileList\n            uploadedFiles={props.uploadedFiles}\n            onVisibilityChangeClick={onVisibilityChangeClick}\n            onRemoveClick={onRemoveClick}\n            onToggleShowTextClick={onToggleShowTextClick}\n          />\n        )}\n      </Grid>\n      <UploadDialog\n        open={dialogOpen}\n        setOpen={setDialogOpen}\n        handleUploadedFile={handleUploadedFile}\n      />\n    </Grid>\n  );\n};\n\nexport default UploadView;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"\n}), 'FolderOpen');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67 2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9c-4.97 0-9 4.03-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.51 0-2.91-.49-4.06-1.3l-1.42 1.44C8.04 20.3 9.94 21 12 21c4.97 0 9-4.03 9-9s-4.03-9-9-9z\"\n}), 'SettingsBackupRestore');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M.99 19h2.42l1.27-3.58h5.65L11.59 19h2.42L8.75 5h-2.5L.99 19zm4.42-5.61L7.44 7.6h.12l2.03 5.79H5.41zM23 11v2h-8v-2h8z\"\n}), 'TextDecrease');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M.99 19h2.42l1.27-3.58h5.65L11.59 19h2.42L8.75 5h-2.5L.99 19zm4.42-5.61L7.44 7.6h.12l2.03 5.79H5.41zM20 11h3v2h-3v3h-2v-3h-3v-2h3V8h2v3z\"\n}), 'TextIncrease');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;"],"names":["open","handleConfirm","handleAbort","titleName","contentDescription","cancel","confirm","createPortal","onClose","onMouseDown","e","stopPropagation","onClick","variant","document","getElementById","useCookieStatus","globalObserver","cookieStatus","setCookieStatus","React","functionalCookiesOk","functionalOk","thirdPartyCookiesOk","thirdPartyOk","cookieListener","subscribe","unsubscribe","useUpdateEffect","func","deps","didMount","current","props","container","justifyContent","pluginPosition","elevation","ACTIVITIES","activity","index","style","padding","disableInteractive","title","tooltip","sx","color","value","id","selected","activityId","onChange","setActivityId","icon","fullWidth","size","select","activeDrawType","setActiveDrawType","target","DRAW_TYPES","option","type","width","label","drawModel","localObserver","feature","setFeature","handleFeatureCreated","addedFeature","get","handleCloseClick","textFieldValue","length","removeFeature","set","refreshFeaturesTextStyle","handleAbortClick","options","text","prompt","headerText","buttonText","abortText","onAbort","model","setTitle","getFeatureTitle","setFeatureAttribute","item","xs","marginTop","marginBottom","align","SelectFeaturesDialog","state","setState","clickedFeatures","selectedFeatureIndexes","highlightedFeature","resetState","handleDrawSelectClick","maxHeight","map","disableGutters","onMouseEnter","hoveredFeature","highlightFeature","createHighlightFeature","addFeature","silent","handleMouseEnter","onMouseLeave","featureIndex","newSelectedFeatureIndexes","indexOf","filter","i","handleFeatureSelectChange","dense","edge","checked","tabIndex","disableRipple","primary","getId","disabled","drawSelectedFeature","setOpen","handleUploadedFile","filesChosen","setFilesChosen","handleUploadClick","async","fileInput","file","files","reader","FileReader","onload","result","error","console","readAsText","handleFileInputChange","name","accept","multiple","useLegacyNonMarkdownRenderer","getActivityFromId","information","drawStyle","setDrawStyle","textStyle","setTextStyle","StyledPaper","styled","Paper","theme","spacing","borderRight","palette","info","main","borderLeft","RecentlyRemovedNotSupported","publish","RemovedFeatureItem","onRestoreClick","Z","in","appear","alignItems","RemovedFeaturesList","removedFeatures","removeDrawnFeatures","startIcon","createSvgIcon","_jsx","d","ModifyNodeToggler","modifyEnabled","setModifyEnabled","Grid","Typography","Tooltip","Switch","zIndexAnchor","setZIndexAnchor","zIndexMenuOpen","Boolean","direction","height","Information","editFeature","FeatureTitleEditor","FeatureStyleEditor","Button","ContentCopy","duplicateFeature","reBindFeaturePropertyListener","currentTarget","endIcon","ArrowDropDown","Menu","anchorEl","MenuListProps","MenuItem","moveFeatureZIndexToTop","ListItemIcon","FlipToFront","fontSize","ListItemText","moveFeatureZIndexUp","ArrowDropUp","moveFeatureZIndexDown","moveFeatureZIndexToBottom","FlipToBack","TranslateToggler","translateEnabled","setTranslateEnabled","FeatureMoveSelector","movementLength","Math","floor","setMovementLength","movementAngle","angle","justifiedAngle","setMovementAngle","moves","lastMoves","pop","translateSelectedFeatures","setLastMoves","moveFeatures","StyledTextWarning","letterSpacing","NotSupportedView","SketchSaver","replaceWarning","setReplaceWarning","truncatedSketchName","show","saveButtonStateTest","setSaveButtonStateTest","message","enqueueSnackbar","useSnackbar","handleSaveSketchClick","status","addCurrentSketchToStorage","sketchName","setSavedSketches","getSketchesFromStorage","setSketchName","checkSketchName","exists","savedSketches","some","sketch","toLowerCase","substring","getSaveButtonState","MAX_SKETCHES","maxWidth","onKeyUp","onKeyDown","key","SavedSketch","sketchInfo","handleRemoveClick","handleAddToMapClick","overflow","textOverflow","noWrap","date","split","SavedSketchList","sketchToRemove","setSketchToRemove","addSketchToMap","removeSketchFromStorage","s","equalsIgnoringCase","measurementSettings","setMeasurementSettings","showHelperSnacks","setShowHelperSnacks","getShowHelperSnacks","LocalStorageHelper","STORAGE_KEY","component","focused","showText","control","settings","showArea","showLength","showPerimeter","labelId","areaUnit","AREA_MEASUREMENT_UNITS","unit","lengthUnit","LENGTH_MEASUREMENT_UNITS","precision","parseInt","MEASUREMENT_PRECISIONS","position","kmlModel","closeSnackbar","helperSnack","getDrawStyleSettings","getTextStyleSettings","setRemovedFeatures","getRemovedFeaturesFromStorage","uploadedFiles","setUploadedFiles","refreshUploadsList","refreshedUploadsList","importedKmlStillHasFeatures","handleFeatureRemoved","featureShouldBeAddedToStorage","decorateFeature","addFeatureToStorage","slice","MAX_REMOVED_FEATURES","handleFeaturesRemoved","features","lastRemovedFeatures","f","removedFeaturesToShow","handleFeatureAdded","handledId","removeFeatureFromStorage","handleKmlFileImported","getDateTimeString","hour","minute","second","hidden","textShown","setDrawStyleSettings","setTextStyleSettings","setStoredDrawStyleSettings","setStoredTextStyleSettings","helperText","getHelperSnackText","anchorOrigin","vertical","horizontal","renderCurrentView","marginLeft","PLUGIN_MARGIN","marginRight","ButtonPanel","setDialogOpen","export","UploadedFile","onRemoveClick","onVisibilityChangeClick","onToggleShowTextClick","UploadedFileList","overflowY","dialogOpen","updatedFiles","toggleKmlFeaturesVisibility","removeKmlFeaturesById","toggleKmlFeaturesTextVisibility","generateRandomString","dateTime","import","zoomToExtent","setProperties","KML_ID","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}