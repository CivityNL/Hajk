{"version":3,"file":"static/js/576.a7b22623.chunk.js","mappings":"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","sources":["components/Card.js","plugins/DialogWindowPlugin.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { withTheme } from \"@emotion/react\";\n\nimport {\n  Hidden,\n  Icon,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport Card from \"components/Card\";\nimport Dialog from \"components/Dialog/Dialog\";\nimport PluginControlButton from \"components/PluginControlButton\";\n\nclass DialogWindowPlugin extends React.PureComponent {\n  state = {\n    dialogOpen: false, // Will be taken care of in componentDidMount\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Merge options with defaults\n    this.opts = { ...props.defaults, ...props.options };\n\n    // Many plugins may use this class. Each plugin will have it's unique \"type\".\n    // Some plugins, such as InfoDialog, will also provide a \"name\" property as\n    // an option, to further identify its different instances.\n    // We use this information to create a (hopefully) truly unique key, used\n    // for local storage settings.\n    this.uniqueIdentifier = `${props.type.toLowerCase()}${\n      this.opts.name ? \".\" + this.opts.name : \"\"\n    }`;\n\n    this.title = this.opts.title || \"Unnamed plugin\";\n    this.description = this.opts.description || \"No description provided\";\n\n    // Allow Admin UI to provide an icon (as a string that will be turned to\n    // a ligature by the MUI Icon component), or fall back to the default icon\n    // provided by the creator of the plugin that's using DialogWindowPlugin.\n    this.icon =\n      typeof this.opts.icon === \"string\" ? (\n        <Icon>{this.opts.icon}</Icon>\n      ) : (\n        this.opts.icon\n      );\n  }\n\n  componentDidMount() {\n    let dialogOpen = this.opts.visibleAtStart;\n    const localStorageKey = `plugin.${this.uniqueIdentifier}.alreadyShown`;\n    const clean = this.props.app.config.mapConfig.map.clean;\n\n    // TODO: Use LocalStorageHelper so we have a per-map-setting here…\n    // No need to continue if we're in clean mode.\n    if (clean === false && this.opts.visibleAtStart === true) {\n      // If clean mode is false and visibleAtStart is true, however,\n      // check if showOnlyOnce is true.\n      if (\n        this.opts.showOnlyOnce === true &&\n        parseInt(window.localStorage.getItem(localStorageKey)) === 1\n      ) {\n        // If yes - don't show the dialog on load anymore.\n        dialogOpen = false;\n      } else {\n        // If not - check if showOnlyOnce is true and…\n        if (this.opts.showOnlyOnce === true) {\n          // if yes, store the setting in local storage.\n          window.localStorage.setItem(localStorageKey, 1);\n        }\n        dialogOpen = true;\n      }\n    } else {\n      dialogOpen = false;\n    }\n\n    this.setState({\n      dialogOpen,\n    });\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (dialogOpen) {\n      // Tell the Analytics model about this\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.uniqueIdentifier,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Subscribe to a global event that makes it possible to show this dialog.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.uniqueIdentifier}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    this.props.app.globalObserver.subscribe(eventName, (opts = {}) => {\n      this.setState({ dialogOpen: true });\n    });\n  }\n\n  #pluginIsWidget = (target) => {\n    return [\"left\", \"right\"].includes(target);\n  };\n\n  #handleButtonClick = (e) => {\n    this.setState({\n      dialogOpen: true,\n    });\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.uniqueIdentifier,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // AppModel keeps track of recently shown plugins.\n    this.props.app.pushPluginIntoHistory({\n      type: this.uniqueIdentifier,\n      icon: this.icon,\n      title: this.title,\n      description: this.description,\n    });\n  };\n\n  #onClose = () => {\n    typeof this.opts.onClose === \"function\" && this.opts.onAClose();\n    this.setState({\n      dialogOpen: false,\n    });\n  };\n\n  #onAbort = () => {\n    typeof this.opts.onAbort === \"function\" && this.opts.onAbort();\n    this.setState({\n      dialogOpen: false,\n    });\n  };\n\n  renderDialog() {\n    return createPortal(\n      <Dialog\n        options={this.opts}\n        open={this.state.dialogOpen}\n        onClose={this.#onClose}\n        onAbort={this.#onAbort}\n      >\n        {this.props.children}\n      </Dialog>,\n      document.getElementById(\"windows-container\")\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget and Control plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden\n        mdUp={\n          this.#pluginIsWidget(this.opts.target) ||\n          this.opts.target === \"control\"\n        }\n      >\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.dialogOpen}\n          onClick={this.#handleButtonClick}\n        >\n          <ListItemIcon>{this.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.icon}\n          onClick={this.#handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      // Hide Control button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <PluginControlButton\n          icon={this.icon}\n          onClick={this.#handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    const { target } = this.opts;\n    return (\n      // Don't render if \"clean\" query param is specified, otherwise go on\n      this.props.app.config.mapConfig.map.clean !== true && (\n        <>\n          {this.renderDialog()}\n          {/* Always render a Drawer button unless its target is \"hidden\". \n              It's a backup for plugins render elsewhere: we hide \n              Widget and Control buttons on small screens and fall \n              back to Drawer button). */}\n          {target !== \"hidden\" && this.renderDrawerButton()}\n          {/* Widget buttons must also render a Widget */}\n          {this.#pluginIsWidget(target) &&\n            this.renderWidgetButton(`${target}-column`)}\n          {/* Finally, render a Control button if target has that value */}\n          {target === \"control\" && this.renderControlButton()}\n        </>\n      )\n    );\n  }\n}\n\nexport default withTheme(DialogWindowPlugin);\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","React","state","open","render","abstract","icon","onClick","title","this","props","avatar","subheader","defaultProps","DialogWindowPlugin","constructor","super","dialogOpen","target","includes","e","setState","app","globalObserver","publish","eventName","pluginName","uniqueIdentifier","activeMap","config","pushPluginIntoHistory","type","description","opts","onClose","onAClose","onAbort","defaults","options","toLowerCase","name","componentDidMount","visibleAtStart","localStorageKey","mapConfig","map","clean","showOnlyOnce","parseInt","window","localStorage","getItem","setItem","subscribe","renderDialog","createPortal","children","document","getElementById","renderDrawerButton","mdUp","button","divider","selected","renderWidgetButton","id","mdDown","renderControlButton","withTheme","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","ButtonBase","overridesResolver","styles","root","display","textAlign","cardActionAreaClasses","opacity","vars","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","inProps","ref","useThemeProps","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible","_jsx","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","CardHeaderContent","content","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","variant","color","as","getCardUtilityClass","CardRoot","Paper","raised","elevation","undefined"],"sourceRoot":""}