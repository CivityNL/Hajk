{"version":3,"file":"static/js/9059.94a5f483.chunk.js","mappings":"kKAkEA,UA9DqB,IAA4C,IAA3C,KAAEA,EAAF,QAAQC,EAAR,mBAAiBC,GAAyB,EAC9D,MAAOC,EAAaC,GAAkBC,EAAAA,UAAe,GAE/CC,EAAoBD,EAAAA,aAAkBE,UAC1C,IACE,MAAMC,EAAYC,SAASC,eAAe,kBAC1C,UAAW,MAAMC,KAAQH,EAAUI,MAAO,CAExC,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,KACd,IACEb,EAAmBW,EAAOG,OAG3B,CAFC,MAAOC,GACPC,QAAQD,MAAR,4CAAmDA,GACpD,GAEHJ,EAAOM,WAAWR,EACnB,CAGF,CAFC,MAAOM,GACPC,QAAQD,MAAR,6CAAoDA,GACrD,CAGDhB,GAAQ,GACRG,GAAe,EAAf,GACC,CAACH,EAASC,IAEPkB,EAAmBf,EAAAA,aAAkB,KACzCJ,GAAQ,EAAR,GACC,CAACA,IAEEoB,EAAwBhB,EAAAA,aAAmBiB,IAC/C,MAAMd,EAAYC,SAASC,eAAe,kBAC1CN,EAAeI,EAAUI,MAAMW,OAAS,EAAxC,GACC,IAEH,OAAOC,EAAAA,EAAAA,eACL,SAAC,UAAD,CACEC,QAAS,CACPC,WAAY,uBACZC,WAAYxB,EAAc,YAAc,KACxCyB,UAAW,YACXC,MACE,kBACEC,KAAK,OACLC,KAAK,UACLC,OAAO,OACPC,UAAQ,EACRC,GAAG,iBACHC,SAAUd,IAGde,8BAA8B,GAEhCpC,KAAMA,EACNqC,QAAS/B,EACTgC,QAASlB,IAEXX,SAASC,eAAe,OAtB1B,C","sources":["plugins/Sketch/components/UploadDialog.js"],"sourcesContent":["import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport Dialog from \"../../../components/Dialog/Dialog\";\n\nconst UploadDialog = ({ open, setOpen, handleUploadedFile }) => {\n  const [filesChosen, setFilesChosen] = React.useState(false);\n\n  const handleUploadClick = React.useCallback(async () => {\n    try {\n      const fileInput = document.getElementById(\"kml-file-input\");\n      for await (const file of fileInput.files) {\n        // The file-reader should not be re-used. Let's initialize a new for each file.\n        const reader = new FileReader();\n        reader.onload = () => {\n          try {\n            handleUploadedFile(reader.result);\n          } catch (error) {\n            console.error(`Failed to import kml-file. Error: ${error}`);\n          }\n        };\n        reader.readAsText(file);\n      }\n    } catch (error) {\n      console.error(`Failed to import kml-files. Error: ${error}`);\n    }\n    // When we're done we have to close the dialog and make sure we disable the upload-button\n    // by setting the filesChosen-state to false.\n    setOpen(false);\n    setFilesChosen(false);\n  }, [setOpen, handleUploadedFile]);\n\n  const handleCloseClick = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleFileInputChange = React.useCallback((e) => {\n    const fileInput = document.getElementById(\"kml-file-input\");\n    setFilesChosen(fileInput.files.length > 0);\n  }, []);\n\n  return createPortal(\n    <Dialog\n      options={{\n        headerText: \"Ladda upp .kml-filer\",\n        buttonText: filesChosen ? \"Ladda upp\" : null,\n        abortText: \"Annuleren\",\n        text: (\n          <input\n            type=\"file\"\n            name=\"files[]\"\n            accept=\".kml\"\n            multiple\n            id=\"kml-file-input\"\n            onChange={handleFileInputChange}\n          />\n        ),\n        useLegacyNonMarkdownRenderer: true,\n      }}\n      open={open}\n      onClose={handleUploadClick}\n      onAbort={handleCloseClick}\n    />,\n    document.getElementById(\"map\")\n  );\n};\n\nexport default UploadDialog;\n"],"names":["open","setOpen","handleUploadedFile","filesChosen","setFilesChosen","React","handleUploadClick","async","fileInput","document","getElementById","file","files","reader","FileReader","onload","result","error","console","readAsText","handleCloseClick","handleFileInputChange","e","length","createPortal","options","headerText","buttonText","abortText","text","type","name","accept","multiple","id","onChange","useLegacyNonMarkdownRenderer","onClose","onAbort"],"sourceRoot":""}