{"version":3,"file":"static/js/5215.8224d2fe.chunk.js","mappings":"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","sources":["components/Card.js","plugins/BaseWindowPlugin.js","plugins/Edit/Edit.js","plugins/Edit/EditModel.js"],"sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Card as MUICard,\n  CardHeader,\n  CardActionArea,\n  Avatar,\n} from \"@mui/material\";\n\nconst StyledCard = styled(MUICard)(({ theme }) => ({\n  marginBottom: theme.spacing(1),\n  width: \"210px\",\n  [theme.breakpoints.down(\"sm\")]: {\n    boxShadow: \"none\",\n    borderBottom: \"1px solid #ccc\",\n    borderRadius: 0,\n    margin: 0,\n    width: \"100%\",\n    justifyContent: \"left\",\n  },\n}));\n\nconst StyledAvatar = styled(Avatar)(({ theme }) => ({\n  background: theme.palette.text.primary,\n}));\n\nclass Card extends React.PureComponent {\n  state = {\n    open: false,\n    text: \"\",\n  };\n\n  static propTypes = {\n    abstract: propTypes.string.isRequired,\n    icon: propTypes.object.isRequired,\n    onClick: propTypes.func.isRequired,\n    title: propTypes.string.isRequired,\n  };\n\n  static defaultProps = {\n    abstract: \"Beskrivning saknas\",\n    title: \"Titel saknas\",\n  };\n\n  render() {\n    const { abstract, icon, onClick, title } = this.props;\n\n    return (\n      <StyledCard onClick={onClick}>\n        <CardActionArea>\n          <CardHeader\n            avatar={<StyledAvatar>{icon}</StyledAvatar>}\n            title={title}\n            subheader={abstract}\n          />\n        </CardActionArea>\n      </StyledCard>\n    );\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { isMobile } from \"./../utils/IsMobile\";\nimport { createPortal } from \"react-dom\";\nimport { Hidden, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport Window from \"../components/Window.js\";\nimport Card from \"../components/Card.js\";\nimport PluginControlButton from \"../components/PluginControlButton\";\n\nclass BaseWindowPlugin extends React.PureComponent {\n  static propTypes = {\n    app: propTypes.object.isRequired,\n    children: propTypes.object.isRequired,\n    custom: propTypes.object.isRequired,\n    map: propTypes.object.isRequired,\n    options: propTypes.object.isRequired,\n    type: propTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    // 'type' is basically a unique identifier for each plugin\n    this.type = props.type.toLowerCase() || undefined;\n\n    // There will be defaults in props.custom, so that each plugin has own default title/description\n    this.description = props.options.description || props.custom.description;\n\n    // Should Window be visible at start?\n    const visibleAtStart =\n      (this.props.app.config.mapConfig.map.clean === false && // Never show in clean mode\n        (isMobile\n          ? props.options.visibleAtStartMobile\n          : props.options.visibleAtStart)) ||\n      false;\n\n    // If plugin is shown at start, we want to register it as shown in the Analytics module too.\n    // Normally, the event would be sent when user clicks on the button that activates the plugin,\n    // but in this case there won't be any click as the window will be visible at start.\n    if (visibleAtStart) {\n      this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n        eventName: \"pluginShown\",\n        pluginName: this.type,\n        activeMap: this.props.app.config.activeMap,\n      });\n    }\n\n    // Title and Color are kept in state and not as class properties. Keeping them in state\n    // ensures re-render when new props arrive and update the state variables (see componentDidUpdate() too).\n    this.state = {\n      title: props.options.title || props.custom.title || \"Unnamed plugin\",\n      color: props.options.color || props.custom.color || null,\n      windowVisible: visibleAtStart,\n    };\n\n    // Title is a special case: we want to use the state.title and pass on to Window in order\n    // to update Window's title dynamically. At the same time, we want all other occurrences,\n    // e.g. Widget or Drawer button's label to remain the same.\n    this.title = props.options.title || props.custom.title || \"Unnamed plugin\";\n\n    // Try to get values from admin's option. Fallback to customs from Plugin defaults, or finally to hard-coded values.\n    this.width = props.options.width || props.custom.width || 400;\n    this.height = props.options.height || props.custom.height || \"auto\";\n    this.position = props.options.position || props.custom.position || \"left\";\n\n    // Register Window in our global register\n    props.app.registerWindowPlugin(this);\n\n    // Subscribe to a global event that makes it possible to show/hide Windows.\n    // First we prepare a unique event name for each plugin so it looks like '{pluginName}.showWindow'.\n    const eventName = `${this.type}.showWindow`;\n    // Next, subscribe to that event, expect 'opts' array.\n    // To find all places where this event is publish, search for 'globalObserver.publish(\"show'\n    props.app.globalObserver.subscribe(eventName, (opts) => {\n      this.showWindow(opts);\n    });\n\n    // Same as above, but to close the window.\n    const closeEventName = `${this.type}.closeWindow`;\n\n    props.app.globalObserver.subscribe(closeEventName, () => {\n      this.closeWindow();\n    });\n  }\n\n  // Does not run on initial render, but runs on subsequential re-renders.\n  componentDidUpdate(prevProps) {\n    // Window's title and color can be updated on-the-flight, so we keep them\n    // in state and ensure that state is updated when new props arrive.\n    prevProps.custom.title !== this.props.custom.title &&\n      this.setState({ title: this.props.custom.title });\n\n    prevProps.custom.color !== this.props.custom.color &&\n      this.setState({ color: this.props.custom.color });\n  }\n\n  pluginIsWidget(target) {\n    return [\"left\", \"right\"].includes(target);\n  }\n\n  handleButtonClick = (e) => {\n    this.showWindow({\n      hideOtherPluginWindows: true,\n      runCallback: true,\n    });\n    this.props.app.globalObserver.publish(\"core.onlyHideDrawerIfNeeded\");\n  };\n\n  showWindow = (opts = {}) => {\n    const hideOtherPluginWindows = opts.hideOtherPluginWindows || true,\n      runCallback = opts.runCallback || true;\n    // Let the App know which tool is currently active\n    this.props.app.activeTool = this.type;\n\n    // Tell the Analytics model about this\n    this.props.app.globalObserver.publish(\"analytics.trackEvent\", {\n      eventName: \"pluginShown\",\n      pluginName: this.type,\n      activeMap: this.props.app.config.activeMap,\n    });\n\n    // AppModel keeps track of recently shown plugins.\n    this.props.app.pushPluginIntoHistory({\n      type: this.type,\n      icon: this.props.custom.icon,\n      title: this.title,\n      description: this.description,\n    });\n\n    // Don't continue if visibility hasn't changed\n    if (this.state.windowVisible === true) {\n      return null;\n    }\n\n    hideOtherPluginWindows === true && this.props.app.onWindowOpen(this);\n\n    this.setState(\n      {\n        windowVisible: true,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        // If there's a callback defined in custom, run it\n        runCallback === true &&\n          typeof this.props.custom.onWindowShow === \"function\" &&\n          this.props.custom.onWindowShow();\n      }\n    );\n  };\n\n  closeWindow = () => {\n    // If closeWindow was initiated by the tool that is currently\n    // active, we should unset the activeTool property\n    if (this.type === this.props.app.activeTool)\n      this.props.app.activeTool = undefined;\n\n    this.setState(\n      {\n        windowVisible: false,\n      },\n      () => {\n        // Notify the app that a plugin's visibility has changed\n        this.props.app.globalObserver.publish(\"core.pluginVisibilityChanged\");\n\n        typeof this.props.custom.onWindowHide === \"function\" &&\n          this.props.custom.onWindowHide();\n      }\n    );\n  };\n  /**\n   * @summary Render the plugin and its buttons according to settings in admin.\n   * @description See comments in code to follow the rendering logic.\n   * @param {*} custom\n   * @returns {object} React.Component\n   * @memberof BaseWindowPlugin\n   */\n  renderWindow(custom) {\n    const { target } = this.props.options;\n    // BaseWindowPlugin, which calls this method, will supply an object.\n    // If that object contains a render() function, we want to call it\n    // and bypass any other functionality from this method.\n    return typeof custom?.render === \"function\" ? (\n      custom.render()\n    ) : (\n      // If there was not custom render method, we do \"normal\" rendering.\n      // That includes rendering the plugin Window itself, as well as a\n      // button (that will trigger opening of the plugin Window).\n      <>\n        <Window\n          globalObserver={this.props.app.globalObserver}\n          title={this.state.title}\n          color={this.state.color}\n          onClose={this.closeWindow}\n          open={this.state.windowVisible}\n          onResize={this.props.custom.onResize}\n          onMaximize={this.props.custom.onMaximize}\n          onMinimize={this.props.custom.onMinimize}\n          draggingEnabled={this.props.custom.draggingEnabled}\n          customPanelHeaderButtons={this.props.custom.customPanelHeaderButtons}\n          resizingEnabled={this.props.custom.resizingEnabled}\n          scrollable={this.props.custom.scrollable}\n          allowMaximizedWindow={this.props.custom.allowMaximizedWindow}\n          disablePadding={this.props.custom.disablePadding}\n          width={this.width}\n          height={this.height}\n          position={this.position}\n          mode=\"window\"\n          layerswitcherConfig={this.props.app.config.mapConfig.tools.find(\n            (t) => t.type === \"layerswitcher\"\n          )}\n        >\n          {/* We have to pass windowVisible down to the children so that we can conditionally render\n          the <Tabs /> component, since it does not accept components with display: \"none\". We use the\n          windowVisible-prop to make sure that we don't render the <Tabs /> when the window\n          is not visible.*/}\n          {React.cloneElement(this.props.children, {\n            windowVisible: this.state.windowVisible,\n          })}\n        </Window>\n        {/* Always render a Drawer button unless its target is \"hidden\". \n              It's a backup for plugins render elsewhere: we hide \n              Widget and Control buttons on small screens and fall \n              back to Drawer button). */}\n        {target !== \"hidden\" && this.renderDrawerButton()}\n        {/* Widget buttons must also render a Widget */}\n        {this.pluginIsWidget(target) &&\n          this.renderWidgetButton(`${target}-column`)}\n        {/* Finally, render a Control button if target has that value */}\n        {target === \"control\" && this.renderControlButton()}\n      </>\n    );\n  }\n\n  /**\n   * This is a bit of a special case. This method will render\n   * not only plugins specified as Drawer plugins (target===toolbar),\n   * but it will also render Widget and Control plugins - given some special condition.\n   *\n   * Those special conditions are small screens, where there's no screen\n   * estate to render the Widget button in Map Overlay.\n   */\n  renderDrawerButton() {\n    return createPortal(\n      <Hidden\n        mdUp={\n          this.pluginIsWidget(this.props.options.target) ||\n          this.props.options.target === \"control\"\n        }\n      >\n        <ListItem\n          button\n          divider={true}\n          selected={this.state.windowVisible}\n          onClick={this.handleButtonClick}\n        >\n          <ListItemIcon>{this.props.custom.icon}</ListItemIcon>\n          <ListItemText primary={this.title} />\n        </ListItem>\n      </Hidden>,\n      document.getElementById(\"plugin-buttons\")\n    );\n  }\n\n  renderWidgetButton(id) {\n    return createPortal(\n      // Hide Widget button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <Card\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(id)\n    );\n  }\n\n  renderControlButton() {\n    return createPortal(\n      // Hide Control button on small screens, see renderDrawerButton too\n      <Hidden mdDown>\n        <PluginControlButton\n          icon={this.props.custom.icon}\n          onClick={this.handleButtonClick}\n          title={this.title}\n          abstract={this.description}\n        />\n      </Hidden>,\n      document.getElementById(\"plugin-control-buttons\")\n    );\n  }\n\n  render() {\n    // Don't render if \"clean\" query param is specified, otherwise go on\n    return (\n      this.props.app.config.mapConfig.map.clean !== true &&\n      this.renderWindow(this.props.custom)\n    );\n  }\n}\n\nexport default BaseWindowPlugin;\n","import React from \"react\";\nimport BaseWindowPlugin from \"../BaseWindowPlugin\";\n\nimport FormatShapesIcon from \"@mui/icons-material/FormatShapes\";\n\nimport EditView from \"./EditView.js\";\nimport EditModel from \"./EditModel.js\";\nimport Observer from \"react-event-observer\";\n\nclass Edit extends React.PureComponent {\n  onWindowHide = () => {\n    this.localObserver.publish(\"resetView\");\n    this.editModel.reset();\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!props.options.sources) {\n      console.log(\"F*ckin hell \" + props.options.title);\n    } else {\n      console.log(\"Huh?\");\n    }\n\n    this.localObserver = Observer();\n    this.editModel = new EditModel({\n      map: props.map,\n      app: props.app,\n      observer: this.localObserver,\n      options: props.options,\n    });\n  }\n\n  render() {\n    return (\n      <BaseWindowPlugin\n        {...this.props}\n        type=\"Edit\"\n        custom={{\n          icon: <FormatShapesIcon />,\n          title: \"Redigera\",\n          description: \"Redigera objekt i kartan (WFS)\",\n          height: 500,\n          width: 500,\n          top: undefined,\n          left: undefined,\n          onWindowHide: this.onWindowHide,\n        }}\n      >\n        <EditView\n          app={this.props.app}\n          model={this.editModel}\n          observer={this.localObserver}\n        />\n      </BaseWindowPlugin>\n    );\n  }\n}\n\nexport default Edit;\n","import { WFS } from \"ol/format\";\nimport { Style, Stroke, Fill, Circle, RegularShape } from \"ol/style\";\nimport { MultiPoint, Polygon } from \"ol/geom\";\nimport Vector from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { all as strategyAll } from \"ol/loadingstrategy\";\nimport { Select, Modify, Draw, Translate } from \"ol/interaction\";\nimport { never } from \"ol/events/condition\";\nimport X2JS from \"x2js\";\nimport { hfetch } from \"utils/FetchWrapper\";\n\nclass EditModel {\n  constructor(settings) {\n    console.log(\"Hello from EditModel: \" + settings.options.title);\n    this.map = settings.map;\n    this.app = settings.app;\n    this.observer = settings.observer;\n    this.options = settings.options;\n\n    this.activeServices = this.options.activeServices;\n    this.sources = this.options.sources;\n\n    this.vectorSource = undefined;\n    this.layer = undefined;\n    this.select = undefined;\n    this.modify = undefined;\n    this.key = undefined;\n    this.editFeature = undefined;\n    this.editFeatureBackup = undefined;\n    this.editSource = undefined;\n    this.removeFeature = undefined;\n    this.shell = undefined;\n    this.instruction = \"\";\n    this.filty = false;\n    this.removalToolMode = \"off\";\n\n    if (!this.options.sources || this.options.sources.length === 0) {\n      console.log(\"Fucking hell! Waarom?\");\n      this.options.sources = [\n        {\n          id: \"wat-een-ongelofelijke-klerezooi\",\n          url: \"http://localhost:81/geoserver/workspace_datastore_ckan_dataplatform_sandbox/ckan_geboorde-putten/ows\",\n          layers: [\n            \"workspace_datastore_ckan_dataplatform_sandbox:ckan_geboorde-putten\",\n          ],\n          projection: \"EPSG:28992\",\n          caption: \"Geboorde putten\",\n          uri: \"http://www.opengis.net/wfs\",\n        },\n      ];\n    } else {\n      console.log(\"Blub\");\n    }\n\n    // Normalize the sources that come from options.\n    this.options.sources = this.options.sources.map((s) => {\n      console.log(\"Godverdomme \" + s.caption);\n      // Namespace URI is required for insert. QGIS Server tends to accept this value.\n      if (s.uri.trim().length === 0) {\n        s.uri = \"http://www.opengis.net/wfs\";\n      }\n\n      // Get rid of the SERVICE=WFS attribute if existing: we will add it on the following requests\n      // while QGIS Server's WFS endpoint requires the SERVICE parameter to be preset. We'd\n      // end up with duplicate parameters, so the safest way around is to remove it, in a controlled\n      // manner, without disturbing the URL.\n      const url = new URL(s.url);\n      url.searchParams.delete(\"service\");\n      s.url = url.href;\n\n      return s;\n    });\n  }\n\n  write(features) {\n    var format = new WFS(),\n      lr = this.editSource.layers[0].split(\":\"),\n      fp = lr.length === 2 ? lr[0] : \"\",\n      ft = lr.length === 2 ? lr[1] : lr[0],\n      options = {\n        featureNS: this.editSource.uri,\n        featurePrefix: fp,\n        featureType: ft,\n        hasZ: false,\n        version: \"1.1.0\", // or \"1.0.0\"\n        srsName: this.editSource.projection,\n      };\n\n    return format.writeTransaction(\n      features.inserts,\n      features.updates,\n      features.deletes,\n      options\n    );\n  }\n\n  refreshLayer(layerName) {\n    var source,\n      foundLayer = this.map\n        .getLayers()\n        .getArray()\n        .find((layer) => {\n          var match = false;\n          if (layer.getSource().getParams) {\n            let params = layer.getSource().getParams();\n            if (typeof params === \"object\") {\n              // FIXME: Can be a bug here: we can't expect our edited layer to always be of index 0 if a LayerGroup (which gives Array so we must handle that as well)\n              let paramName = Array.isArray(params.LAYERS)\n                ? params.LAYERS[0].split(\":\")\n                : params.LAYERS.split(\":\");\n              let layerSplit = layerName.split(\":\");\n              if (paramName.length === 2 && layerSplit.length === 2) {\n                match = layerName === params.LAYERS;\n              }\n              if (paramName.length === 1) {\n                match = layerSplit[1] === params.LAYERS;\n              }\n            }\n          }\n          return match;\n        });\n\n    if (foundLayer) {\n      source = foundLayer.getSource();\n      source.changed();\n      source.updateParams({ time: Date.now() });\n      this.map.updateSize();\n    }\n  }\n\n  parseWFSTresponse(response) {\n    var str =\n      typeof response !== \"string\"\n        ? new XMLSerializer().serializeToString(response)\n        : response;\n    return new X2JS().xml2js(str);\n  }\n\n  transact(features, done) {\n    var node = this.write(features),\n      serializer = new XMLSerializer(),\n      src = this.editSource,\n      payload = node ? serializer.serializeToString(node) : undefined;\n\n    if (payload) {\n      hfetch(src.url, {\n        method: \"POST\",\n        body: payload,\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"text/xml\",\n        },\n      })\n        .then((response) => {\n          response.text().then((wfsResponseText) => {\n            const resXml = this.parseWFSTresponse(wfsResponseText);\n            if (resXml.ExceptionReport || !resXml.TransactionResponse) {\n              // do not delete the data so the user can submit it again\n              done(resXml);\n            } else {\n              this.refreshLayer(src.layers[0]);\n              this.vectorSource\n                .getFeatures()\n                .filter((f) => f.modification !== undefined)\n                .forEach((f) => (f.modification = undefined));\n              done(resXml);\n            }\n          });\n        })\n        .catch((response) => {\n          response.text().then((errorMessage) => {\n            done(errorMessage);\n          });\n        });\n    }\n  }\n\n  save(done) {\n    const find = (mode) =>\n      this.vectorSource\n        .getFeatures()\n        .filter((feature) => feature.modification === mode);\n\n    const features = {\n      updates: find(\"updated\").map((feature) => {\n        feature.unset(\"boundedBy\");\n        return feature;\n      }),\n      inserts: find(\"added\"),\n      deletes: find(\"removed\"),\n    };\n\n    if (\n      features.updates.length === 0 &&\n      features.inserts.length === 0 &&\n      features.deletes.length === 0\n    ) {\n      return done();\n    }\n\n    this.transact(features, done);\n  }\n\n  getSelectStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 255, 255, 1)\",\n          width: 3,\n        }),\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 255, 255, 1)\",\n            width: 2,\n          }),\n          radius: 3,\n        }),\n      }),\n      new Style({\n        image: new RegularShape({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.2)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 1)\",\n            width: 2,\n          }),\n          points: 4,\n          radius: 8,\n          angle: Math.PI / 4,\n        }),\n        geometry: (feature) => {\n          var coordinates =\n            feature.getGeometry() instanceof Polygon\n              ? feature.getGeometry().getCoordinates()[0]\n              : feature.getGeometry().getCoordinates();\n          return new MultiPoint(coordinates);\n        },\n      }),\n    ];\n  }\n\n  getVectorStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 1)\",\n          width: 3,\n        }),\n        fill: new Fill({\n          color: \"rgba(0, 0, 0, 0.5)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 1)\",\n            width: 3,\n          }),\n          radius: 4,\n        }),\n      }),\n    ];\n  }\n\n  getHiddenStyle(feature) {\n    return [\n      new Style({\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0)\",\n          width: 0,\n        }),\n        fill: new Fill({\n          color: \"rgba(1, 2, 3, 0)\",\n        }),\n        image: new Circle({\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(0, 0, 0, 0)\",\n            width: 0,\n          }),\n          radius: 0,\n        }),\n      }),\n    ];\n  }\n\n  getSketchStyle() {\n    return [\n      new Style({\n        fill: new Fill({\n          color: \"rgba(255, 255, 255, 0.5)\",\n        }),\n        stroke: new Stroke({\n          color: \"rgba(0, 0, 0, 0.5)\",\n          width: 4,\n        }),\n        image: new Circle({\n          radius: 6,\n          fill: new Fill({\n            color: \"rgba(0, 0, 0, 0.5)\",\n          }),\n          stroke: new Stroke({\n            color: \"rgba(255, 255, 255, 0.5)\",\n            width: 2,\n          }),\n        }),\n      }),\n    ];\n  }\n\n  filterByDefaultValue(features) {\n    return features.filter((feature) => {\n      return this.editSource.editableFields.some((field) => {\n        var value = feature.getProperties()[field.name];\n        if (field.hidden && value === field.defaultValue) {\n          return true;\n        }\n        return false;\n      });\n    });\n  }\n\n  loadDataSuccess = (data) => {\n    var format = new WFS();\n    var features;\n    try {\n      features = format.readFeatures(data);\n    } catch (e) {\n      alert(\"Fel: data kan inte läsas in. Kontrollera koordinatsystem.\");\n    }\n\n    // Make sure we have a name for geometry column. If there are features already,\n    // take a look at the first one and get geometry field's name from that first feature.\n    // If there are no features however, default to 'geom'. If we don't then OL will\n    // fallback to its own default geometry field name, which happens to be 'geometry' and not 'geom.\n    this.geometryName =\n      features.length > 0 ? features[0].getGeometryName() : \"geom\";\n\n    if (this.editSource.editableFields.some((field) => field.hidden)) {\n      features = this.filterByDefaultValue(features);\n    }\n\n    this.vectorSource.addFeatures(features);\n    this.vectorSource.getFeatures().forEach((feature) => {\n      feature.on(\"propertychange\", (e) => {\n        if (feature.modification === \"removed\") {\n          return;\n        }\n        if (feature.modification === \"added\") {\n          return;\n        }\n        feature.modification = \"updated\";\n      });\n      feature.on(\"change\", (e) => {\n        if (feature.modification === \"removed\") {\n          return;\n        }\n        if (feature.modification === \"added\") {\n          return;\n        }\n        feature.modification = \"updated\";\n      });\n    });\n  };\n\n  loadData(source, extent, done) {\n    // Prepare the URL for retrieving WFS data. We will want to set\n    // some search params later on, but we want to avoid any duplicates.\n    // The values we will set below should override any existing, if\n    // same key already exists in URL.\n    // To ensure it will happen, we read the possible current params…\n    const url = new URL(source.url);\n\n    // …and make sure that the keys are in UPPER CASE.\n    const existingSearchParams = {};\n    for (const [k, v] of url.searchParams.entries()) {\n      existingSearchParams[k.toUpperCase()] = v;\n    }\n\n    // Now we merge the possible existing params with the rest, defined\n    // below. We can be confident that we won't have duplicates and that\n    // our values \"win\", as they are defined last.\n    const mergedSearchParams = {\n      ...existingSearchParams,\n      SERVICE: \"WFS\",\n      VERSION: \"1.1.0\",\n      REQUEST: \"GetFeature\",\n      TYPENAME: source.layers[0],\n      SRSNAME: source.projection,\n    };\n\n    // Create a new URLSearchParams object from the merged object…\n    const searchParams = new URLSearchParams(mergedSearchParams);\n    // …and update our URL's search string with the new value\n    url.search = searchParams.toString();\n\n    // Send a String as HFetch doesn't currently accept true URL objects\n    hfetch(url.toString())\n      .then((response) => {\n        if (response.status !== 200) {\n          return done(\"data-load-error\");\n        }\n        response.text().then((data) => {\n          if (data.includes(\"ows:ExceptionReport\")) {\n            return done(\"data-load-error\");\n          }\n          this.loadDataSuccess(data);\n          return done(\"data-load-success\");\n        });\n      })\n      .catch((error) => {\n        console.warn(`Error loading vectorsource... ${error}`);\n        return done(\"data-load-error\");\n      });\n  }\n\n  editAttributes(feature) {\n    this.editFeature = feature;\n    this.observer.publish(\"editFeature\", feature);\n  }\n\n  featureSelected(event) {\n    if (event.selected.length === 0) {\n      this.editAttributes(null, null);\n    }\n\n    event.selected.forEach((feature) => {\n      if (!feature.getId() && feature.getProperties().user) {\n        this.select.getFeatures().remove(feature);\n      }\n      event.mapBrowserEvent.filty = true;\n      this.editAttributes(feature);\n    });\n  }\n\n  refreshEditingLayer() {\n    var mapLayers = this.map\n      .getLayers()\n      .getArray()\n      .filter(\n        (layer) => layer.getProperties().caption === this.editSource.caption\n      );\n\n    mapLayers.forEach((mapLayer) => {\n      if (mapLayer.getSource) {\n        let s = mapLayer.getSource();\n        if (s.clear) {\n          s.clear();\n        }\n        if (s.getParams) {\n          var params = s.getParams();\n          params.t = new Date().getMilliseconds();\n          s.updateParams(params);\n        }\n        if (s.changed) {\n          s.changed();\n        }\n      }\n    });\n  }\n\n  setLayer(serviceId, done) {\n    this.source = this.sources.find((source) => source.id === serviceId);\n    if (!this.source) {\n      this.source = {\n        id: serviceId,\n        url: \"http://localhost:81/geoserver/workspace_datastore_ckan_dataplatform_sandbox/ckan_geboorde-putten/ows\",\n        layers: [\n          \"workspace_datastore_ckan_dataplatform_sandbox:ckan_geboorde-putten\",\n        ],\n        editPoint: true,\n        projection: \"EPSG:28992\",\n        caption: \"Geboorde putten\",\n        uri: \"http://workspace_datastore_ckan_dataplatform_sandbox\",\n        editableFields: [\n          {\n            alias: \"x_coordinaat\",\n            name: \"http://workspace_datastore_ckan_dataplatform_sandbox:x_coordinaat\",\n            dataType: \"text\", // int | integer | number | decimal | date | date-time | dateTime | boolean\n            textType: \"\", // heltal | nummer | datum | date-time | boolean\n          },\n        ],\n      };\n    }\n    this.filty = true;\n    this.vectorSource = new VectorSource({\n      loader: (extent) => this.loadData(this.source, extent, done),\n      strategy: strategyAll,\n      projection: this.source.projection,\n    });\n\n    this.layer = new Vector({\n      layerType: \"system\",\n      zIndex: 5000,\n      name: \"pluginEdit\",\n      caption: \"Edit layer\",\n      source: this.vectorSource,\n      style: this.getVectorStyle(),\n    });\n\n    if (this.layer) {\n      this.map.removeLayer(this.layer);\n    }\n\n    this.map.addLayer(this.layer);\n    this.editSource = this.source;\n    this.editFeature = null;\n    this.observer.publish(\"editSource\", this.source);\n    this.observer.publish(\"editFeature\", null);\n    this.observer.publish(\"layerChanged\", this.layer);\n  }\n\n  activateModify() {\n    this.select = new Select({\n      style: this.getSelectStyle(),\n      toggleCondition: never,\n      layers: [this.layer],\n    });\n\n    this.select.on(\"select\", (event) => {\n      this.featureSelected(event, this.source);\n    });\n\n    this.modify = new Modify({\n      features: this.select.getFeatures(),\n    });\n    this.map.addInteraction(this.select);\n    this.map.addInteraction(this.modify);\n  }\n\n  activateAdd(geometryType) {\n    this.draw = new Draw({\n      source: this.vectorSource,\n      style: this.getSketchStyle(),\n      type: geometryType,\n      stopClick: true,\n      geometryName: this.geometryName,\n    });\n    this.draw.on(\"drawend\", (event) => {\n      event.feature.modification = \"added\";\n      this.editAttributes(event.feature);\n      // OpenLayers seems to have a problem stopping the clicks if\n      // the draw interaction is removed too early. This fix is not pretty,\n      // but it gets the job done. It seems to be enough to remove the draw\n      // interaction after one cpu-cycle.\n      // If this is not added, the user will get a zoom-event when closing\n      // a polygon drawing.\n      setTimeout(() => {\n        this.deactivateInteraction();\n      }, 1);\n    });\n    this.map.addInteraction(this.draw);\n    this.map.clickLock.add(\"edit\");\n  }\n\n  activateRemove() {\n    this.remove = true;\n    this.map.on(\"singleclick\", this.removeSelected);\n  }\n\n  activateMove() {\n    this.move = new Translate({\n      layers: [this.layer],\n    });\n    this.map.addInteraction(this.move);\n  }\n\n  activateInteraction(type, geometryType) {\n    if (type === \"add\") {\n      this.activateAdd(geometryType);\n    }\n    if (type === \"move\") {\n      this.activateMove();\n    }\n    if (type === \"modify\") {\n      this.activateModify();\n    }\n    if (type === \"remove\") {\n      this.map.clickLock.add(\"edit\");\n      this.activateRemove();\n    }\n\n    // Add snap after all interactions have been added\n    this.map.snapHelper.add(\"measure\");\n  }\n\n  removeSelected = (e) => {\n    this.map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      if (this.vectorSource.getFeatures().some((f) => f === feature)) {\n        if (feature.modification === \"added\") {\n          feature.modification = undefined;\n        } else {\n          feature.modification = \"removed\";\n        }\n        feature.setStyle(this.getHiddenStyle());\n      }\n    });\n  };\n\n  deactivateInteraction() {\n    // First remove the snap interaction\n    this.map.snapHelper.delete(\"measure\");\n\n    // Next, remove correct map interaction\n    if (this.select) {\n      this.map.removeInteraction(this.select);\n    }\n    if (this.modify) {\n      this.map.removeInteraction(this.modify);\n    }\n    if (this.draw) {\n      this.map.removeInteraction(this.draw);\n    }\n    if (this.move) {\n      this.map.removeInteraction(this.move);\n    }\n    if (this.remove) {\n      this.remove = false;\n      this.map.clickLock.delete(\"edit\");\n      this.map.un(\"singleclick\", this.removeSelected);\n    }\n  }\n\n  reset() {\n    this.editSource = undefined;\n    this.editFeature = undefined;\n    this.removeFeature = undefined;\n    this.removalToolMode = \"off\";\n    this.filty = false;\n    this.map.clickLock.delete(\"edit\");\n\n    if (this.layer) {\n      this.map.removeLayer(this.layer);\n      this.layer = undefined;\n    }\n    this.deactivateInteraction();\n  }\n\n  resetEditFeature = () => {\n    this.editFeatureBackup = this.editFeature;\n    this.editFeature = undefined;\n    this.observer.publish(\"editFeature\", this.editFeature);\n  };\n\n  deactivate() {\n    this.reset();\n    this.observer.publish(\"editFeature\", this.editFeature);\n    this.observer.publish(\"editSource\", this.editSource);\n    this.observer.publish(\"deactivate\");\n  }\n\n  getSources() {\n    return this.options.sources;\n  }\n}\n\nexport default EditModel;\n"],"names":["StyledCard","styled","MUICard","theme","marginBottom","spacing","width","breakpoints","down","boxShadow","borderBottom","borderRadius","margin","justifyContent","StyledAvatar","Avatar","background","palette","text","primary","Card","React","state","open","render","abstract","icon","onClick","title","this","props","avatar","subheader","defaultProps","BaseWindowPlugin","constructor","super","handleButtonClick","e","showWindow","hideOtherPluginWindows","runCallback","app","globalObserver","publish","opts","activeTool","type","eventName","pluginName","activeMap","config","pushPluginIntoHistory","custom","description","windowVisible","onWindowOpen","setState","onWindowShow","closeWindow","undefined","onWindowHide","toLowerCase","options","visibleAtStart","mapConfig","map","clean","isMobile","visibleAtStartMobile","color","height","position","registerWindowPlugin","subscribe","closeEventName","componentDidUpdate","prevProps","pluginIsWidget","target","includes","renderWindow","onClose","onResize","onMaximize","onMinimize","draggingEnabled","customPanelHeaderButtons","resizingEnabled","scrollable","allowMaximizedWindow","disablePadding","mode","layerswitcherConfig","tools","find","t","children","renderDrawerButton","renderWidgetButton","renderControlButton","createPortal","mdUp","button","divider","selected","document","getElementById","id","mdDown","Edit","localObserver","editModel","reset","sources","console","log","Observer","EditModel","observer","top","left","model","settings","loadDataSuccess","data","features","format","WFS","readFeatures","alert","geometryName","length","getGeometryName","editSource","editableFields","some","field","hidden","filterByDefaultValue","vectorSource","addFeatures","getFeatures","forEach","feature","on","modification","removeSelected","forEachFeatureAtPixel","pixel","f","setStyle","getHiddenStyle","resetEditFeature","editFeatureBackup","editFeature","activeServices","layer","select","modify","key","removeFeature","shell","instruction","filty","removalToolMode","url","layers","projection","caption","uri","s","trim","URL","searchParams","delete","href","write","lr","split","fp","ft","featureNS","featurePrefix","featureType","hasZ","version","srsName","writeTransaction","inserts","updates","deletes","refreshLayer","layerName","source","foundLayer","getLayers","getArray","match","getSource","getParams","params","paramName","Array","isArray","LAYERS","layerSplit","changed","updateParams","time","Date","now","updateSize","parseWFSTresponse","response","str","XMLSerializer","serializeToString","X2JS","xml2js","transact","done","node","serializer","src","payload","hfetch","method","body","credentials","headers","then","wfsResponseText","resXml","ExceptionReport","TransactionResponse","filter","catch","errorMessage","save","unset","getSelectStyle","Style","stroke","Stroke","fill","Fill","image","Circle","radius","RegularShape","points","angle","Math","PI","geometry","coordinates","getGeometry","Polygon","getCoordinates","MultiPoint","getVectorStyle","getSketchStyle","value","getProperties","name","defaultValue","loadData","extent","existingSearchParams","k","v","entries","toUpperCase","mergedSearchParams","SERVICE","VERSION","REQUEST","TYPENAME","SRSNAME","URLSearchParams","search","toString","status","error","warn","editAttributes","featureSelected","event","getId","user","remove","mapBrowserEvent","refreshEditingLayer","mapLayer","clear","getMilliseconds","setLayer","serviceId","editPoint","alias","dataType","textType","VectorSource","loader","strategy","strategyAll","Vector","layerType","zIndex","style","removeLayer","addLayer","activateModify","Select","toggleCondition","never","Modify","addInteraction","activateAdd","geometryType","draw","Draw","stopClick","setTimeout","deactivateInteraction","clickLock","add","activateRemove","activateMove","move","Translate","activateInteraction","snapHelper","removeInteraction","un","deactivate","getSources"],"sourceRoot":""}
