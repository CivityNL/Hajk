{"version":3,"file":"static/js/8177.499876b2.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/BrokenImage.js","../node_modules/@mui/material/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/CardActionArea/CardActionArea.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/ol/Overlay.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 5v6.59l-3-3.01-4 4.01-4-4-4 4-3-3.01V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2zm-3 6.42 3 3.01V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-6.58l3 2.99 4-4 4 4 4-3.99z\"\n}), 'BrokenImage');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"focusVisibleClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from './cardActionAreaClasses';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n}));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight',\n  overridesResolver: (props, styles) => styles.focusHighlight\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n}));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n      children,\n      className,\n      focusVisibleClassName\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(CardActionAreaRoot, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [children, /*#__PURE__*/_jsx(CardActionAreaFocusHighlight, {\n      className: classes.focusHighlight,\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardActionAreaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionAreaRoot","styled","ButtonBase","name","overridesResolver","props","styles","root","theme","display","textAlign","width","cardActionAreaClasses","opacity","vars","palette","action","hoverOpacity","focusOpacity","CardActionAreaFocusHighlight","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","React","inProps","ref","useThemeProps","children","className","focusVisibleClassName","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsxs","_extends","clsx","focusVisible","_jsx","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","title","subheader","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","Typography","variant","color","as","getCardUtilityClass","CardRoot","Paper","raised","elevation","undefined","Property","Overlay","BaseObject","constructor","options","super","this","on","once","un","id","insertFirst","stopEvent","element","document","createElement","CLASS_SELECTABLE","style","autoPan","rendered","transform_","visible","mapPostrenderListenerKey","addChangeListener","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","setPosition","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","removeChildren","appendChild","removeNode","unlistenByKey","map","listen","MapEventType","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","set","setMap","panIntoView","panIntoViewOptions","getTargetElement","mapRect","getRect","getSize","overlayRect","outerWidth","outerHeight","myMargin","margin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animation","animateInternal","getCoordinateFromPixelInternal","easing","size","box","getBoundingClientRect","offsetX","window","pageXOffset","offsetY","pageYOffset","setVisible","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","x","round","y","posX","posY","transform","getOptions"],"sourceRoot":""}